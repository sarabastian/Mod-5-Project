[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js":"23","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js":"24","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SupportingProjectsContainer.js":"25","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectsCard.js":"26","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectShow.js":"27","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/SupportingProjectTab.js":"28","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js":"29","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectPostCard.js":"30","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/PostCard.js":"31","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectsContainerNavbar.js":"32","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectShowNavbar.js":"33","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCommentCard.js":"34","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Signup.js":"35","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SearchResultsContainer.js":"36","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsCard.js":"37","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsShow.js":"38","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SearchResultsNav.js":"39","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectSupporterCard.js":"40"},{"size":362,"mtime":1610662302244,"results":"41","hashOfConfig":"42"},{"size":6228,"mtime":1610931717332,"results":"43","hashOfConfig":"42"},{"size":4563,"mtime":1611433268009,"results":"44","hashOfConfig":"42"},{"size":500,"mtime":1610662302243,"results":"45","hashOfConfig":"42"},{"size":590,"mtime":1610832419708,"results":"46","hashOfConfig":"42"},{"size":1376,"mtime":1611334970112,"results":"47","hashOfConfig":"42"},{"size":2405,"mtime":1611272294510,"results":"48","hashOfConfig":"42"},{"size":287,"mtime":1610931692896,"results":"49","hashOfConfig":"42"},{"size":1752,"mtime":1610931700597,"results":"50","hashOfConfig":"42"},{"size":746,"mtime":1610931682809,"results":"51","hashOfConfig":"42"},{"size":10404,"mtime":1611248375434,"results":"52","hashOfConfig":"42"},{"size":5728,"mtime":1611335366642,"results":"53","hashOfConfig":"42"},{"size":15069,"mtime":1611330283368,"results":"54","hashOfConfig":"42"},{"size":2490,"mtime":1611286549365,"results":"55","hashOfConfig":"42"},{"size":5020,"mtime":1611286128284,"results":"56","hashOfConfig":"42"},{"size":3571,"mtime":1611429037917,"results":"57","hashOfConfig":"42"},{"size":9009,"mtime":1611354770007,"results":"58","hashOfConfig":"42"},{"size":9696,"mtime":1611287671108,"results":"59","hashOfConfig":"42"},{"size":5505,"mtime":1611286860426,"results":"60","hashOfConfig":"42"},{"size":4956,"mtime":1611287798636,"results":"61","hashOfConfig":"42"},{"size":1338,"mtime":1611075337535,"results":"62","hashOfConfig":"42"},{"size":4325,"mtime":1611087469037,"results":"63","hashOfConfig":"42"},{"size":1615,"mtime":1611287061452,"results":"64","hashOfConfig":"42"},{"size":4274,"mtime":1611431744277,"results":"65","hashOfConfig":"42"},{"size":1416,"mtime":1611524411493,"results":"66","hashOfConfig":"42"},{"size":2850,"mtime":1611271045103,"results":"67","hashOfConfig":"42"},{"size":2122,"mtime":1611271470195,"results":"68","hashOfConfig":"42"},{"size":5361,"mtime":1611271185686,"results":"69","hashOfConfig":"42"},{"size":1635,"mtime":1611272137822,"results":"70","hashOfConfig":"42"},{"size":1072,"mtime":1611271198262,"results":"71","hashOfConfig":"42"},{"size":1159,"mtime":1611268512610,"results":"72","hashOfConfig":"42"},{"size":4202,"mtime":1611510959857,"results":"73","hashOfConfig":"42"},{"size":4202,"mtime":1611511013516,"results":"74","hashOfConfig":"42"},{"size":1625,"mtime":1611287053353,"results":"75","hashOfConfig":"42"},{"size":5341,"mtime":1611336315144,"results":"76","hashOfConfig":"42"},{"size":825,"mtime":1611510653230,"results":"77","hashOfConfig":"42"},{"size":2908,"mtime":1611510047827,"results":"78","hashOfConfig":"42"},{"size":3970,"mtime":1611524239499,"results":"79","hashOfConfig":"42"},{"size":3667,"mtime":1611510703539,"results":"80","hashOfConfig":"42"},{"size":4335,"mtime":1611287127897,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"18w8y2t",{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],["177","178"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["179","180","181"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["182","183","184"],"\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Main from './containers/Main';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ProjectShow from './components/ProjectShow';\nimport CreateProject from './components/CreateProject';\nimport NewProjectContainer from './containers/NewProjectContainer';\nimport SupportingProjectsContainer from './containers/SupportingProjectsContainer';\nimport SupportingProjectShow from './components/SupportingProjectShow';\nimport SearchResultsContainer from './containers/SearchResultsContainer';\nimport SearchResultsShow from './components/SearchResultsShow';\nimport { Redirect } from \"react-router-dom\";\n\n\nclass App extends React.Component {\n  state = {\n    isloggedin: false\n  }\n\n  componentDidMount(){\n    this.handleLogin();\n  }\n\n  handleLogin = () => {\n    if(localStorage.getItem('token')) {\n      this.setState({ isloggedin: true})\n    }\n  }\n\n\n  render() {\n\n    \n \n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n           \n            \n            <Route exact path=\"/login\" component={() => <Login login={this.state.isloggedin} handleLogin={this.handleLogin} />} />\n            <Route exact path=\"/signup\" component={() => <Signup login={this.state.isloggedin} handleLogin={this.handleLogin} />} />\n            <Route exact path=\"/my-projects\" component={() => <Main  /> } />\n            <Route exact path=\"/search\" component={() => <SearchResultsContainer />} />\n            <Route exact path=\"/search-results\" component={() => <SearchResultsShow />} />\n            <Route exact path=\"/show\" component={() => <ProjectShow />} />\n            <Route exact path=\"/create\" component={() => <CreateProject />} />\n            <Route exact path=\"/new\" component={() => <NewProjectContainer />} />\n            <Route exact path=\"/supporting-projects\" component={() => <SupportingProjectsContainer />} />\n            <Route exact path=\"/supporting-project\" component={() => <SupportingProjectShow />} />\n            <Route exact path =\"/logout\" component = {()=>{\n              localStorage.clear()\n             \n              return <Redirect to=\"/login\"/>     }}/>\n           \n   \n\n\n          </Switch>\n       </Router>\n            \n       \n          \n      </div>\n\n    );\n  }\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   const [user, setUser] = useState({})\n//   const [form, setForm] = useState(\"\")\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\")\n//     if (token) {\n//       fetch('http://localhost:3001/api/v1/auto_login', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       })\n//         .then(resp => resp.json())\n//         .then(data => {\n//           setUser(data)\n//           // console.log(data)\n//         })\n//     }\n//   }, [])\n//   const handleLogin = (user) => {\n//     setUser(user)\n//   }\n\n//   const handleFormSwitch = (input) => {\n//     setForm(input)\n//   }\n//   const handleAuthClick = () => {\n//     const token = localStorage.getItem(\"token\")\n//     fetch(`http://localhost:3001/api/v1/user_is_authed`, {\n//       headers: {\n//         \"Authorization\": `Bearer ${token}`\n//       }\n//     })\n//       .then(resp => resp.json())\n//       .then(data => console.log(data))\n//   }\n\n//   console.log(user)\n\n//   const renderForm = () => {\n//     switch (form) {\n//       case \"login\":\n//         return <Login handleLogin={handleLogin} />\n//         break;\n//       default:\n//       // return <SignInForm handleLogin={handleLogin}/>\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n\n//       <Header handleFormSwitch={handleFormSwitch} />\n//       {\n//         renderForm()\n//       }\n//       <button onClick={handleAuthClick} className=\"ui button\">Access Authorized Route</button>\n  \n   \n//   <Router history={history}>\n//     <Switch>\n//       <Route exact path='/'> <Mainrender={(props)/> </Route>\n//       {/* <Route exact path=\"/\" render={(props) => <WelcomeBanner {...props} history={history} />} /> */}\n//       <Route exact path=\"/recipes\" render={() => <RecipeCollection menus={menus} />} />\n//       <Route path=\"/recipes/\" render={(props) => <RecipePage {...props} menus={menus} />} />\n//       <Route path=\"/menu\" render={(props) => <MenuPage {...props} user={user_id} menus={menus} />} />\n//     </Switch>\n//   </Router>\n//   {/* Footer? */ }\n//   </div>\n//   );\n\n// }\n\n\n\n\n",["185","186"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["187","188"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],["189","190"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["191","192","193"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["194"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["195","196","197","198"],"import React, { useEffect } from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { Redirect } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\n\n\nconst useStyle = makeStyles({\n  root: {\n      minWidth: 275,\n      height: 400\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 24,\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\n\n\nconst useAccordionStyles = makeStyles((theme) => ({\n  root: {\n    width: '400%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst ProjectShow = () =>  {\n    const data = useLocation()\n    const styles = useStyle();\n    const accordionClasses = useAccordionStyles();\n\n\n    const [open, setOpen] = React.useState(false);\n    const [story, setStory] = React.useState(data.state.project.story);\n    const [timeline, setTimeline] = React.useState(data.state.project.timeline);\n    const [fundraising_goal, setFundraisingGoal] = React.useState(data.state.project.fundraising_goal);\n    const [deleted, setDelete] = React.useState(false);\n    const [githubChange, setGithubChange] = React.useState(data.state.project.github);\n    const [currentProject, setCurrentProject] = React.useState([])\n    const [updatedProject, setUpdatedProject] = React.useState([])\n    const [changedStory, setClickforChangedStory] = React.useState(false)\n    const [changedTimeline, setClickforChangedTimeline] = React.useState(false)\n    const [changedFundraising, setClickforChangedFundraising] = React.useState(false)\n  \n    const handleStoryChange = (event) => {\n      setClickforChangedStory(true);\n      setStory(event.target.value) ;\n    };\n\n    const handleTimelineChange = (event) => {\n      setClickforChangedTimeline(true);\n      setTimeline(event.target.value) ;\n    };\n  \n    const handleFundraisingChange = (event) => {\n      setClickforChangedFundraising(true);\n      setFundraisingGoal(event.target.value)\n    };\n\n    const handleGithubChange = (event) => {\n      setGithubChange(event.target.value)\n    }\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n  \n  \n    const handleDelete = () => {\n      setDelete(true);\n      fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n        method: 'DELETE'\n        })\n      \n    }\n\n   \n  // console.log(useLocation())\n\n \n  const handleStoryUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        story: story\n      })\n    })\n    .then(res => res.json())\n    .then(project => setUpdatedProject(project))\n  }\n\n  const handleTimelineUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n         timeline: timeline\n      })\n    })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n  } \n\nconst handleFundraisingUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      fundraising_goal: fundraising_goal\n    })\n  })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n}\n\n// const handleGithubUpdate = () => {\n//   fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n//     method:'PATCH',\n//     headers:{\n//       'Content-Type':'application/json',\n//         Accept: 'application/json',\n//     },\n//     body: JSON.stringify({\n//       github: githubChange\n//     })\n//   })\n//   .then(res => res.json())\n//   .then(project => setUpdatedProject(project))\n//   }\n\nuseEffect(() => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`)\n    .then(res => res.json())\n    .then(project => setCurrentProject(project));\n}, []);\n\n  \n    // console.log(currentProject)\n\n    return (\n      deleted ? <Redirect to=\"/my-projects\" /> : \n  <div>\n  \n   \n      <ProjectShowNav user={data.state.user} project={data.state.project}/>\n\n      <div>\n      <Card className={styles.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                    {currentProject.title}\n                    <IconButton  onClick={handleClickOpen}><DeleteOutlinedIcon  color=\"secondary\"/>\n                   \n                \n                      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{'Are you sure you want to delete this project?'}</DialogTitle>\n     \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick ={handleDelete} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n                   \n            \n                   \n                    </IconButton>\n          </Typography>\n        \n          \n       \n                 \n                   <IconButton onClick={handleStoryUpdate} >   \n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={accordionClasses.heading}>{changedStory ? updatedProject.story : currentProject.story}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <form>\n        <TextField onChange={e => handleStoryChange(e)}\n            autoFocus\n            fullWidth\n            defaultValue={currentProject.story}\n            name='story'\n    \n            fullWidth\n          />\n          </form>\n        </AccordionDetails>\n      </Accordion>\n      </div>\n      </IconButton>\n         \n            \n                   <IconButton onClick={handleTimelineUpdate}>\n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          minWidth\n        >\n          <Typography className={accordionClasses.heading}> timeline: {changedTimeline ? updatedProject.timeline : currentProject.timeline} days</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleTimelineChange(e)}\n            autoFocus\n            margin=\"dense\"\n            name='timeline'\n            defaultValue={currentProject.timeline}\n            fullWidth\n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n\n        <IconButton onClick={handleFundraisingUpdate}>\n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={accordionClasses.heading}>fundraising goal: ${changedFundraising ? updatedProject.fundraising_goal : currentProject.fundraising_goal}</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleFundraisingChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            defaultValue={currentProject.fundraising_goal}\n            name='fundraising_goal'\n            fullWidth\n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n\n                \n        {/* <Link href={changedProject ? updatedProject.github : currentProject.github} >\n          <GitHubIcon />\n          </Link> */}\n        {/* <Accordion>\n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          size='xs'\n        />\n         <AccordionDetails>\n          <TextField onChange={e => handleGithubChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            defaultValue={currentProject.github}\n            name='github'\n            fullWidth\n          /> */}\n        \n    \n        {/* <Typography className={accordionClasses.heading}>\n\n          \n             \n             \n                </Typography>\n                </AccordionDetails>\n              </Accordion>\n           */}\n\n            </CardContent>\n      \n        </Card>\n        </div>\n      \n  \n      <ProjectTabs project={data.state.project} user={data.state.user} posts={data.state.posts}\n                  supporters={data.state.supporters} comments={data.state.comments}\n                  commenters={data.state.commenters} />\n                \n                    \n                    \n               \n              </div>      \n \n                    \n                    \n                    \n\n        )\n    }\n\n\nexport default ProjectShow;",["199","200"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["201"],"import React, {useState} from 'react';\nimport  TextField  from '@material-ui/core/TextField';\nimport Button  from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Signup from './Signup'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props){\n  const classes = useStyles();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleUsername = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handlePassword = (e) => {\n\n    setPassword(e.target.value)\n  }\n\n  const handleSubmit = (e) => {\n    console.log('working')\n    e.preventDefault()\n  \n    fetch('http://localhost:3001/api/v1/login',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {  \n        username: username,\n        password: password\n        }\n      })\n    }).then(response => response.json())\n  \n    .then(data => {\n        \n            console.log(data.user_info)\n            console.log(data)\n            localStorage.setItem('token', data.user_info.user_id)\n            props.handleLogin()\n            history.push('/my-projects')\n        })\n  \n  }\n \n   \n  return (\n<Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField onChange={handleUsername}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              value={username}\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField onChange={handlePassword}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              value={password}\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button onClick={handleSubmit}\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n   \n    /* <form onSubmit={handleSubmit}>\n\n \n    \n            <h2 className=\"text-center\">Welcome</h2>\n         \n            <FormControl>\n                 <InputLabel>Username</InputLabel>\n          \n             <Input name=\"username\" placeholder=\"Username\" onChange={handleUsername} value={username}/>\n             </FormControl>\n           \n            <FormControl>\n                <InputLabel>Password</InputLabel>\n                <Input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handlePassword} value={password}/>\n            </FormControl>\n        \n            <Button  type=\"submit\" className=\"btn-lg btn-dark btn-block\">Log in</Button>\n        \n          \n     \n  \n    \n    </form> */\n    )\n  }\n  \n\n\n\n",["202","203"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["204","205","206","207","208"],"import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { checkPropTypes } from 'prop-types';\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const [project, setProject] = useState([]);\n    const data = useLocation();\n\n\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    const history = useHistory();\n\n  \n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => \n          history.push({\n              pathname: \"/new\", \n              state: {\n                  project\n              }})\n          )}\n\n\n    // const details = {\n    //     'Title': title,\n    //     'Story': story,\n    //     'Timeline': timeline,\n    //     'Fundraising Goal': fundraising_goal,\n    //     'Image': image,\n    //     'Github': github,\n    //     'Language': language,\n    //     'Stage': stage,\n    //     'User': data.state.user\n\n    // }\n    // console.log(details);\n\n\n\n    return (\n      \n       \n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Cover image?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n              \n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                \n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n \n    );\n}\n\nexport default withRouter(CreateProject)","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["209","210","211"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["232","233","234","235","236","237"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["238","239","240","241","242","243","244","245"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["246","247","248","249","250","251"],"import React, { useEffect } from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { Redirect } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport NewProjectTabs from './Tabs/NewProjectTabs'\n\n\n\nconst useStyle = makeStyles({\n  root: {\n      minWidth: 275,\n      height: 400\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 24,\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\n\n\nconst useAccordionStyles = makeStyles((theme) => ({\n  root: {\n    width: '400%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\nfunction NewProjectCard(props) {\n  const data = useLocation()\n  const styles = useStyle();\n  const accordionClasses = useAccordionStyles();\n\n\n  const [open, setOpen] = React.useState(false);\n  const [story, setStory] = React.useState(data.state.project.story);\n  const [timeline, setTimeline] = React.useState(data.state.project.timeline);\n  const [fundraising_goal, setFundraisingGoal] = React.useState(data.state.project.fundraising_goal);\n  const [deleted, setDelete] = React.useState(false);\n  const [githubChange, setGithubChange] = React.useState(data.state.project.github);\n  const [currentProject, setCurrentProject] = React.useState([])\n  const [updatedProject, setUpdatedProject] = React.useState([])\n  const [changedStory, setClickforChangedStory] = React.useState(false)\n  const [changedTimeline, setClickforChangedTimeline] = React.useState(false)\n  const [changedFundraising, setClickforChangedFundraising] = React.useState(false)\n\n  const handleStoryChange = (event) => {\n    setClickforChangedStory(true);\n    setStory(event.target.value) ;\n  };\n\n  const handleTimelineChange = (event) => {\n    setClickforChangedTimeline(true);\n    setTimeline(event.target.value) ;\n  };\n\n  const handleFundraisingChange = (event) => {\n    setClickforChangedFundraising(true);\n    setFundraisingGoal(event.target.value)\n  };\n\n  const handleGithubChange = (event) => {\n    setGithubChange(event.target.value)\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n\n  const handleDelete = () => {\n    setDelete(true);\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n      method: 'DELETE'\n      })\n    \n  }\n\n \n// console.log(useLocation())\n\n\nconst handleStoryUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      story: story\n    })\n  })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n}\n\nconst handleTimelineUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n       timeline: timeline\n    })\n  })\n.then(res => res.json())\n.then(project => setUpdatedProject(project))\n} \n\nconst handleFundraisingUpdate = () => {\nfetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n  method:'PATCH',\n  headers:{\n    'Content-Type':'application/json',\n      Accept: 'application/json',\n  },\n  body: JSON.stringify({\n    fundraising_goal: fundraising_goal\n  })\n})\n.then(res => res.json())\n.then(project => setUpdatedProject(project))\n}\n\n// const handleGithubUpdate = () => {\n//   fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n//     method:'PATCH',\n//     headers:{\n//       'Content-Type':'application/json',\n//         Accept: 'application/json',\n//     },\n//     body: JSON.stringify({\n//       github: githubChange\n//     })\n//   })\n//   .then(res => res.json())\n//   .then(project => setUpdatedProject(project))\n//   }\n\nuseEffect(() => {\nfetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n  .then(res => res.json())\n  .then(project => setCurrentProject(project));\n}, []);\n\nconsole.log(currentProject)\n  // console.log(currentProject)\n\n  return (\n    deleted ? <Redirect to=\"/my-projects\" /> : \n    <div>\n\n    <Card className={styles.root} variant=\"outlined\">\n          <CardContent>\n              <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                  {currentProject.title}\n                  <IconButton  onClick={handleClickOpen}><DeleteOutlinedIcon  color=\"secondary\"/>\n                 \n              \n                    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{'Are you sure you want to delete this project?'}</DialogTitle>\n   \n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          No\n        </Button>\n        <Button onClick ={handleDelete} color=\"primary\" autoFocus>\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n                 \n          \n                 \n                  </IconButton>\n        </Typography>\n      \n        \n     \n               \n                 <IconButton onClick={handleStoryUpdate} >   \n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={accordionClasses.heading}>{changedStory ? updatedProject.story : currentProject.story}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <form>\n      <TextField onChange={e => handleStoryChange(e)}\n          autoFocus\n          fullWidth\n          defaultValue={currentProject.story}\n          name='story'\n  \n          fullWidth\n        />\n        </form>\n      </AccordionDetails>\n    </Accordion>\n    </div>\n    </IconButton>\n       \n          \n                 <IconButton onClick={handleTimelineUpdate}>\n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n        minWidth\n      >\n        <Typography className={accordionClasses.heading}> timeline: {changedTimeline ? updatedProject.timeline : currentProject.timeline} days</Typography>\n\n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField onChange={e => handleTimelineChange(e)}\n          autoFocus\n          margin=\"dense\"\n          name='timeline'\n          defaultValue={currentProject.timeline}\n          fullWidth\n        />\n      \n   \n      </AccordionDetails>\n        </Accordion>\n        </div>        \n      </IconButton>\n\n      <IconButton onClick={handleFundraisingUpdate}>\n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={accordionClasses.heading}>fundraising goal: ${changedFundraising ? updatedProject.fundraising_goal : currentProject.fundraising_goal}</Typography>\n\n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField onChange={e => handleFundraisingChange(e)}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          defaultValue={currentProject.fundraising_goal}\n          name='fundraising_goal'\n          fullWidth\n        />\n      \n   \n      </AccordionDetails>\n        </Accordion>\n        </div>        \n      </IconButton>\n\n              \n      {/* <Link href={changedProject ? updatedProject.github : currentProject.github} >\n        <GitHubIcon />\n        </Link> */}\n      {/* <Accordion>\n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n        size='xs'\n      />\n       <AccordionDetails>\n        <TextField onChange={e => handleGithubChange(e)}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          defaultValue={currentProject.github}\n          name='github'\n          fullWidth\n        /> */}\n      \n  \n      {/* <Typography className={accordionClasses.heading}>\n\n        \n           \n           \n              </Typography>\n              </AccordionDetails>\n            </Accordion>\n         */}\n\n          </CardContent>\n    \n      </Card>\n     \n      <NewProjectTabs project={currentProject} user={props.user}  \n                      supporters={props.project.supporters} comments={props.project.comments}\n                      commenters={props.project.commenters}/>\n      </div>\n       \n    )\n}\n\nexport default NewProjectCard","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["252","253"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",["254","255","256"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["257","258","259","260"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["261"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js",["262","263"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js",["264","265","266","267","268"],"import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Link, useLocation } from \"react-router-dom\";\n\n\n\n\n\n// const useSearchStyles = makeStyles((theme) => ({\n//     root: {\n//       width: 280,\n//       '& > * + *': {\n//         marginTop: theme.spacing(3),\n//       },\n//     },\n//   }));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(),\n        width: 'auto'\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 0),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }));\n\n\nexport default function Search(props) {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    // const searchClasses = useSearchStyles();\n\n    const [projects, setProjects] = React.useState([]) ;\n    const [language, setLanguage] = React.useState('');\n\n    const handleLanguage = (e) => {\n        setLanguage(e.target.value)\n    }\n\n    const handleSubmit = () => {\n       \n        console.log('hi')\n    }\n\n    // console.log(language)\n    \n    const searchResults = projects.filter(project => project.language.toUpperCase() === language.toUpperCase() )\n        // \n    const accurateResults = searchResults.filter(r => r.user_id != props.user.id)\n    return (\n        <div className={classes.root}>\n\n\n<div className={classes.search}>\n            {/* <div className={classes.searchIcon}> */}\n              {accurateResults.map(project =>  <Link to={{\n                pathname: '/search',\n                state: {\n                    project,\n                    user: props.user\n                }\n               }}>\n               \n               <IconButton \n                // onClick={handleSubmit}\n                >\n              <SearchIcon />\n              </IconButton>\n              </Link> )}\n\n            {/* </div> */}\n            <InputBase onChange={handleLanguage}\n              placeholder=\"Search for projects by language\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n             value={language}\n                 />\n          </div>\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n\n//         <div className={searchClasses.root}>\n          \n//       <Autocomplete\n        \n//         multiple\n//         limitTags={2}\n//         id=\"multiple-limit-tags\"\n//         options={projects}\n//         getOptionLabel={(option) => option.language}\n//         // handleParams(option.language)\n        \n\n//         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n \n//         renderInput={(params) => (\n//           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n       \n        \n//         )}\n  \n//       />\n//       <IconButton><SearchIcon />\n      \n//       </IconButton>\n \n\n// </div>\n\n             \n\n    )\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SupportingProjectsContainer.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectsCard.js",["269","270","271"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectShow.js",["272","273","274"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/SupportingProjectTab.js",["275"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js",["276","277"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function SupportingProjectCommentCard(props){\n    const classes = useStyles();\n    const [allCommenters, setAllCommenters] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n          .then(res => res.json())\n          .then(project => setAllCommenters(project.commenters));\n      }, []);\n    \n      \n      let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id )\n      const avatar = (i) => {\n      for (i=0; i< thisCommenter.length; i++) {\n          return thisCommenter[i].profile_pic }\n      }\n\n      const username = (i) => {\n        for (i=0; i< thisCommenter.length; i++) {\n            return thisCommenter[i].username }\n      }\n\n\n    \n// console.log(thisCommenter)\nreturn(\n\n\n\n<Paper className={classes.paper}>\n<Grid container wrap=\"nowrap\" spacing={2}>\n  <Grid item>\n  <Avatar src={avatar()}></Avatar> \n\n  </Grid>\n  <Grid item xs zeroMinWidth>\n    <Typography >\n    {props.comment.blurb}\n     <br></br>@{username()}\n    </Typography>\n  </Grid>\n</Grid>\n</Paper>\n)\n\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectPostCard.js",["278","279"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/PostCard.js",["280","281"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function PostCard(props) {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n             \n           <Avatar src={props.user.profile_pic}></Avatar> \n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography >\n            {props.post.blurb}\n             {/* <br></br>@{thisCommenter.length == 1 ? thisCommenter[0].username : null} */}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n     \n    </div>\n  );\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectsContainerNavbar.js",["282","283","284","285","286","287","288"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectShowNavbar.js",["289","290","291","292","293","294","295"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCommentCard.js",["296","297"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Signup.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SearchResultsContainer.js",["298","299","300"],"import { TableFooter } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport SearchResultsCard from '../components/SearchResultsCard';\nimport SearchResultsNav from '../components/Navbars/SearchResultsNav'\n\n\n\nfunction SearchResultsContainer() {\n\n\n\n    const data = useLocation();\n    console.log(data.state)\n    // console.log(props.state.project)\n    // const project = props.state.project\n\n\n\n  \n\n    return (\n        \n      \n       \n        <div>\n            <SearchResultsNav project={data.state.project} user={data.state.user} language={data.state.project.language}/>\n            <SearchResultsCard project={data.state.project} user={data.state.user} />\n\n       \n       \n        </div> \n    )\n\n\n\n\n\n\n\n\n};\n\nexport default SearchResultsContainer;","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsCard.js",["301","302","303"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsShow.js",["304","305","306","307"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SearchResultsNav.js",["308","309"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectSupporterCard.js",["310"],{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":1,"column":16,"nodeType":"317","messageId":"318","endLine":1,"endColumn":24},{"ruleId":"315","severity":1,"message":"319","line":2,"column":9,"nodeType":"317","messageId":"318","endLine":2,"endColumn":18},{"ruleId":"315","severity":1,"message":"320","line":8,"column":10,"nodeType":"317","messageId":"318","endLine":8,"endColumn":19},{"ruleId":"315","severity":1,"message":"316","line":3,"column":17,"nodeType":"317","messageId":"318","endLine":3,"endColumn":25},{"ruleId":"315","severity":1,"message":"321","line":3,"column":27,"nodeType":"317","messageId":"318","endLine":3,"endColumn":36},{"ruleId":"315","severity":1,"message":"322","line":5,"column":10,"nodeType":"317","messageId":"318","endLine":5,"endColumn":30},{"ruleId":"311","replacedBy":"323"},{"ruleId":"313","replacedBy":"324"},{"ruleId":"311","replacedBy":"325"},{"ruleId":"313","replacedBy":"326"},{"ruleId":"311","replacedBy":"327"},{"ruleId":"313","replacedBy":"328"},{"ruleId":"315","severity":1,"message":"329","line":2,"column":10,"nodeType":"317","messageId":"318","endLine":2,"endColumn":20},{"ruleId":"315","severity":1,"message":"330","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":17},{"ruleId":"331","severity":1,"message":"332","line":44,"column":10,"nodeType":"333","endLine":45,"endColumn":43},{"ruleId":"315","severity":1,"message":"329","line":2,"column":10,"nodeType":"317","messageId":"318","endLine":2,"endColumn":20},{"ruleId":"315","severity":1,"message":"334","line":65,"column":12,"nodeType":"317","messageId":"318","endLine":65,"endColumn":24},{"ruleId":"315","severity":1,"message":"335","line":87,"column":11,"nodeType":"317","messageId":"318","endLine":87,"endColumn":29},{"ruleId":"336","severity":1,"message":"337","line":176,"column":4,"nodeType":"338","endLine":176,"endColumn":6,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":241,"column":13,"nodeType":"342","endLine":241,"endColumn":22},{"ruleId":"311","replacedBy":"343"},{"ruleId":"313","replacedBy":"344"},{"ruleId":"315","severity":1,"message":"345","line":16,"column":8,"nodeType":"317","messageId":"318","endLine":16,"endColumn":14},{"ruleId":"311","replacedBy":"346"},{"ruleId":"313","replacedBy":"347"},{"ruleId":"315","severity":1,"message":"321","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":26},{"ruleId":"315","severity":1,"message":"348","line":11,"column":10,"nodeType":"317","messageId":"318","endLine":11,"endColumn":14},{"ruleId":"315","severity":1,"message":"349","line":14,"column":10,"nodeType":"317","messageId":"318","endLine":14,"endColumn":24},{"ruleId":"315","severity":1,"message":"350","line":52,"column":12,"nodeType":"317","messageId":"318","endLine":52,"endColumn":19},{"ruleId":"315","severity":1,"message":"351","line":52,"column":21,"nodeType":"317","messageId":"318","endLine":52,"endColumn":31},{"ruleId":"315","severity":1,"message":"352","line":1,"column":10,"nodeType":"317","messageId":"318","endLine":1,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":2,"column":17,"nodeType":"317","messageId":"318","endLine":2,"endColumn":25},{"ruleId":"315","severity":1,"message":"321","line":2,"column":27,"nodeType":"317","messageId":"318","endLine":2,"endColumn":36},{"ruleId":"315","severity":1,"message":"353","line":5,"column":8,"nodeType":"317","messageId":"318","endLine":5,"endColumn":18},{"ruleId":"315","severity":1,"message":"354","line":14,"column":8,"nodeType":"317","messageId":"318","endLine":14,"endColumn":13},{"ruleId":"315","severity":1,"message":"355","line":15,"column":8,"nodeType":"317","messageId":"318","endLine":15,"endColumn":14},{"ruleId":"315","severity":1,"message":"356","line":16,"column":8,"nodeType":"317","messageId":"318","endLine":16,"endColumn":14},{"ruleId":"315","severity":1,"message":"357","line":17,"column":8,"nodeType":"317","messageId":"318","endLine":17,"endColumn":21},{"ruleId":"315","severity":1,"message":"358","line":18,"column":8,"nodeType":"317","messageId":"318","endLine":18,"endColumn":21},{"ruleId":"315","severity":1,"message":"359","line":19,"column":8,"nodeType":"317","messageId":"318","endLine":19,"endColumn":25},{"ruleId":"315","severity":1,"message":"360","line":20,"column":8,"nodeType":"317","messageId":"318","endLine":20,"endColumn":19},{"ruleId":"315","severity":1,"message":"361","line":21,"column":8,"nodeType":"317","messageId":"318","endLine":21,"endColumn":12},{"ruleId":"315","severity":1,"message":"362","line":22,"column":8,"nodeType":"317","messageId":"318","endLine":22,"endColumn":16},{"ruleId":"315","severity":1,"message":"363","line":23,"column":8,"nodeType":"317","messageId":"318","endLine":23,"endColumn":15},{"ruleId":"315","severity":1,"message":"364","line":24,"column":8,"nodeType":"317","messageId":"318","endLine":24,"endColumn":20},{"ruleId":"315","severity":1,"message":"365","line":25,"column":8,"nodeType":"317","messageId":"318","endLine":25,"endColumn":22},{"ruleId":"315","severity":1,"message":"366","line":63,"column":11,"nodeType":"317","messageId":"318","endLine":63,"endColumn":23},{"ruleId":"315","severity":1,"message":"367","line":66,"column":12,"nodeType":"317","messageId":"318","endLine":66,"endColumn":24},{"ruleId":"315","severity":1,"message":"368","line":71,"column":11,"nodeType":"317","messageId":"318","endLine":71,"endColumn":24},{"ruleId":"315","severity":1,"message":"369","line":88,"column":12,"nodeType":"317","messageId":"318","endLine":88,"endColumn":17},{"ruleId":"315","severity":1,"message":"370","line":92,"column":11,"nodeType":"317","messageId":"318","endLine":92,"endColumn":23},{"ruleId":"315","severity":1,"message":"371","line":95,"column":11,"nodeType":"317","messageId":"318","endLine":95,"endColumn":22},{"ruleId":"315","severity":1,"message":"372","line":100,"column":11,"nodeType":"317","messageId":"318","endLine":100,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"373","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":18},{"ruleId":"315","severity":1,"message":"374","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"375","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":24},{"ruleId":"315","severity":1,"message":"320","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":17},{"ruleId":"315","severity":1,"message":"376","line":40,"column":16,"nodeType":"317","messageId":"318","endLine":40,"endColumn":23},{"ruleId":"315","severity":1,"message":"374","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"375","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":24},{"ruleId":"315","severity":1,"message":"320","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":17},{"ruleId":"315","severity":1,"message":"377","line":76,"column":11,"nodeType":"317","messageId":"318","endLine":76,"endColumn":23},{"ruleId":"315","severity":1,"message":"371","line":95,"column":11,"nodeType":"317","messageId":"318","endLine":95,"endColumn":22},{"ruleId":"315","severity":1,"message":"372","line":100,"column":11,"nodeType":"317","messageId":"318","endLine":100,"endColumn":15},{"ruleId":"378","severity":1,"message":"379","line":117,"column":72,"nodeType":"380","messageId":"381","endLine":117,"endColumn":74},{"ruleId":"378","severity":1,"message":"379","line":169,"column":68,"nodeType":"380","messageId":"381","endLine":169,"endColumn":70},{"ruleId":"315","severity":1,"message":"382","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":22},{"ruleId":"315","severity":1,"message":"383","line":5,"column":8,"nodeType":"317","messageId":"318","endLine":5,"endColumn":19},{"ruleId":"315","severity":1,"message":"334","line":67,"column":10,"nodeType":"317","messageId":"318","endLine":67,"endColumn":22},{"ruleId":"315","severity":1,"message":"335","line":89,"column":9,"nodeType":"317","messageId":"318","endLine":89,"endColumn":27},{"ruleId":"336","severity":1,"message":"384","line":178,"column":4,"nodeType":"338","endLine":178,"endColumn":6,"suggestions":"385"},{"ruleId":"340","severity":1,"message":"341","line":239,"column":11,"nodeType":"342","endLine":239,"endColumn":20},{"ruleId":"315","severity":1,"message":"386","line":92,"column":9,"nodeType":"317","messageId":"318","endLine":92,"endColumn":21},{"ruleId":"336","severity":1,"message":"384","line":108,"column":6,"nodeType":"338","endLine":108,"endColumn":8,"suggestions":"387"},{"ruleId":"315","severity":1,"message":"388","line":18,"column":8,"nodeType":"317","messageId":"318","endLine":18,"endColumn":31},{"ruleId":"315","severity":1,"message":"389","line":19,"column":8,"nodeType":"317","messageId":"318","endLine":19,"endColumn":29},{"ruleId":"336","severity":1,"message":"384","line":97,"column":6,"nodeType":"338","endLine":97,"endColumn":8,"suggestions":"390"},{"ruleId":"391","severity":2,"message":"392","line":16,"column":21,"nodeType":"317","messageId":"393","endLine":16,"endColumn":25},{"ruleId":"394","severity":2,"message":"395","line":16,"column":36,"nodeType":"317","messageId":"396","endLine":16,"endColumn":47},{"ruleId":"394","severity":2,"message":"395","line":33,"column":28,"nodeType":"317","messageId":"396","endLine":33,"endColumn":39},{"ruleId":"394","severity":2,"message":"395","line":36,"column":28,"nodeType":"317","messageId":"396","endLine":36,"endColumn":39},{"ruleId":"315","severity":1,"message":"330","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"336","severity":1,"message":"384","line":31,"column":10,"nodeType":"338","endLine":31,"endColumn":12,"suggestions":"397"},{"ruleId":"378","severity":1,"message":"379","line":34,"column":74,"nodeType":"380","messageId":"381","endLine":34,"endColumn":76},{"ruleId":"315","severity":1,"message":"319","line":5,"column":8,"nodeType":"317","messageId":"318","endLine":5,"endColumn":17},{"ruleId":"315","severity":1,"message":"398","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":20},{"ruleId":"315","severity":1,"message":"399","line":9,"column":16,"nodeType":"317","messageId":"318","endLine":9,"endColumn":27},{"ruleId":"315","severity":1,"message":"400","line":88,"column":11,"nodeType":"317","messageId":"318","endLine":88,"endColumn":23},{"ruleId":"378","severity":1,"message":"401","line":97,"column":65,"nodeType":"380","messageId":"381","endLine":97,"endColumn":67},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"402","line":29,"column":11,"nodeType":"317","messageId":"318","endLine":29,"endColumn":15},{"ruleId":"336","severity":1,"message":"384","line":41,"column":10,"nodeType":"338","endLine":41,"endColumn":12,"suggestions":"403"},{"ruleId":"315","severity":1,"message":"321","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":26},{"ruleId":"315","severity":1,"message":"355","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"404","line":39,"column":11,"nodeType":"317","messageId":"318","endLine":39,"endColumn":16},{"ruleId":"336","severity":1,"message":"384","line":116,"column":6,"nodeType":"338","endLine":116,"endColumn":8,"suggestions":"405"},{"ruleId":"336","severity":1,"message":"384","line":31,"column":10,"nodeType":"338","endLine":31,"endColumn":12,"suggestions":"406"},{"ruleId":"378","severity":1,"message":"379","line":34,"column":74,"nodeType":"380","messageId":"381","endLine":34,"endColumn":76},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"321","line":1,"column":27,"nodeType":"317","messageId":"318","endLine":1,"endColumn":36},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"321","line":1,"column":27,"nodeType":"317","messageId":"318","endLine":1,"endColumn":36},{"ruleId":"315","severity":1,"message":"373","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":18},{"ruleId":"315","severity":1,"message":"374","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"375","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":24},{"ruleId":"315","severity":1,"message":"320","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":17},{"ruleId":"315","severity":1,"message":"399","line":13,"column":16,"nodeType":"317","messageId":"318","endLine":13,"endColumn":27},{"ruleId":"315","severity":1,"message":"407","line":18,"column":8,"nodeType":"317","messageId":"318","endLine":18,"endColumn":21},{"ruleId":"315","severity":1,"message":"376","line":43,"column":18,"nodeType":"317","messageId":"318","endLine":43,"endColumn":25},{"ruleId":"315","severity":1,"message":"373","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":18},{"ruleId":"315","severity":1,"message":"374","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"375","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":24},{"ruleId":"315","severity":1,"message":"320","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":17},{"ruleId":"315","severity":1,"message":"399","line":13,"column":16,"nodeType":"317","messageId":"318","endLine":13,"endColumn":27},{"ruleId":"315","severity":1,"message":"407","line":18,"column":8,"nodeType":"317","messageId":"318","endLine":18,"endColumn":21},{"ruleId":"315","severity":1,"message":"376","line":43,"column":18,"nodeType":"317","messageId":"318","endLine":43,"endColumn":25},{"ruleId":"336","severity":1,"message":"384","line":31,"column":10,"nodeType":"338","endLine":31,"endColumn":12,"suggestions":"408"},{"ruleId":"378","severity":1,"message":"379","line":34,"column":74,"nodeType":"380","messageId":"381","endLine":34,"endColumn":76},{"ruleId":"315","severity":1,"message":"352","line":1,"column":10,"nodeType":"317","messageId":"318","endLine":1,"endColumn":21},{"ruleId":"315","severity":1,"message":"316","line":2,"column":17,"nodeType":"317","messageId":"318","endLine":2,"endColumn":25},{"ruleId":"315","severity":1,"message":"321","line":2,"column":27,"nodeType":"317","messageId":"318","endLine":2,"endColumn":36},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"402","line":30,"column":11,"nodeType":"317","messageId":"318","endLine":30,"endColumn":15},{"ruleId":"336","severity":1,"message":"384","line":41,"column":10,"nodeType":"338","endLine":41,"endColumn":12,"suggestions":"409"},{"ruleId":"315","severity":1,"message":"410","line":10,"column":8,"nodeType":"317","messageId":"318","endLine":10,"endColumn":28},{"ruleId":"315","severity":1,"message":"411","line":11,"column":8,"nodeType":"317","messageId":"318","endLine":11,"endColumn":12},{"ruleId":"315","severity":1,"message":"412","line":48,"column":9,"nodeType":"317","messageId":"318","endLine":48,"endColumn":22},{"ruleId":"315","severity":1,"message":"404","line":50,"column":9,"nodeType":"317","messageId":"318","endLine":50,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":1,"column":17,"nodeType":"317","messageId":"318","endLine":1,"endColumn":25},{"ruleId":"315","severity":1,"message":"376","line":36,"column":16,"nodeType":"317","messageId":"318","endLine":36,"endColumn":23},{"ruleId":"315","severity":1,"message":"330","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},"no-native-reassign",["413"],"no-negated-in-lhs",["414"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.","'createBrowserHistory' is defined but never used.",["413"],["414"],["413"],["414"],["413"],["414"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'githubChange' is assigned a value but never used.","'handleGithubChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.state.project.id'. Either include it or remove the dependency array.","ArrayExpression",["415"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["413"],["414"],"'Signup' is defined but never used.",["413"],["414"],"'Link' is defined but never used.","'checkPropTypes' is defined but never used.","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","'TableFooter' is defined but never used.","'Typography' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'ListItemAvatar' is defined but never used.","'badgeClasses' is assigned a value but never used.","'openRequests' is assigned a value but never used.","'handleRequest' is assigned a value but never used.","'open2' is assigned a value but never used.","'handleClose2' is assigned a value but never used.","'listClasses' is assigned a value but never used.","'data' is assigned a value but never used.","'IconButton' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'setAuth' is assigned a value but never used.","'handleChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ProjectShowNav' is defined but never used.","'ProjectTabs' is defined but never used.","React Hook useEffect has a missing dependency: 'props.project.id'. Either include it or remove the dependency array.",["416"],"'snackClasses' is assigned a value but never used.",["417"],"'NewProjectSupporterCard' is defined but never used.","'NewProjectCommentCard' is defined but never used.",["418"],"no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef",["419"],"'Autocomplete' is defined but never used.","'useLocation' is defined but never used.","'handleSubmit' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'bull' is assigned a value but never used.",["420"],"'theme' is assigned a value but never used.",["421"],["422"],"'ArrowBackIcon' is defined but never used.",["423"],["424"],"'SupportingProjectTab' is defined but never used.","'Icon' is defined but never used.","'buttonClasses' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"427","fix":"429"},{"desc":"427","fix":"430"},{"desc":"427","fix":"431"},{"desc":"427","fix":"432"},{"desc":"427","fix":"433"},{"desc":"427","fix":"434"},{"desc":"427","fix":"435"},{"desc":"427","fix":"436"},"Update the dependencies array to be: [data.state.project.id]",{"range":"437","text":"438"},"Update the dependencies array to be: [props.project.id]",{"range":"439","text":"440"},{"range":"441","text":"440"},{"range":"442","text":"440"},{"range":"443","text":"440"},{"range":"444","text":"440"},{"range":"445","text":"440"},{"range":"446","text":"440"},{"range":"447","text":"440"},{"range":"448","text":"440"},[5134,5136],"[data.state.project.id]",[4978,4980],"[props.project.id]",[2702,2704],[2570,2572],[892,894],[1133,1135],[2936,2938],[909,911],[902,904],[1130,1132]]