[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js":"23"},{"size":362,"mtime":1610662302244,"results":"24","hashOfConfig":"25"},{"size":6228,"mtime":1610931717332,"results":"26","hashOfConfig":"25"},{"size":3494,"mtime":1611156444796,"results":"27","hashOfConfig":"25"},{"size":500,"mtime":1610662302243,"results":"28","hashOfConfig":"25"},{"size":590,"mtime":1610832419708,"results":"29","hashOfConfig":"25"},{"size":1423,"mtime":1611121427193,"results":"30","hashOfConfig":"25"},{"size":2370,"mtime":1611086070680,"results":"31","hashOfConfig":"25"},{"size":287,"mtime":1610931692896,"results":"32","hashOfConfig":"25"},{"size":1752,"mtime":1610931700597,"results":"33","hashOfConfig":"25"},{"size":746,"mtime":1610931682809,"results":"34","hashOfConfig":"25"},{"size":7016,"mtime":1611123766663,"results":"35","hashOfConfig":"25"},{"size":6239,"mtime":1611124343224,"results":"36","hashOfConfig":"25"},{"size":15752,"mtime":1611109297219,"results":"37","hashOfConfig":"25"},{"size":2811,"mtime":1611107756021,"results":"38","hashOfConfig":"25"},{"size":3604,"mtime":1611068060241,"results":"39","hashOfConfig":"25"},{"size":3609,"mtime":1611119031797,"results":"40","hashOfConfig":"25"},{"size":9243,"mtime":1611121263194,"results":"41","hashOfConfig":"25"},{"size":1850,"mtime":1611093834245,"results":"42","hashOfConfig":"25"},{"size":5916,"mtime":1611156872774,"results":"43","hashOfConfig":"25"},{"size":5535,"mtime":1611107765092,"results":"44","hashOfConfig":"25"},{"size":1338,"mtime":1611075337535,"results":"45","hashOfConfig":"25"},{"size":4325,"mtime":1611087469037,"results":"46","hashOfConfig":"25"},{"size":1677,"mtime":1611158588896,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18w8y2t",{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["97","98","99"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["100","101","102"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["103","104"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["105","106","107"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["108"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["109","110","111","112"],"import React from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Alert from '@material-ui/lab/Alert';\nimport { Redirect } from 'react-router-dom';\n\n\nconst useStyle = makeStyles({\n  root: {\n      minWidth: 275,\n      height: 400\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 14,\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\n\nconst useDeleteStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst ProjectShow = () =>  {\n  \n    const styles = useStyle();\n    const deleteClasses = useDeleteStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const [story, setStory] = React.useState('');\n    const [timeline, setTimeline] = React.useState(null);\n    const [fundraising_goal, setFundraisingGoal] = React.useState(null);\n    const [deleteAlert, setDeleteAlert] = React.useState(false);\n    const [deleted, setDelete] = React.useState(false)\n  \n    const handleStoryChange = (event) => {\n      \n      setStory(event.target.value) ;\n    };\n\n    const handleTimelineChange = (event) => {\n     \n      setTimeline(event.target.value) ;\n    };\n  \n    const handleFundraisingChange = (event) => {\n    \n      setFundraisingGoal(event.target.value)\n    };\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n    const handleDeleteAlert = () => {\n      setDeleteAlert(true)\n    };\n  \n    const handleDelete = () => {\n      setDelete(true);\n      fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n        method: 'DELETE'\n        })\n      \n    }\n\n   \n  // console.log(useLocation())\n  const data = useLocation()\n \n\n  \n    // console.log(data.state)\n\n    return (\n      deleted ? <Redirect to=\"/my-projects\" /> : \n  <div>\n  \n   \n      <ProjectShowNav user={data.state.user} project={data.state.project}/>\n\n      <div>\n      <Card className={styles.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                    {data.state.project.title}\n                    <IconButton><DeleteOutlinedIcon onClick={handleDeleteAlert} color=\"secondary\"/>\n                    {deleteAlert ? \n                    <div className={deleteClasses.root}>\n                      \n                      <Alert onClick ={handleDelete} severity=\"error\">Are you sure you want to delete this project?</Alert>\n                    </div> : null}\n                   \n                    </IconButton>\n          </Typography>\n        \n          \n                <Typography variant=\"h5\" component=\"h2\">\n                   {data.state.project.story}<IconButton onClick={handleClickOpen}><EditIcon/> </IconButton>\n                   <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle >Edit your Story</DialogTitle>\n        <DialogContent>\n       \n          <TextField onChange={e => handleStoryChange(e)}\n            autoFocus\n            margin=\"dense\"\n            value={data.state.project.story}\n    \n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n     \n          </Typography>\n                <Typography className={styles.pos} color=\"textSecondary\">\n                   timeline: {data.state.project.timeline} days <IconButton onClick={handleClickOpen}><EditIcon/></IconButton>\n                   <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit your Timeline</DialogTitle>\n        <DialogContent>\n       \n          <TextField\n            autoFocus\n            margin=\"dense\"\n            value={data.state.project.timeline}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n                   \n          </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    fundraising goal: ${data.state.project.fundraising_goal} <IconButton onClick={handleClickOpen}><EditIcon/></IconButton>\n                    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Edit your Goal</DialogTitle>\n        <DialogContent>\n       \n          <TextField onChange={e => handleFundraisingChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            value={data.state.project.fundraising_goal}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n            <br />\n        \n                <Link href={data.state.project.github} >\n                    <GitHubIcon />\n                </Link><IconButton onClick={handleClickOpen}><EditIcon/></IconButton>\n                  \n                </Typography>\n\n            </CardContent>\n      \n        </Card>\n        </div>\n      \n  \n      <ProjectTabs project={data.state.project} user={data.state.user} posts={data.state.posts}\n                  supporters={data.state.supporters} comments={data.state.comments}\n                  commenters={data.state.commenters} />\n                \n                    \n                    \n               \n              </div>      \n \n                    \n                    \n                    \n\n        )\n    }\n\n\nexport default ProjectShow;","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["113","114","115"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport MainNavBar from './Navbars/MainNavbar'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const [project, setProject] = useState([]);\n    const data = useLocation();\n\n\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n  \n\n\n    \n    // const [projects, setProjects] = useState([]);\n    // const token = localStorage.getItem('token');\n\n    // useEffect(() => {\n    //     fetch('http://localhost:3001/api/v1/projects')\n    //       .then(res => res.json())\n    //       .then(projects => setProjects(projects));\n    //   }, []);\n\n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => \n            console.log(project))\n         }\n\n\n    // const details = {\n    //     'Title': title,\n    //     'Story': story,\n    //     'Timeline': timeline,\n    //     'Fundraising Goal': fundraising_goal,\n    //     'Image': image,\n    //     'Github': github,\n    //     'Language': language,\n    //     'Stage': stage,\n    //     'User': data.state.user\n\n    // }\n    // console.log(details);\n\n\n\n    return (\n      \n       \n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Cover image?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Link to={{\n                        pathname: \"/new\",\n                        state: {\n                            // project,\n                            title,\n                            story,\n                            timeline,\n                            fundraising_goal,\n                            image,\n                            github,\n                            language,\n                            stage,\n                            data\n                        }\n                        \n\n                    }} >\n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                    </Link>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n \n    );\n}\n\nexport default withRouter(CreateProject)","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["120","121","122"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["123"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["124","125"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["126","127","128","129","130"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["131","132","133","134","135"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["136","137","138","139","140"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",["141","142","143","144","145","146","147","148"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["149","150","151","152"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["153"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js",["154","155","156","157","158"],{"ruleId":"159","severity":1,"message":"160","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"164","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":3,"column":17,"nodeType":"161","messageId":"162","endLine":3,"endColumn":25},{"ruleId":"159","severity":1,"message":"165","line":3,"column":27,"nodeType":"161","messageId":"162","endLine":3,"endColumn":36},{"ruleId":"159","severity":1,"message":"166","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":30},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"159","severity":1,"message":"171","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":20},{"ruleId":"159","severity":1,"message":"172","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":44,"column":10,"nodeType":"175","endLine":45,"endColumn":43},{"ruleId":"159","severity":1,"message":"171","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":20},{"ruleId":"159","severity":1,"message":"176","line":58,"column":12,"nodeType":"161","messageId":"162","endLine":58,"endColumn":17},{"ruleId":"159","severity":1,"message":"177","line":59,"column":12,"nodeType":"161","messageId":"162","endLine":59,"endColumn":20},{"ruleId":"159","severity":1,"message":"178","line":60,"column":12,"nodeType":"161","messageId":"162","endLine":60,"endColumn":28},{"ruleId":"159","severity":1,"message":"179","line":69,"column":11,"nodeType":"161","messageId":"162","endLine":69,"endColumn":31},{"ruleId":"159","severity":1,"message":"160","line":1,"column":16,"nodeType":"161","messageId":"162","endLine":1,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":18},{"ruleId":"159","severity":1,"message":"164","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":19},{"ruleId":"159","severity":1,"message":"165","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"180","line":14,"column":8,"nodeType":"161","messageId":"162","endLine":14,"endColumn":18},{"ruleId":"159","severity":1,"message":"181","line":50,"column":12,"nodeType":"161","messageId":"162","endLine":50,"endColumn":19},{"ruleId":"159","severity":1,"message":"182","line":50,"column":21,"nodeType":"161","messageId":"162","endLine":50,"endColumn":31},{"ruleId":"159","severity":1,"message":"183","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"159","severity":1,"message":"165","line":2,"column":27,"nodeType":"161","messageId":"162","endLine":2,"endColumn":36},{"ruleId":"159","severity":1,"message":"184","line":56,"column":10,"nodeType":"161","messageId":"162","endLine":56,"endColumn":14},{"ruleId":"159","severity":1,"message":"185","line":16,"column":10,"nodeType":"161","messageId":"162","endLine":16,"endColumn":14},{"ruleId":"159","severity":1,"message":"184","line":55,"column":10,"nodeType":"161","messageId":"162","endLine":55,"endColumn":14},{"ruleId":"159","severity":1,"message":"186","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":21},{"ruleId":"159","severity":1,"message":"187","line":95,"column":11,"nodeType":"161","messageId":"162","endLine":95,"endColumn":22},{"ruleId":"159","severity":1,"message":"188","line":100,"column":11,"nodeType":"161","messageId":"162","endLine":100,"endColumn":15},{"ruleId":"189","severity":1,"message":"190","line":122,"column":72,"nodeType":"191","messageId":"192","endLine":122,"endColumn":74},{"ruleId":"189","severity":1,"message":"190","line":174,"column":68,"nodeType":"191","messageId":"192","endLine":174,"endColumn":70},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"193","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":19},{"ruleId":"159","severity":1,"message":"194","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":14},{"ruleId":"159","severity":1,"message":"195","line":8,"column":9,"nodeType":"161","messageId":"162","endLine":8,"endColumn":20},{"ruleId":"159","severity":1,"message":"196","line":35,"column":11,"nodeType":"161","messageId":"162","endLine":35,"endColumn":15},{"ruleId":"159","severity":1,"message":"197","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":12},{"ruleId":"159","severity":1,"message":"198","line":20,"column":8,"nodeType":"161","messageId":"162","endLine":20,"endColumn":14},{"ruleId":"159","severity":1,"message":"199","line":21,"column":8,"nodeType":"161","messageId":"162","endLine":21,"endColumn":13},{"ruleId":"159","severity":1,"message":"200","line":79,"column":7,"nodeType":"161","messageId":"162","endLine":79,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":120,"column":6,"nodeType":"203","endLine":120,"endColumn":8,"suggestions":"204"},{"ruleId":"159","severity":1,"message":"165","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"205","line":18,"column":8,"nodeType":"161","messageId":"162","endLine":18,"endColumn":21},{"ruleId":"159","severity":1,"message":"197","line":19,"column":8,"nodeType":"161","messageId":"162","endLine":19,"endColumn":12},{"ruleId":"159","severity":1,"message":"198","line":20,"column":8,"nodeType":"161","messageId":"162","endLine":20,"endColumn":14},{"ruleId":"159","severity":1,"message":"199","line":21,"column":8,"nodeType":"161","messageId":"162","endLine":21,"endColumn":13},{"ruleId":"159","severity":1,"message":"206","line":93,"column":9,"nodeType":"161","messageId":"162","endLine":93,"endColumn":14},{"ruleId":"159","severity":1,"message":"207","line":104,"column":9,"nodeType":"161","messageId":"162","endLine":104,"endColumn":23},{"ruleId":"159","severity":1,"message":"208","line":113,"column":20,"nodeType":"161","messageId":"162","endLine":113,"endColumn":31},{"ruleId":"209","severity":2,"message":"210","line":16,"column":21,"nodeType":"161","messageId":"211","endLine":16,"endColumn":25},{"ruleId":"212","severity":2,"message":"213","line":16,"column":36,"nodeType":"161","messageId":"214","endLine":16,"endColumn":47},{"ruleId":"212","severity":2,"message":"213","line":33,"column":28,"nodeType":"161","messageId":"214","endLine":33,"endColumn":39},{"ruleId":"212","severity":2,"message":"213","line":36,"column":28,"nodeType":"161","messageId":"214","endLine":36,"endColumn":39},{"ruleId":"159","severity":1,"message":"172","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":17},{"ruleId":"159","severity":1,"message":"215","line":21,"column":7,"nodeType":"161","messageId":"162","endLine":21,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":31,"column":6,"nodeType":"203","endLine":31,"endColumn":8,"suggestions":"216"},{"ruleId":"189","severity":1,"message":"190","line":33,"column":70,"nodeType":"191","messageId":"192","endLine":33,"endColumn":72},{"ruleId":"189","severity":1,"message":"190","line":40,"column":33,"nodeType":"191","messageId":"192","endLine":40,"endColumn":35},{"ruleId":"189","severity":1,"message":"190","line":44,"column":46,"nodeType":"191","messageId":"192","endLine":44,"endColumn":48},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.","'createBrowserHistory' is defined but never used.","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'story' is assigned a value but never used.","'timeline' is assigned a value but never used.","'fundraising_goal' is assigned a value but never used.","'handleTimelineChange' is assigned a value but never used.","'MainNavBar' is defined but never used.","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","'TableFooter' is defined but never used.","'show' is assigned a value but never used.","'Link' is defined but never used.","'AccountCircle' is defined but never used.","'listClasses' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardActions' is defined but never used.","'Button' is defined but never used.","'useLocation' is defined but never used.","'bull' is assigned a value but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'useCommentStyles' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.project.id'. Either include it or remove the dependency array.","ArrayExpression",["219"],"'SupporterCard' is defined but never used.","'token' is assigned a value but never used.","'commentClasses' is assigned a value but never used.","'setAllPosts' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef","'message' is assigned a value but never used.",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"221","fix":"223"},"Update the dependencies array to be: [props.project.id]",{"range":"224","text":"225"},{"range":"226","text":"225"},[3103,3105],"[props.project.id]",[1030,1032]]