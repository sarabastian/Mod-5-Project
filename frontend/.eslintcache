[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js":"23","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js":"24"},{"size":362,"mtime":1610662302244,"results":"25","hashOfConfig":"26"},{"size":6228,"mtime":1610931717332,"results":"27","hashOfConfig":"26"},{"size":3494,"mtime":1611156444796,"results":"28","hashOfConfig":"26"},{"size":500,"mtime":1610662302243,"results":"29","hashOfConfig":"26"},{"size":590,"mtime":1610832419708,"results":"30","hashOfConfig":"26"},{"size":1423,"mtime":1611121427193,"results":"31","hashOfConfig":"26"},{"size":2370,"mtime":1611086070680,"results":"32","hashOfConfig":"26"},{"size":287,"mtime":1610931692896,"results":"33","hashOfConfig":"26"},{"size":1752,"mtime":1610931700597,"results":"34","hashOfConfig":"26"},{"size":746,"mtime":1610931682809,"results":"35","hashOfConfig":"26"},{"size":10498,"mtime":1611171631677,"results":"36","hashOfConfig":"26"},{"size":6239,"mtime":1611124343224,"results":"37","hashOfConfig":"26"},{"size":15706,"mtime":1611159181124,"results":"38","hashOfConfig":"26"},{"size":2811,"mtime":1611107756021,"results":"39","hashOfConfig":"26"},{"size":3753,"mtime":1611176852347,"results":"40","hashOfConfig":"26"},{"size":3719,"mtime":1611172175900,"results":"41","hashOfConfig":"26"},{"size":9270,"mtime":1611176848461,"results":"42","hashOfConfig":"26"},{"size":3468,"mtime":1611176668095,"results":"43","hashOfConfig":"26"},{"size":5916,"mtime":1611156872774,"results":"44","hashOfConfig":"26"},{"size":5535,"mtime":1611107765092,"results":"45","hashOfConfig":"26"},{"size":1338,"mtime":1611075337535,"results":"46","hashOfConfig":"26"},{"size":4325,"mtime":1611087469037,"results":"47","hashOfConfig":"26"},{"size":1677,"mtime":1611158588896,"results":"48","hashOfConfig":"26"},{"size":2509,"mtime":1611175204252,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18w8y2t",{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["103","104","105"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["106","107","108"],"\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Main from './containers/Main';\nimport Login from './components/Login';\nimport ProjectShow from './components/ProjectShow';\nimport CreateProject from './components/CreateProject';\nimport NewProjectContainer from './containers/NewProjectContainer'\n\nclass App extends React.Component {\n  state = {\n    isloggedin: false\n  }\n\n  componentDidMount(){\n    this.handleLogin();\n  }\n\n  handleLogin = () => {\n    if(localStorage.getItem('token')) {\n      this.setState({ isloggedin: true})\n    }\n  }\n\n\n  render() {\n\n    \n \n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n           \n            \n            <Route path=\"/login\" component={() => <Login login={this.state.isloggedin} handleLogin={this.handleLogin} />} />\n            <Route exact path=\"/my-projects\" component={() => <Main  /> } />\n            <Route exact path=\"/show\" component={() => <ProjectShow />} />\n            <Route exact path=\"/create\" component={() => <CreateProject />} />\n            <Route exact path=\"/new\" component={() => <NewProjectContainer />} />\n           \n   \n\n\n          </Switch>\n       </Router>\n            \n       \n          \n      </div>\n\n    );\n  }\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   const [user, setUser] = useState({})\n//   const [form, setForm] = useState(\"\")\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\")\n//     if (token) {\n//       fetch('http://localhost:3001/api/v1/auto_login', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       })\n//         .then(resp => resp.json())\n//         .then(data => {\n//           setUser(data)\n//           // console.log(data)\n//         })\n//     }\n//   }, [])\n//   const handleLogin = (user) => {\n//     setUser(user)\n//   }\n\n//   const handleFormSwitch = (input) => {\n//     setForm(input)\n//   }\n//   const handleAuthClick = () => {\n//     const token = localStorage.getItem(\"token\")\n//     fetch(`http://localhost:3001/api/v1/user_is_authed`, {\n//       headers: {\n//         \"Authorization\": `Bearer ${token}`\n//       }\n//     })\n//       .then(resp => resp.json())\n//       .then(data => console.log(data))\n//   }\n\n//   console.log(user)\n\n//   const renderForm = () => {\n//     switch (form) {\n//       case \"login\":\n//         return <Login handleLogin={handleLogin} />\n//         break;\n//       default:\n//       // return <SignInForm handleLogin={handleLogin}/>\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n\n//       <Header handleFormSwitch={handleFormSwitch} />\n//       {\n//         renderForm()\n//       }\n//       <button onClick={handleAuthClick} className=\"ui button\">Access Authorized Route</button>\n  \n   \n//   <Router history={history}>\n//     <Switch>\n//       <Route exact path='/'> <Mainrender={(props)/> </Route>\n//       {/* <Route exact path=\"/\" render={(props) => <WelcomeBanner {...props} history={history} />} /> */}\n//       <Route exact path=\"/recipes\" render={() => <RecipeCollection menus={menus} />} />\n//       <Route path=\"/recipes/\" render={(props) => <RecipePage {...props} menus={menus} />} />\n//       <Route path=\"/menu\" render={(props) => <MenuPage {...props} user={user_id} menus={menus} />} />\n//     </Switch>\n//   </Router>\n//   {/* Footer? */ }\n//   </div>\n//   );\n\n// }\n\n\n\n\n","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["109","110"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["111","112","113"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["114"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["115","116","117","118","119","120"],"import React, { useEffect } from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { Redirect } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\n\n\nconst useStyle = makeStyles({\n  root: {\n      minWidth: 275,\n      height: 400\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 24,\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\n\n\nconst useAccordionStyles = makeStyles((theme) => ({\n  root: {\n    width: '400%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst ProjectShow = () =>  {\n    const data = useLocation()\n    const styles = useStyle();\n    const accordionClasses = useAccordionStyles();\n\n\n    const [open, setOpen] = React.useState(false);\n    const [story, setStory] = React.useState(data.state.project.story);\n    const [timeline, setTimeline] = React.useState(data.state.project.timeline);\n    const [fundraising_goal, setFundraisingGoal] = React.useState(data.state.project.fundraising_goal);\n    const [deleted, setDelete] = React.useState(false);\n    const [githubChange, setGithubChange] = React.useState(data.state.project.github);\n    const [currentProject, setCurrentProject] = React.useState([])\n    const [updatedProject, setUpdatedProject] = React.useState([])\n    const [changedStory, setClickforChangedStory] = React.useState(false)\n    const [changedTimeline, setClickforChangedTimeline] = React.useState(false)\n    const [changedFundraising, setClickforChangedFundraising] = React.useState(false)\n  \n    const handleStoryChange = (event) => {\n      setClickforChangedStory(true);\n      setStory(event.target.value) ;\n    };\n\n    const handleTimelineChange = (event) => {\n      setClickforChangedTimeline(true);\n      setTimeline(event.target.value) ;\n    };\n  \n    const handleFundraisingChange = (event) => {\n      setClickforChangedFundraising(true);\n      setFundraisingGoal(event.target.value)\n    };\n\n    const handleGithubChange = (event) => {\n      setGithubChange(event.target.value)\n    }\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n  \n  \n    const handleDelete = () => {\n      setDelete(true);\n      fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n        method: 'DELETE'\n        })\n      \n    }\n\n   \n  // console.log(useLocation())\n\n \n  const handleStoryUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        story: story\n      })\n    })\n    .then(res => res.json())\n    .then(project => setUpdatedProject(project))\n  }\n\n  const handleTimelineUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n         timeline: timeline\n      })\n    })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n  } \n\nconst handleFundraisingUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      fundraising_goal: fundraising_goal\n    })\n  })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n}\n\n// const handleGithubUpdate = () => {\n//   fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n//     method:'PATCH',\n//     headers:{\n//       'Content-Type':'application/json',\n//         Accept: 'application/json',\n//     },\n//     body: JSON.stringify({\n//       github: githubChange\n//     })\n//   })\n//   .then(res => res.json())\n//   .then(project => setUpdatedProject(project))\n//   }\n\nuseEffect(() => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`)\n    .then(res => res.json())\n    .then(project => setCurrentProject(project));\n}, []);\n\n  \n    // console.log(currentProject)\n\n    return (\n      deleted ? <Redirect to=\"/my-projects\" /> : \n  <div>\n  \n   \n      <ProjectShowNav user={data.state.user} project={data.state.project}/>\n\n      <div>\n      <Card className={styles.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                    {currentProject.title}\n                    <IconButton  onClick={handleClickOpen}><DeleteOutlinedIcon  color=\"secondary\"/>\n                   \n                \n                      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{'Are you sure you want to delete this project?'}</DialogTitle>\n     \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick ={handleDelete} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n                   \n            \n                   \n                    </IconButton>\n          </Typography>\n        \n          \n       \n                 \n                   <IconButton onClick={handleStoryUpdate} >   \n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={accordionClasses.heading}>{changedStory ? updatedProject.story : currentProject.story}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <form>\n        <TextField onChange={e => handleStoryChange(e)}\n            autoFocus\n            fullWidth\n            defaultValue={currentProject.story}\n            name='story'\n    \n            fullWidth\n          />\n          </form>\n        </AccordionDetails>\n      </Accordion>\n      </div>\n      </IconButton>\n         \n            \n                   <IconButton onClick={handleTimelineUpdate}>\n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          minWidth\n        >\n          <Typography className={accordionClasses.heading}> timeline: {changedTimeline ? updatedProject.timeline : currentProject.timeline} days</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleTimelineChange(e)}\n            autoFocus\n            margin=\"dense\"\n            name='timeline'\n            defaultValue={currentProject.timeline}\n            fullWidth\n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n\n        <IconButton onClick={handleFundraisingUpdate}>\n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={accordionClasses.heading}>fundraising goal: ${changedFundraising ? updatedProject.fundraising_goal : currentProject.fundraising_goal}</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleFundraisingChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            defaultValue={currentProject.fundraising_goal}\n            name='fundraising_goal'\n            fullWidth\n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n\n                \n        {/* <Link href={changedProject ? updatedProject.github : currentProject.github} >\n          <GitHubIcon />\n          </Link> */}\n        {/* <Accordion>\n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          size='xs'\n        />\n         <AccordionDetails>\n          <TextField onChange={e => handleGithubChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            defaultValue={currentProject.github}\n            name='github'\n            fullWidth\n          /> */}\n        \n    \n        {/* <Typography className={accordionClasses.heading}>\n\n          \n             \n             \n                </Typography>\n                </AccordionDetails>\n              </Accordion>\n           */}\n\n            </CardContent>\n      \n        </Card>\n        </div>\n      \n  \n      <ProjectTabs project={data.state.project} user={data.state.user} posts={data.state.posts}\n                  supporters={data.state.supporters} comments={data.state.comments}\n                  commenters={data.state.commenters} />\n                \n                    \n                    \n               \n              </div>      \n \n                    \n                    \n                    \n\n        )\n    }\n\n\nexport default ProjectShow;","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["121","122","123"],"import React, {useState} from 'react';\nimport  TextField  from '@material-ui/core/TextField';\nimport Button  from '@material-ui/core/Button';\nimport { withRouter } from 'react-router';\nimport { InputLabel } from '@material-ui/core';\nimport { FormControl } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { FormGroup } from '@material-ui/core';\n\nclass Login extends React.Component {\n    state = {\n      username: \"\",\n      password: \"\"\n    }\n  \n  handleInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n  })\n  }\n  \n  handleSubmit = (e) => {\n    console.log(this.state)\n    e.preventDefault()\n  \n    fetch('http://localhost:3001/api/v1/login',{\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: this.state\n      })\n    }).then(response => response.json())\n  \n    .then(data => {\n        \n            console.log(data.user_info)\n            console.log(data)\n            localStorage.setItem('token', data.user_info.user_id)\n            this.props.handleLogin()\n            this.props.history.push('/my-projects')\n        })\n  \n  }\n  \n  \n  \n  render () {\n   \n  return (\n\n    <form onSubmit={this.handleSubmit}>\n\n \n    \n            <h2 className=\"text-center\">Welcome</h2>\n         \n            <FormControl>\n                 <InputLabel>Username</InputLabel>\n          \n             <Input name=\"username\" placeholder=\"Username\" onChange={this.handleInput} value={this.state.username}/>\n             </FormControl>\n           \n            <FormControl>\n                <InputLabel>Password</InputLabel>\n                <Input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleInput} value={this.state.password}/>\n            </FormControl>\n        \n            <Button  type=\"submit\" className=\"btn-lg btn-dark btn-block\">Log in</Button>\n        \n          \n     \n  \n    \n    </form>\n    )\n  }\n  }\n  export default withRouter(Login);\n\n\n    // function Login(props){\n    //     const [username, setUsername] = useState(\"\")\n    //     const [password, setPassword] = useState(\"\")\n    \n    //     const handleUsernameChange = (e) => {\n    //         setUsername(e.target.value)\n    //     }\n    \n    //     const handlePasswordChange = (e) => {\n    //         setPassword(e.target.value)\n    //     }\n    \n    //     const handleSubmit = (e) => {\n    //         e.preventDefault()\n    //         fetch(`http://localhost:3001/api/v1/login`, {\n    //             method: \"POST\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n    //                 \"Accept\": \"application/json\"\n    //             },\n    //             body: JSON.stringify({\n    //                 username,\n    //                 password\n    //             })\n    //         })\n    //         .then(resp => resp.json())\n    //         .then(data => {\n    //             localStorage.setItem(\"token\", data.jwt)\n    //             props.handleLogin(data.user)\n    //             props.history.push(\"/\")\n    //         })\n    //         setUsername(\"\")\n    //         setPassword(\"\")\n\n    //     }\n    //     const formDivStyle = {\n    //         margin: \"auto\",\n    //         padding: \"20px\",\n    //         width: \"80%\"\n    //     }\n    //     return(\n    //         <div>\n    //             {/* <Paper elevation={0} /> */}\n\n    //             <div style={formDivStyle}>\n    //             <h1>Log In</h1>\n    //             <form class=\"ui form\" onSubmit={handleSubmit}>\n    //                 <div class=\"field\">\n    //                     <label>Username</label>\n    //                     <input value={username} onChange={handleUsernameChange} type=\"text\" placeholder=\"username\"/>\n    //                 </div>\n    //                 <div class=\"field\">\n    //                     <label>Password</label>\n    //                     <input value={password} onChange={handlePasswordChange} type=\"password\" placeholder=\"password\"/>\n    //                 </div>\n                    \n    //                 <button class=\"ui button\" type=\"submit\">Submit</button>\n    //             </form>\n    //         </div>\n    //         {/* <Paper /> */}\n    //         </div>\n    //     )\n    // } \n\n// class Login extends React.Component {\n//     state = ({\n//         username: \"\",\n//         password: \"\"\n//     })\n\n//     handleInput = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         })\n//     }\n\n//     handleSubmit = (e) => {\n//         e.preventDefault()\n    \n//         fetch('http://localhost:3001/api/v1/users',{\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             \"Accept\": \"application/json\"\n//           },\n//           body: JSON.stringify({\n//             user: this.state\n//           })\n//         }).then(res => res.json())\n//         .then(data => {\n\n//             localStorage.setItem('token', data.jwt)\n//             this.props.history.push('/')\n   \n     \n//         })\n        \n//       }\n    \n\n//     render() {\n//         return(\n//             <section>\n   \n//             <Form onSubmit={this.handleSubmit} className=\"login-form\" style={{width:\"100%\", maxWidth:\"330px\", padding:\"15px\", margin:\"auto\", height:\"100%\"}}>\n//                 <h1>\n//                     {/* <span className=\"font-weight-bold\">VanBnB</span> */}\n//                 </h1>\n//                 <h2 className=\"text-center\">Welcome</h2>\n//                 <FormGroup>\n//                     <Form.Label>Username</Form.Label>\n//                     <Form.Control name=\"username\" placeholder=\"Username\" onChange={this.handleInput} value={this.state.username} />\n//                 </FormGroup>\n//                 <FormGroup>\n//                     <Form.Label>Password</Form.Label>\n//                     <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleInput} value={this.state.password} />\n//                 </FormGroup>\n//                 <Button  type=\"submit\" className=\"btn-lg btn-dark btn-block\">Log in</Button>\n                \n              \n//             </Form>\n    \n//         </section>\n//         )\n//     }\n// }\n\n","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["124","125","126"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["127","128","129"],"import { TableFooter } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/Navbars/NewProjectNav';\nimport NewProjectCard from '../components/NewProjectCard';\nimport NewProjectTabs from '../components/Tabs/NewProjectTabs'\n\n\nfunction NewProjectContainer() {\n\n\n\n    const props = useLocation();\n    console.log(props.state)\n    // const project = [project, setProject] = useState({})\n    // const [projects, setProjects] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3001/api/v1/projects', )\n//           .then(res => res.json())\n//           .then(projects => setProjects(projects));\n//       }, []);\n\n//     const createNew = () => {\n//         fetch('http://localhost:3001/api/v1/projects',\n//         {\n//             method: 'POST',\n//             headers: {\n//                 // Authorization: `Bearer ${token}`,\n//                 'Content-Type': 'application/json',\n//                 'Accept': 'application/json',\n\n//             },\n//             body: JSON.stringify({\n//                 title: props.state.title,\n//                 story: props.state.story,\n//                 timeline: parseInt(props.state.timeline),\n//                 fundraising_goal: parseInt(props.state.fundraising_goal),\n//                 image: props.state.image,\n//                 github: props.state.github,\n//                 language: props.state.language,\n//                 stage: props.state.stage,\n//                 user_id: props.state.data.state.user.id\n//             }),\n//         })\n\n\n//         .then(r => r.json())\n//         .then(project => {\n//             setProjects([...projects, project]);\n        \n//     })\n// }\n\n\n  \n\n    return (\n        <div>\n            <NewProjectNav user={props.state.data.state.user} />\n            <h1>{props.state.title}</h1>\n            <NewProjectCard title={props.state.title} story={props.state.story} timeline={props.state.timeline}\n                            fundraising_goal={props.state.fundraising_goal} image={props.state.image}\n                            github={props.state.github} language={props.state.language} stage={props.state.stage}\n                            user_id= {props.state.data.state.user.id} />\n            <NewProjectTabs title={props.state.title} story={props.state.story} timeline={props.state.timeline}\n                            fundraising_goal={props.state.fundraising_goal} image={props.state.image}\n                            github={props.state.github} language={props.state.language} stage={props.state.stage}\n                            user_id= {props.state.data.state.user.id} project={props.state.project} />\n        </div>\n    )\n\n\n\n\n\n\n\n\n};\n\nexport default NewProjectContainer;","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["130","131"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["132","133"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["134","135","136","137"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["138","139","140","141"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["142","143","144","145","146"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",["147","148","149","150","151","152","153","154"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["155","156","157","158"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["159"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js",["160","161","162","163","164"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js",["165","166"],{"ruleId":"167","severity":1,"message":"168","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"171","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":3,"column":17,"nodeType":"169","messageId":"170","endLine":3,"endColumn":25},{"ruleId":"167","severity":1,"message":"173","line":3,"column":27,"nodeType":"169","messageId":"170","endLine":3,"endColumn":36},{"ruleId":"167","severity":1,"message":"174","line":5,"column":10,"nodeType":"169","messageId":"170","endLine":5,"endColumn":30},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"167","severity":1,"message":"179","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":20},{"ruleId":"167","severity":1,"message":"180","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":44,"column":10,"nodeType":"183","endLine":45,"endColumn":43},{"ruleId":"167","severity":1,"message":"179","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":20},{"ruleId":"167","severity":1,"message":"184","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},{"ruleId":"167","severity":1,"message":"185","line":12,"column":10,"nodeType":"169","messageId":"170","endLine":12,"endColumn":14},{"ruleId":"167","severity":1,"message":"186","line":67,"column":12,"nodeType":"169","messageId":"170","endLine":67,"endColumn":24},{"ruleId":"167","severity":1,"message":"187","line":89,"column":11,"nodeType":"169","messageId":"170","endLine":89,"endColumn":29},{"ruleId":"188","severity":1,"message":"189","line":178,"column":4,"nodeType":"190","endLine":178,"endColumn":6,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":243,"column":13,"nodeType":"194","endLine":243,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"171","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":8,"column":10,"nodeType":"169","messageId":"170","endLine":8,"endColumn":19},{"ruleId":"167","severity":1,"message":"173","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"167","severity":1,"message":"195","line":49,"column":12,"nodeType":"169","messageId":"170","endLine":49,"endColumn":19},{"ruleId":"167","severity":1,"message":"196","line":49,"column":21,"nodeType":"169","messageId":"170","endLine":49,"endColumn":31},{"ruleId":"167","severity":1,"message":"197","line":1,"column":10,"nodeType":"169","messageId":"170","endLine":1,"endColumn":21},{"ruleId":"167","severity":1,"message":"168","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":25},{"ruleId":"167","severity":1,"message":"173","line":2,"column":27,"nodeType":"169","messageId":"170","endLine":2,"endColumn":36},{"ruleId":"167","severity":1,"message":"198","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":16},{"ruleId":"167","severity":1,"message":"199","line":58,"column":10,"nodeType":"169","messageId":"170","endLine":58,"endColumn":14},{"ruleId":"167","severity":1,"message":"185","line":16,"column":10,"nodeType":"169","messageId":"170","endLine":16,"endColumn":14},{"ruleId":"167","severity":1,"message":"199","line":56,"column":10,"nodeType":"169","messageId":"170","endLine":56,"endColumn":14},{"ruleId":"167","severity":1,"message":"200","line":95,"column":11,"nodeType":"169","messageId":"170","endLine":95,"endColumn":22},{"ruleId":"167","severity":1,"message":"201","line":100,"column":11,"nodeType":"169","messageId":"170","endLine":100,"endColumn":15},{"ruleId":"202","severity":1,"message":"203","line":122,"column":72,"nodeType":"204","messageId":"205","endLine":122,"endColumn":74},{"ruleId":"202","severity":1,"message":"203","line":174,"column":68,"nodeType":"204","messageId":"205","endLine":174,"endColumn":70},{"ruleId":"167","severity":1,"message":"168","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"206","line":7,"column":9,"nodeType":"169","messageId":"170","endLine":7,"endColumn":20},{"ruleId":"167","severity":1,"message":"171","line":15,"column":10,"nodeType":"169","messageId":"170","endLine":15,"endColumn":19},{"ruleId":"167","severity":1,"message":"207","line":61,"column":11,"nodeType":"169","messageId":"170","endLine":61,"endColumn":15},{"ruleId":"167","severity":1,"message":"208","line":19,"column":8,"nodeType":"169","messageId":"170","endLine":19,"endColumn":12},{"ruleId":"167","severity":1,"message":"209","line":20,"column":8,"nodeType":"169","messageId":"170","endLine":20,"endColumn":14},{"ruleId":"167","severity":1,"message":"210","line":21,"column":8,"nodeType":"169","messageId":"170","endLine":21,"endColumn":13},{"ruleId":"167","severity":1,"message":"211","line":79,"column":7,"nodeType":"169","messageId":"170","endLine":79,"endColumn":23},{"ruleId":"188","severity":1,"message":"212","line":120,"column":6,"nodeType":"190","endLine":120,"endColumn":8,"suggestions":"213"},{"ruleId":"167","severity":1,"message":"173","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"214","line":18,"column":8,"nodeType":"169","messageId":"170","endLine":18,"endColumn":21},{"ruleId":"167","severity":1,"message":"208","line":19,"column":8,"nodeType":"169","messageId":"170","endLine":19,"endColumn":12},{"ruleId":"167","severity":1,"message":"209","line":20,"column":8,"nodeType":"169","messageId":"170","endLine":20,"endColumn":14},{"ruleId":"167","severity":1,"message":"210","line":21,"column":8,"nodeType":"169","messageId":"170","endLine":21,"endColumn":13},{"ruleId":"167","severity":1,"message":"215","line":93,"column":9,"nodeType":"169","messageId":"170","endLine":93,"endColumn":14},{"ruleId":"167","severity":1,"message":"216","line":104,"column":9,"nodeType":"169","messageId":"170","endLine":104,"endColumn":23},{"ruleId":"167","severity":1,"message":"217","line":113,"column":20,"nodeType":"169","messageId":"170","endLine":113,"endColumn":31},{"ruleId":"218","severity":2,"message":"219","line":16,"column":21,"nodeType":"169","messageId":"220","endLine":16,"endColumn":25},{"ruleId":"221","severity":2,"message":"222","line":16,"column":36,"nodeType":"169","messageId":"223","endLine":16,"endColumn":47},{"ruleId":"221","severity":2,"message":"222","line":33,"column":28,"nodeType":"169","messageId":"223","endLine":33,"endColumn":39},{"ruleId":"221","severity":2,"message":"222","line":36,"column":28,"nodeType":"169","messageId":"223","endLine":36,"endColumn":39},{"ruleId":"167","severity":1,"message":"180","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":17},{"ruleId":"167","severity":1,"message":"224","line":21,"column":7,"nodeType":"169","messageId":"170","endLine":21,"endColumn":14},{"ruleId":"188","severity":1,"message":"212","line":31,"column":6,"nodeType":"190","endLine":31,"endColumn":8,"suggestions":"225"},{"ruleId":"202","severity":1,"message":"203","line":33,"column":70,"nodeType":"204","messageId":"205","endLine":33,"endColumn":72},{"ruleId":"202","severity":1,"message":"203","line":40,"column":33,"nodeType":"204","messageId":"205","endLine":40,"endColumn":35},{"ruleId":"202","severity":1,"message":"203","line":44,"column":46,"nodeType":"204","messageId":"205","endLine":44,"endColumn":48},{"ruleId":"167","severity":1,"message":"226","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"227","line":74,"column":11,"nodeType":"169","messageId":"170","endLine":74,"endColumn":18},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.","'createBrowserHistory' is defined but never used.","no-native-reassign",["228"],"no-negated-in-lhs",["229"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'GitHubIcon' is defined but never used.","'Link' is defined but never used.","'githubChange' is assigned a value but never used.","'handleGithubChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.state.project.id'. Either include it or remove the dependency array.","ArrayExpression",["230"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","'TableFooter' is defined but never used.","'MenuIcon' is defined but never used.","'show' is assigned a value but never used.","'listClasses' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLocation' is defined but never used.","'bull' is assigned a value but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'useCommentStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.project.id'. Either include it or remove the dependency array.",["231"],"'SupporterCard' is defined but never used.","'token' is assigned a value but never used.","'commentClasses' is assigned a value but never used.","'setAllPosts' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef","'message' is assigned a value but never used.",["232"],"'SearchIcon' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},"Update the dependencies array to be: [data.state.project.id]",{"range":"238","text":"239"},"Update the dependencies array to be: [props.project.id]",{"range":"240","text":"241"},{"range":"242","text":"241"},[5228,5230],"[data.state.project.id]",[3103,3105],"[props.project.id]",[1030,1032]]