[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22"},{"size":362,"mtime":1610662302244,"results":"23","hashOfConfig":"24"},{"size":6228,"mtime":1610931717332,"results":"25","hashOfConfig":"24"},{"size":3321,"mtime":1610980146753,"results":"26","hashOfConfig":"24"},{"size":500,"mtime":1610662302243,"results":"27","hashOfConfig":"24"},{"size":590,"mtime":1610832419708,"results":"28","hashOfConfig":"24"},{"size":1420,"mtime":1611082151937,"results":"29","hashOfConfig":"24"},{"size":2370,"mtime":1611086070680,"results":"30","hashOfConfig":"24"},{"size":287,"mtime":1610931692896,"results":"31","hashOfConfig":"24"},{"size":1752,"mtime":1610931700597,"results":"32","hashOfConfig":"24"},{"size":746,"mtime":1610931682809,"results":"33","hashOfConfig":"24"},{"size":4094,"mtime":1611085920593,"results":"34","hashOfConfig":"24"},{"size":6228,"mtime":1610931717332,"results":"35","hashOfConfig":"24"},{"size":15641,"mtime":1611079646107,"results":"36","hashOfConfig":"24"},{"size":2752,"mtime":1611074429585,"results":"37","hashOfConfig":"24"},{"size":3604,"mtime":1611068060241,"results":"38","hashOfConfig":"24"},{"size":3605,"mtime":1611082179954,"results":"39","hashOfConfig":"24"},{"size":3665,"mtime":1611077276606,"results":"40","hashOfConfig":"24"},{"size":1889,"mtime":1611074703314,"results":"41","hashOfConfig":"24"},{"size":5263,"mtime":1611087061394,"results":"42","hashOfConfig":"24"},{"size":2225,"mtime":1611074419926,"results":"43","hashOfConfig":"24"},{"size":1338,"mtime":1611075337535,"results":"44","hashOfConfig":"24"},{"size":4292,"mtime":1611086554124,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18w8y2t",{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["92","93","94"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["95","96","97"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["98","99"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["100","101","102"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["103"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["104","105"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["106","107","108"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["109"],"import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const data = useLocation();\n\n \n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    \n    const [projects, setProjects] = useState([]);\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                // Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => {\n            setProjects([...projects, project]);\n        \n    })\n    const details = {\n        'Title': title,\n        'Story': story,\n        'Timeline': timeline,\n        'Fundraising Goal': fundraising_goal,\n        'Image': image,\n        'Github': github,\n        'Language': language,\n        'Stage': stage,\n        'User': data.state.user\n\n    }\n    console.log(details);\n}\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Cover image?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Link to={{\n                        pathname: \"/new\",\n                        state: {\n                           \n                            title,\n                            story,\n                            timeline,\n                            fundraising_goal,\n                            image,\n                            github,\n                            language,\n                            stage,\n                            data\n                        }\n                        \n\n                    }} >\n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                    </Link>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(CreateProject)","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["110","111","112"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["113"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["114","115"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["116","117","118"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["119","120","121"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["122"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["123","124","125","126"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["127"],{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"133","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":3,"column":17,"nodeType":"130","messageId":"131","endLine":3,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":3,"column":27,"nodeType":"130","messageId":"131","endLine":3,"endColumn":36},{"ruleId":"128","severity":1,"message":"135","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":30},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"128","severity":1,"message":"140","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"141","line":7,"column":8,"nodeType":"130","messageId":"131","endLine":7,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":44,"column":10,"nodeType":"144","endLine":45,"endColumn":43},{"ruleId":"128","severity":1,"message":"140","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":20},{"ruleId":"128","severity":1,"message":"145","line":12,"column":8,"nodeType":"130","messageId":"131","endLine":12,"endColumn":19},{"ruleId":"128","severity":1,"message":"146","line":14,"column":8,"nodeType":"130","messageId":"131","endLine":14,"endColumn":14},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":2,"column":9,"nodeType":"130","messageId":"131","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"133","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":19},{"ruleId":"128","severity":1,"message":"147","line":68,"column":11,"nodeType":"130","messageId":"131","endLine":68,"endColumn":16},{"ruleId":"128","severity":1,"message":"148","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":25},{"ruleId":"128","severity":1,"message":"134","line":2,"column":27,"nodeType":"130","messageId":"131","endLine":2,"endColumn":36},{"ruleId":"128","severity":1,"message":"149","line":56,"column":10,"nodeType":"130","messageId":"131","endLine":56,"endColumn":14},{"ruleId":"128","severity":1,"message":"150","line":16,"column":10,"nodeType":"130","messageId":"131","endLine":16,"endColumn":14},{"ruleId":"128","severity":1,"message":"149","line":55,"column":10,"nodeType":"130","messageId":"131","endLine":55,"endColumn":14},{"ruleId":"128","severity":1,"message":"151","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"128","severity":1,"message":"152","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":21},{"ruleId":"128","severity":1,"message":"153","line":46,"column":11,"nodeType":"130","messageId":"131","endLine":46,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"154","line":8,"column":9,"nodeType":"130","messageId":"131","endLine":8,"endColumn":20},{"ruleId":"128","severity":1,"message":"155","line":34,"column":11,"nodeType":"130","messageId":"131","endLine":34,"endColumn":15},{"ruleId":"128","severity":1,"message":"147","line":80,"column":9,"nodeType":"130","messageId":"131","endLine":80,"endColumn":14},{"ruleId":"156","severity":2,"message":"157","line":16,"column":21,"nodeType":"130","messageId":"158","endLine":16,"endColumn":25},{"ruleId":"159","severity":2,"message":"160","line":16,"column":36,"nodeType":"130","messageId":"161","endLine":16,"endColumn":47},{"ruleId":"159","severity":2,"message":"160","line":33,"column":28,"nodeType":"130","messageId":"161","endLine":33,"endColumn":39},{"ruleId":"159","severity":2,"message":"160","line":36,"column":28,"nodeType":"130","messageId":"161","endLine":36,"endColumn":39},{"ruleId":"128","severity":1,"message":"141","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.","'createBrowserHistory' is defined but never used.","no-native-reassign",["162"],"no-negated-in-lhs",["163"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardActions' is defined but never used.","'Button' is defined but never used.","'token' is assigned a value but never used.","'TableFooter' is defined but never used.","'show' is assigned a value but never used.","'Link' is defined but never used.","'Typography' is defined but never used.","'AccountCircle' is defined but never used.","'data' is assigned a value but never used.","'useLocation' is defined but never used.","'bull' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef","no-global-assign","no-unsafe-negation"]