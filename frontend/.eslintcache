[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22"},{"size":362,"mtime":1610662302244,"results":"23","hashOfConfig":"24"},{"size":6228,"mtime":1610931717332,"results":"25","hashOfConfig":"24"},{"size":3494,"mtime":1611123729793,"results":"26","hashOfConfig":"24"},{"size":500,"mtime":1610662302243,"results":"27","hashOfConfig":"24"},{"size":590,"mtime":1610832419708,"results":"28","hashOfConfig":"24"},{"size":1423,"mtime":1611121427193,"results":"29","hashOfConfig":"24"},{"size":2370,"mtime":1611086070680,"results":"30","hashOfConfig":"24"},{"size":287,"mtime":1610931692896,"results":"31","hashOfConfig":"24"},{"size":1752,"mtime":1610931700597,"results":"32","hashOfConfig":"24"},{"size":746,"mtime":1610931682809,"results":"33","hashOfConfig":"24"},{"size":7016,"mtime":1611123766663,"results":"34","hashOfConfig":"24"},{"size":6239,"mtime":1611124343224,"results":"35","hashOfConfig":"24"},{"size":15752,"mtime":1611109297219,"results":"36","hashOfConfig":"24"},{"size":2811,"mtime":1611107756021,"results":"37","hashOfConfig":"24"},{"size":3604,"mtime":1611068060241,"results":"38","hashOfConfig":"24"},{"size":3609,"mtime":1611119031797,"results":"39","hashOfConfig":"24"},{"size":9243,"mtime":1611121263194,"results":"40","hashOfConfig":"24"},{"size":1850,"mtime":1611093834245,"results":"41","hashOfConfig":"24"},{"size":6782,"mtime":1611127650735,"results":"42","hashOfConfig":"24"},{"size":5535,"mtime":1611107765092,"results":"43","hashOfConfig":"24"},{"size":1338,"mtime":1611075337535,"results":"44","hashOfConfig":"24"},{"size":4325,"mtime":1611087469037,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18w8y2t",{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["92","93","94"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["95","96","97"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["98","99"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["100","101","102"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["103"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["104","105","106","107"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["108","109","110"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["111","112","113","114"],"import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport MainNavBar from './Navbars/MainNavbar'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const [project, setProject] = useState([]);\n    const data = useLocation();\n\n\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n  \n\n\n    \n    // const [projects, setProjects] = useState([]);\n    // const token = localStorage.getItem('token');\n\n    // useEffect(() => {\n    //     fetch('http://localhost:3001/api/v1/projects')\n    //       .then(res => res.json())\n    //       .then(projects => setProjects(projects));\n    //   }, []);\n\n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => \n            console.log(project))\n         }\n\n\n    // const details = {\n    //     'Title': title,\n    //     'Story': story,\n    //     'Timeline': timeline,\n    //     'Fundraising Goal': fundraising_goal,\n    //     'Image': image,\n    //     'Github': github,\n    //     'Language': language,\n    //     'Stage': stage,\n    //     'User': data.state.user\n\n    // }\n    // console.log(details);\n\n\n\n    return (\n      \n       \n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Cover image?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Link to={{\n                        pathname: \"/new\",\n                        state: {\n                            // project,\n                            title,\n                            story,\n                            timeline,\n                            fundraising_goal,\n                            image,\n                            github,\n                            language,\n                            stage,\n                            data\n                        }\n                        \n\n                    }} >\n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                    </Link>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n \n    );\n}\n\nexport default withRouter(CreateProject)","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["115","116","117"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["118"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["119","120"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["121","122","123","124","125"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["126","127","128","129","130"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["131","132","133","134"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",["135","136","137","138","139","140","141","142"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["143","144","145","146"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["147"],{"ruleId":"148","severity":1,"message":"149","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"152","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":3,"column":17,"nodeType":"150","messageId":"151","endLine":3,"endColumn":25},{"ruleId":"148","severity":1,"message":"154","line":3,"column":27,"nodeType":"150","messageId":"151","endLine":3,"endColumn":36},{"ruleId":"148","severity":1,"message":"155","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":30},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"148","severity":1,"message":"160","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"161","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":44,"column":10,"nodeType":"164","endLine":45,"endColumn":43},{"ruleId":"148","severity":1,"message":"160","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":20},{"ruleId":"148","severity":1,"message":"165","line":58,"column":12,"nodeType":"150","messageId":"151","endLine":58,"endColumn":17},{"ruleId":"148","severity":1,"message":"166","line":59,"column":12,"nodeType":"150","messageId":"151","endLine":59,"endColumn":20},{"ruleId":"148","severity":1,"message":"167","line":60,"column":12,"nodeType":"150","messageId":"151","endLine":60,"endColumn":28},{"ruleId":"148","severity":1,"message":"168","line":69,"column":11,"nodeType":"150","messageId":"151","endLine":69,"endColumn":31},{"ruleId":"148","severity":1,"message":"149","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"152","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":19},{"ruleId":"148","severity":1,"message":"154","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"169","line":14,"column":8,"nodeType":"150","messageId":"151","endLine":14,"endColumn":18},{"ruleId":"148","severity":1,"message":"170","line":50,"column":12,"nodeType":"150","messageId":"151","endLine":50,"endColumn":19},{"ruleId":"148","severity":1,"message":"171","line":50,"column":21,"nodeType":"150","messageId":"151","endLine":50,"endColumn":31},{"ruleId":"148","severity":1,"message":"172","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":25},{"ruleId":"148","severity":1,"message":"154","line":2,"column":27,"nodeType":"150","messageId":"151","endLine":2,"endColumn":36},{"ruleId":"148","severity":1,"message":"173","line":56,"column":10,"nodeType":"150","messageId":"151","endLine":56,"endColumn":14},{"ruleId":"148","severity":1,"message":"174","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":14},{"ruleId":"148","severity":1,"message":"173","line":55,"column":10,"nodeType":"150","messageId":"151","endLine":55,"endColumn":14},{"ruleId":"148","severity":1,"message":"175","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":21},{"ruleId":"148","severity":1,"message":"176","line":95,"column":11,"nodeType":"150","messageId":"151","endLine":95,"endColumn":22},{"ruleId":"148","severity":1,"message":"177","line":100,"column":11,"nodeType":"150","messageId":"151","endLine":100,"endColumn":15},{"ruleId":"178","severity":1,"message":"179","line":122,"column":72,"nodeType":"180","messageId":"181","endLine":122,"endColumn":74},{"ruleId":"178","severity":1,"message":"179","line":174,"column":68,"nodeType":"180","messageId":"181","endLine":174,"endColumn":70},{"ruleId":"148","severity":1,"message":"149","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"182","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":19},{"ruleId":"148","severity":1,"message":"183","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":14},{"ruleId":"148","severity":1,"message":"184","line":8,"column":9,"nodeType":"150","messageId":"151","endLine":8,"endColumn":20},{"ruleId":"148","severity":1,"message":"185","line":35,"column":11,"nodeType":"150","messageId":"151","endLine":35,"endColumn":15},{"ruleId":"148","severity":1,"message":"186","line":94,"column":9,"nodeType":"150","messageId":"151","endLine":94,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":120,"column":6,"nodeType":"189","endLine":120,"endColumn":8,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"188","line":149,"column":6,"nodeType":"189","endLine":149,"endColumn":8,"suggestions":"191"},{"ruleId":"178","severity":1,"message":"179","line":222,"column":42,"nodeType":"180","messageId":"181","endLine":222,"endColumn":44},{"ruleId":"148","severity":1,"message":"154","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"192","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":21},{"ruleId":"148","severity":1,"message":"193","line":19,"column":8,"nodeType":"150","messageId":"151","endLine":19,"endColumn":12},{"ruleId":"148","severity":1,"message":"194","line":20,"column":8,"nodeType":"150","messageId":"151","endLine":20,"endColumn":14},{"ruleId":"148","severity":1,"message":"195","line":21,"column":8,"nodeType":"150","messageId":"151","endLine":21,"endColumn":13},{"ruleId":"148","severity":1,"message":"186","line":93,"column":9,"nodeType":"150","messageId":"151","endLine":93,"endColumn":14},{"ruleId":"148","severity":1,"message":"196","line":104,"column":9,"nodeType":"150","messageId":"151","endLine":104,"endColumn":23},{"ruleId":"148","severity":1,"message":"197","line":113,"column":20,"nodeType":"150","messageId":"151","endLine":113,"endColumn":31},{"ruleId":"198","severity":2,"message":"199","line":16,"column":21,"nodeType":"150","messageId":"200","endLine":16,"endColumn":25},{"ruleId":"201","severity":2,"message":"202","line":16,"column":36,"nodeType":"150","messageId":"203","endLine":16,"endColumn":47},{"ruleId":"201","severity":2,"message":"202","line":33,"column":28,"nodeType":"150","messageId":"203","endLine":33,"endColumn":39},{"ruleId":"201","severity":2,"message":"202","line":36,"column":28,"nodeType":"150","messageId":"203","endLine":36,"endColumn":39},{"ruleId":"148","severity":1,"message":"161","line":6,"column":8,"nodeType":"150","messageId":"151","endLine":6,"endColumn":17},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.","'createBrowserHistory' is defined but never used.","no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'story' is assigned a value but never used.","'timeline' is assigned a value but never used.","'fundraising_goal' is assigned a value but never used.","'handleTimelineChange' is assigned a value but never used.","'MainNavBar' is defined but never used.","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","'TableFooter' is defined but never used.","'show' is assigned a value but never used.","'Link' is defined but never used.","'AccountCircle' is defined but never used.","'listClasses' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardActions' is defined but never used.","'Button' is defined but never used.","'useLocation' is defined but never used.","'bull' is assigned a value but never used.","'token' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.project.id'. Either include it or remove the dependency array.","ArrayExpression",["206"],["207"],"'SupporterCard' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'Paper' is defined but never used.","'commentClasses' is assigned a value but never used.","'setAllPosts' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"208","fix":"210"},"Update the dependencies array to be: [props.project.id]",{"range":"211","text":"212"},{"range":"213","text":"212"},[3152,3154],"[props.project.id]",[3885,3887]]