[{"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js":"1","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js":"2","/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js":"3","/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js":"4","/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js":"5","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js":"6","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js":"7","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js":"8","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js":"9","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js":"10","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js":"11","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js":"12","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js":"13","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js":"14","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js":"15","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js":"16","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js":"17","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js":"18","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js":"19","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js":"20","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js":"21","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js":"22","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js":"23","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js":"24","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SupportingProjectsContainer.js":"25","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectsCard.js":"26","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectShow.js":"27","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/SupportingProjectTab.js":"28","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js":"29","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectPostCard.js":"30","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/PostCard.js":"31","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectsContainerNavbar.js":"32","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectShowNavbar.js":"33","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCommentCard.js":"34","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Signup.js":"35","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SearchResultsContainer.js":"36","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsCard.js":"37","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsShow.js":"38","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SearchResultsNav.js":"39","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectSupporterCard.js":"40","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectPostCard.js":"41","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/LandingPage.js":"42","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/LandingPageNav.js":"43","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectPostCardContainer.js":"44","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/CreateProjectNav.js":"45"},{"size":362,"mtime":1610662302244,"results":"46","hashOfConfig":"47"},{"size":6228,"mtime":1610931717332,"results":"48","hashOfConfig":"47"},{"size":3060,"mtime":1625840216681,"results":"49","hashOfConfig":"50"},{"size":500,"mtime":1610662302243,"results":"51","hashOfConfig":"47"},{"size":590,"mtime":1610832419708,"results":"52","hashOfConfig":"47"},{"size":1283,"mtime":1625840184684,"results":"53","hashOfConfig":"50"},{"size":2405,"mtime":1611272294510,"results":"54","hashOfConfig":"47"},{"size":287,"mtime":1610931692896,"results":"55","hashOfConfig":"47"},{"size":1752,"mtime":1610931700597,"results":"56","hashOfConfig":"47"},{"size":746,"mtime":1610931682809,"results":"57","hashOfConfig":"47"},{"size":13587,"mtime":1611855891985,"results":"58","hashOfConfig":"47"},{"size":5937,"mtime":1614788554393,"results":"59","hashOfConfig":"47"},{"size":15347,"mtime":1612365878223,"results":"60","hashOfConfig":"47"},{"size":2473,"mtime":1611797086313,"results":"61","hashOfConfig":"47"},{"size":3185,"mtime":1625840758003,"results":"62","hashOfConfig":"50"},{"size":3410,"mtime":1625840429410,"results":"63","hashOfConfig":"50"},{"size":10606,"mtime":1611810268308,"results":"64","hashOfConfig":"50"},{"size":14050,"mtime":1611799823995,"results":"65","hashOfConfig":"47"},{"size":5974,"mtime":1612366443402,"results":"66","hashOfConfig":"47"},{"size":4201,"mtime":1611681486333,"results":"67","hashOfConfig":"47"},{"size":1338,"mtime":1611075337535,"results":"68","hashOfConfig":"47"},{"size":4476,"mtime":1611767493445,"results":"69","hashOfConfig":"47"},{"size":1635,"mtime":1611800576629,"results":"70","hashOfConfig":"47"},{"size":4693,"mtime":1611702004588,"results":"71","hashOfConfig":"47"},{"size":1352,"mtime":1611624853565,"results":"72","hashOfConfig":"47"},{"size":2821,"mtime":1611845576893,"results":"73","hashOfConfig":"47"},{"size":9874,"mtime":1612370928269,"results":"74","hashOfConfig":"47"},{"size":5343,"mtime":1612367112429,"results":"75","hashOfConfig":"47"},{"size":1658,"mtime":1612366841155,"results":"76","hashOfConfig":"47"},{"size":1078,"mtime":1612367183077,"results":"77","hashOfConfig":"47"},{"size":1205,"mtime":1612367159992,"results":"78","hashOfConfig":"47"},{"size":3754,"mtime":1612365274392,"results":"79","hashOfConfig":"47"},{"size":4165,"mtime":1612365450789,"results":"80","hashOfConfig":"47"},{"size":1625,"mtime":1611287053353,"results":"81","hashOfConfig":"47"},{"size":5346,"mtime":1611723264822,"results":"82","hashOfConfig":"47"},{"size":1301,"mtime":1611804833834,"results":"83","hashOfConfig":"47"},{"size":3134,"mtime":1611804972881,"results":"84","hashOfConfig":"47"},{"size":7247,"mtime":1613762094552,"results":"85","hashOfConfig":"47"},{"size":3649,"mtime":1611724998103,"results":"86","hashOfConfig":"47"},{"size":4335,"mtime":1611287127897,"results":"87","hashOfConfig":"50"},{"size":1169,"mtime":1611286981800,"results":"88","hashOfConfig":"47"},{"size":1385,"mtime":1611790267259,"results":"89","hashOfConfig":"47"},{"size":1162,"mtime":1611722698696,"results":"90","hashOfConfig":"47"},{"size":3124,"mtime":1611726308610,"results":"91","hashOfConfig":"47"},{"size":3248,"mtime":1625840482124,"results":"92","hashOfConfig":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"18w8y2t",{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"tgahkb",{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"95"},{"filePath":"144","messages":"145","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"138"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"95"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"176"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sarabastian/Flatiron/code/final-project/frontend/src/reportWebVitals.js",[],["208","209"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/login.js",["210","211","212"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js",["213","214"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/index.js",[],["215","216"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/Header.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectCard.js",["217","218","219"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\n\n\nclass ProjectCard extends React.Component {\n\nstate = {\n\n    clicked: false,\n    project: []\n}\n\ncomponentDidMount(){\n  fetch(`http://localhost:3001/api/v1/projects/${this.props.project.id}`)\n  .then(r=>r.json())\n  .then(project => this.setState({ project}))\n}\n\nhandleClick = () => {\n\n    this.setState({\n        clicked: true\n    })\n}\n render(){\n  //  console.log(this.state.project.supporters)\n\n    return (\n       \n        <Card className=\"project-card\">\n            <CardActionArea>\n\n         \n         <img src={this.props.project.image}\n          title=\"Contemplative Reptile\" />\n    \n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {this.state.project.title}\n          </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {this.state.project.story}\n          </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n\n        <Link to={{\n            pathname: \"/show\",\n            state: {\n              project: this.state.project,\n              key: this.state.project.id,\n              user: this.props.user,\n              posts: this.state.project.posts,\n              comments: this.state.project.comments,\n              commenters: this.state.project.commenters,\n              supporters: this.state.project.supporters,\n              requesters: this.state.project.requesters\n    \n            }\n            \n           }} style={{ textDecoration: 'none' }} >\n        <Button size=\"small\" color=\"primary\">\n          Manage\n         \n        </Button>\n        </Link>\n       \n      </CardActions>\n        </Card>\n        \n    )\n }\n}\n\n\n\nexport default withRouter(ProjectCard);","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectShow.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/projectCard.js",["220"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/main.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js",["221","222","223","224","225","226","227","228","229","230"],"import React, { useEffect } from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { Redirect } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CardContent from '@material-ui/core/CardContent';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CodeIcon from '@material-ui/icons/Code';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { green } from '@material-ui/core/colors';\n\nconst paperStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(1),\n      width: theme.spacing(16),\n      height: theme.spacing(16),\n    },\n  },\n}));\nconst useChipStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nconst useStyle = makeStyles({\n  root: {\n      minWidth: 275,\n      height: 200\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 32,\n      marginLeft: 20\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: 400\n  },\n  details: {\n    display: 'center',\n    // flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 1500,\n    height: 450\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  playIcon: {\n    height: 38,\n    width: 38,\n  },\n}));\n\n\n\nconst useAccordionStyles = makeStyles((theme) => ({\n  root: {\n    width: 200,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n}));\n\nconst ProjectShow = () =>  {\n    const data = useLocation()\n    const styles = useStyle();\n    const paperClasses = paperStyles();\n    const accordionClasses = useAccordionStyles();\n    const classes = useStyles();\n\n    const [open, setOpen] = React.useState(false);\n    const [story, setStory] = React.useState(data.state.project.story);\n    const [timeline, setTimeline] = React.useState(data.state.project.timeline);\n    const [fundraising_goal, setFundraisingGoal] = React.useState(data.state.project.fundraising_goal);\n    const [deleted, setDelete] = React.useState(false);\n    const [githubChange, setGithubChange] = React.useState(data.state.project.github);\n    const [currentProject, setCurrentProject] = React.useState([])\n    const [updatedProject, setUpdatedProject] = React.useState([])\n    const [changedStory, setClickforChangedStory] = React.useState(false)\n    const [changedTimeline, setClickforChangedTimeline] = React.useState(false)\n    const [changedFundraising, setClickforChangedFundraising] = React.useState(false)\n    const chipClasses = useChipStyles();\n\n    const handleStoryChange = (event) => {\n      setClickforChangedStory(true);\n      setStory(event.target.value) ;\n    };\n\n    const handleTimelineChange = (event) => {\n      setClickforChangedTimeline(true);\n      setTimeline(event.target.value) ;\n    };\n  \n    const handleFundraisingChange = (event) => {\n      setClickforChangedFundraising(true);\n      setFundraisingGoal(event.target.value)\n    };\n\n    const handleGithubChange = (event) => {\n      setGithubChange(event.target.value)\n    }\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n    \n  \n  \n    const handleDelete = () => {\n      setDelete(true);\n      fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n        method: 'DELETE'\n        })\n      \n    }\n\n \n  const handleStoryUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        story: story\n      })\n    })\n    .then(res => res.json())\n    .then(project => setUpdatedProject(project))\n  }\n\n  const handleTimelineUpdate = () => {\n    fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n      method:'PATCH',\n      headers:{\n        'Content-Type':'application/json',\n          Accept: 'application/json',\n      },\n      body: JSON.stringify({\n         timeline: timeline\n      })\n    })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n  } \n\nconst handleFundraisingUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      fundraising_goal: fundraising_goal\n    })\n  })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n}\n\n// const handleGithubUpdate = () => {\n//   fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n//     method:'PATCH',\n//     headers:{\n//       'Content-Type':'application/json',\n//         Accept: 'application/json',\n//     },\n//     body: JSON.stringify({\n//       github: githubChange\n//     })\n//   })\n//   .then(res => res.json())\n//   .then(project => setUpdatedProject(project))\n//   }\n\nuseEffect(() => {\n  fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`)\n    .then(res => res.json())\n    .then(project => setCurrentProject(project));\n}, []);\n\n  \n    // console.log(currentProject)\n\n    return (\n      deleted ? <Redirect to=\"/my-projects\" /> : \n  <div>\n  \n  \n      <ProjectShowNav user={data.state.user} project={data.state.project}/>\n\n      \n       \n  \n<Grid>\n         <Card elevation={3} className={classes.root} >\n   \n    \n         <div className={classes.details}>\n        <CardContent className={classes.content}>\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                    {currentProject.title}\n                    <IconButton  onClick={handleClickOpen}><DeleteOutlinedIcon  color=\"secondary\"/>\n                   \n                \n                      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{'Are you sure you want to delete this project?'}</DialogTitle>\n     \n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick ={handleDelete} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n                   \n            \n                   \n                    </IconButton>\n          </Typography>\n        \n          {/* </Paper> */}\n          {/* <Paper elevation={3} > */}\n\n         \n            \n        \n                 \n                   <IconButton onClick={handleStoryUpdate} >   \n                   <div className={accordionClasses.root}>         \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n      <Typography className={accordionClasses.heading}>{changedStory ? updatedProject.story : currentProject.story}</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <form>\n        <TextField onChange={e => handleStoryChange(e)}\n            autoFocus\n            fullWidth\n            defaultValue={currentProject.story}\n            name='story'\n    \n            fullWidth\n          />\n          </form>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n      </IconButton>\n   \n      <div className={classes.controls}>\n            {/* </Paper> */}\n     \n                   <IconButton onClick={handleTimelineUpdate}>\n                   \n                   <div className={accordionClasses.root}>         \n                   <Typography>Timeline</Typography> \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          minWidth\n        >\n          <Typography className={accordionClasses.heading}> {changedTimeline ? updatedProject.timeline : currentProject.timeline} days left</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleTimelineChange(e)}\n            autoFocus\n            margin=\"dense\"\n            name='timeline'\n            defaultValue={currentProject.timeline}\n            fullWidth\n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n        {/* <Paper elevation={3} > */}\n      \n        <IconButton onClick={handleFundraisingUpdate}>\n                   <div className={accordionClasses.root}>   \n          <Typography>Fundraising Goal</Typography>            \n      <Accordion>\n    \n        <AccordionSummary\n          expandIcon={< EditIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n          \n        >\n          <Typography className={accordionClasses.heading}>${changedFundraising ? updatedProject.fundraising_goal : currentProject.fundraising_goal}</Typography>\n\n          </AccordionSummary>\n          <AccordionDetails>\n          <TextField onChange={e => handleFundraisingChange(e)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            defaultValue={currentProject.fundraising_goal}\n            name='fundraising_goal'\n           \n          />\n        \n     \n        </AccordionDetails>\n          </Accordion>\n          </div>        \n        </IconButton>\n\n\n           \n\n     \n  </div>\n{/* </Paper> */}\n\n{/* </div> */}\n              \n        {/* <Link href={changedProject ? updatedProject.github : currentProject.github} >\n          <GitHubIcon />\n          </Link> */}\n\n\n</CardContent>\n   \n\n{/* // </Paper> */}\n      </div>\n        \n      <CardMedia\n        className={classes.cover}\n        image={data.state.project.image}\n     \n      />\n\n      </Card>\n      </Grid>\n      <Paper variant=\"dense\" component=\"ul\" className={chipClasses.root}>\n      <Link href={data.state.project.github}  variant=\"body2\">\n  <Card  style={{ border: \"none\", boxShadow: \"none\" }}>\n  <CardHeader \n  avatar={ <GitHubIcon color='secondary' /> }\n   />\n   </Card>\n                </Link>\n    <Card style={{ border: \"none\", boxShadow: \"none\" }} >\n  <CardHeader \n  avatar={ <LocationOnIcon color='primary' /> }\n  title={data.state.user.location}\n />\n  \n \n</Card> \n\n<Card style={{ border: \"none\", boxShadow: \"none\" }} >\n  <CardHeader \n  avatar={ <TimelapseIcon color='primary' /> }\n  title={currentProject.stage}\n  subheader='stage'\n />\n  \n \n</Card> \n  \n\n\n\n\n<Card style={{ border: \"none\", boxShadow: \"none\" }} >\n  <CardHeader \n  avatar={ <CodeIcon color='primary' /> }\n  title={currentProject.language}\n   />\n  \n \n</Card> \n\n\n          \n    </Paper>\n\n\n      {/* <AppBar position=\"static\" color='white'>\n  <Toolbar variant=\"dense\">\n   \n\n  <Link href={data.state.project.github}  variant=\"body2\">\n        <GitHubIcon color='secondary'/>   \n                </Link>\n               \n                <LocationOnIcon color='primary'></LocationOnIcon>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n    {data.state.user.location}\n    </Typography>\n    <TimelapseIcon color=\"secondary\"/>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n   {data.state.project.stage} stage\n   </Typography>\n   <CodeIcon color='secondary'/> \n   <Typography variant=\"sm\" color=\"primary\" >\n   \n   {data.state.project.language} \n   </Typography>\n  </Toolbar>\n</AppBar> */}\n\n      <ProjectTabs project={data.state.project} user={data.state.user} posts={data.state.posts}\n                  supporters={data.state.supporters} comments={data.state.comments}\n                  commenters={data.state.commenters} />\n                \n                    \n                    \n               \n              </div>      \n \n                    \n                    \n                    \n\n        )\n    }\n\n\nexport default ProjectShow;",["231","232"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Login.js",["233"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js",["234","235","236"],"import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport CreateProjectNav from './Navbars/CreateProjectNav'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n        \n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const [project, setProject] = useState([]);\n    const data = useLocation();\n\n\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    const history = useHistory();\n\n  \n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => \n          history.push({\n              pathname: \"/new\", \n              state: {\n                  project\n              }})\n          )}\n\n\n    // const details = {\n    //     'Title': title,\n    //     'Story': story,\n    //     'Timeline': timeline,\n    //     'Fundraising Goal': fundraising_goal,\n    //     'Image': image,\n    //     'Github': github,\n    //     'Language': language,\n    //     'Stage': stage,\n    //     'User': data.state.user\n\n    // }\n    // console.log(data);\n    const user = data.state.user\n    // console.log(user)\n\n\n    return (\n      \n        <div>\n           <CreateProjectNav user = {user} />\n       <Box  boxShadow={0}> \n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Campaign</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline (i.e. number of days to complete)?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Paste the source of your project's cover image</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at (i.e. early, mid, late)?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n              \n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                \n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n        </Box>\n        </div>\n \n    );\n}\n\nexport default withRouter(CreateProject)","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js",["237","238","239"],"import { TableFooter } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/Navbars/NewProjectNav';\nimport NewProjectCard from '../components/NewProjectCard';\n\n\n\nfunction NewProjectContainer() {\n\n\n\n    const props = useLocation();\n    console.log(props.state.project)\n    const project = props.state.project\n    // const project = [project, setProject] = useState({})\n    // const [projects, setProjects] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3001/api/v1/projects', )\n//           .then(res => res.json())\n//           .then(projects => setProjects(projects));\n//       }, []);\n\n//     const createNew = () => {\n//         fetch('http://localhost:3001/api/v1/projects',\n//         {\n//             method: 'POST',\n//             headers: {\n//                 // Authorization: `Bearer ${token}`,\n//                 'Content-Type': 'application/json',\n//                 'Accept': 'application/json',\n\n//             },\n//             body: JSON.stringify({\n//                 title: props.state.title,\n//                 story: props.state.story,\n//                 timeline: parseInt(props.state.timeline),\n//                 fundraising_goal: parseInt(props.state.fundraising_goal),\n//                 image: props.state.image,\n//                 github: props.state.github,\n//                 language: props.state.language,\n//                 stage: props.state.stage,\n//                 user_id: props.state.data.state.user.id\n//             }),\n//         })\n\n\n//         .then(r => r.json())\n//         .then(project => {\n//             setProjects([...projects, project]);\n        \n//     })\n// }\n\n\n  \n\n    return (\n        <div>\n            <NewProjectNav user={project.user} />\n     \n            <NewProjectCard project={project} user={project.user}/>\n{/* \n            // <NewProjectTabs title={props.state.title} story={props.state.story} timeline={props.state.timeline}\n            //                 fundraising_goal={props.state.fundraising_goal} image={props.state.image}\n            //                 github={props.state.github} language={props.state.language} stage={props.state.stage}\n            //                 user_id= {props.state.data.state.user.id} project={props.state.project} />  */}\n       \n       \n                            </div> \n    )\n\n\n\n\n\n\n\n\n};\n\nexport default NewProjectContainer;",["240","241"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/NewProjectNav.js",["242"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/MainNavbar.js",["243","244"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/ProjectShowNav.js",["245","246","247","248","249","250","251","252"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCard.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React, { useEffect } from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { Redirect } from 'react-router-dom';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport NewProjectTabs from './Tabs/NewProjectTabs'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Box from '@material-ui/core/Box';\nimport CodeIcon from '@material-ui/icons/Code';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { green } from '@material-ui/core/colors';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyle = makeStyles({\n  root: {\n     \n      height: 150\n  },\n  bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n  },\n  title: {\n      fontSize: 24,\n  },\n  pos: {\n      marginBottom: 12,\n  },\n});\nconst useOwnerStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 50,\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n   color: green[500],\n  },\n\n\n}));\n\nconst useAccordionStyles = makeStyles((theme) => ({\n  root: {\n    width: '400%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\nconst useChipStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n \n    // height: 120\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\n\nfunction NewProjectCard(props) {\n  const data = useLocation()\n  const styles = useStyle();\n  const accordionClasses = useAccordionStyles();\n  const ownerClasses = useOwnerStyles();\n  const chipClasses = useChipStyles();\n\n\n  const [open, setOpen] = React.useState(false);\n  const [story, setStory] = React.useState(data.state.project.story);\n  const [timeline, setTimeline] = React.useState(data.state.project.timeline);\n  const [fundraising_goal, setFundraisingGoal] = React.useState(data.state.project.fundraising_goal);\n  const [deleted, setDelete] = React.useState(false);\n  const [githubChange, setGithubChange] = React.useState(data.state.project.github);\n  const [currentProject, setCurrentProject] = React.useState([])\n  const [updatedProject, setUpdatedProject] = React.useState([])\n  const [changedStory, setClickforChangedStory] = React.useState(false)\n  const [changedTimeline, setClickforChangedTimeline] = React.useState(false)\n  const [changedFundraising, setClickforChangedFundraising] = React.useState(false)\n\n  const handleStoryChange = (event) => {\n    setClickforChangedStory(true);\n    setStory(event.target.value) ;\n  };\n\n  const handleTimelineChange = (event) => {\n    setClickforChangedTimeline(true);\n    setTimeline(event.target.value) ;\n  };\n\n  const handleFundraisingChange = (event) => {\n    setClickforChangedFundraising(true);\n    setFundraisingGoal(event.target.value)\n  };\n\n  const handleGithubChange = (event) => {\n    setGithubChange(event.target.value)\n  }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n\n  const handleDelete = () => {\n    setDelete(true);\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n      method: 'DELETE'\n      })\n    \n  }\n\n \n// console.log(useLocation())\n\n\nconst handleStoryUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n      story: story\n    })\n  })\n  .then(res => res.json())\n  .then(project => setUpdatedProject(project))\n}\n\nconst handleTimelineUpdate = () => {\n  fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n    method:'PATCH',\n    headers:{\n      'Content-Type':'application/json',\n        Accept: 'application/json',\n    },\n    body: JSON.stringify({\n       timeline: timeline\n    })\n  })\n.then(res => res.json())\n.then(project => setUpdatedProject(project))\n} \n\nconst handleFundraisingUpdate = () => {\nfetch(`http://localhost:3001/api/v1/projects/${props.project.id}`, {\n  method:'PATCH',\n  headers:{\n    'Content-Type':'application/json',\n      Accept: 'application/json',\n  },\n  body: JSON.stringify({\n    fundraising_goal: fundraising_goal\n  })\n})\n.then(res => res.json())\n.then(project => setUpdatedProject(project))\n}\n\n// const handleGithubUpdate = () => {\n//   fetch(`http://localhost:3001/api/v1/projects/${data.state.project.id}`, {\n//     method:'PATCH',\n//     headers:{\n//       'Content-Type':'application/json',\n//         Accept: 'application/json',\n//     },\n//     body: JSON.stringify({\n//       github: githubChange\n//     })\n//   })\n//   .then(res => res.json())\n//   .then(project => setUpdatedProject(project))\n//   }\n\nuseEffect(() => {\nfetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n  .then(res => res.json())\n  .then(project => setCurrentProject(project));\n}, []);\n\nconsole.log(currentProject)\n  // console.log(currentProject)\n\n  return (\n    deleted ? <Redirect to=\"/my-projects\" /> : \n    <div>\n      <Grid>\n\n    <Card style={{ border: \"none\", boxShadow: \"none\" }}  className={styles.root} >\n    <div className={styles.details}>\n          <CardContent>\n              <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                  {currentProject.title}\n                  <IconButton  onClick={handleClickOpen}><DeleteOutlinedIcon  color=\"secondary\"/>\n                 \n              \n                    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{'Are you sure you want to delete this project?'}</DialogTitle>\n   \n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          No\n        </Button>\n        <Button onClick ={handleDelete} color=\"primary\" autoFocus>\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n                 \n          \n                 \n                  </IconButton>\n        </Typography>\n      \n        \n     \n               \n                 <IconButton onClick={handleStoryUpdate} >   \n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={accordionClasses.heading}>{changedStory ? updatedProject.story : currentProject.story}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <form>\n      <TextField onChange={e => handleStoryChange(e)}\n          autoFocus\n          fullWidth\n          defaultValue={currentProject.story}\n          name='story'\n  \n          fullWidth\n        />\n        </form>\n      </AccordionDetails>\n    </Accordion>\n    </div>\n    </IconButton>\n       \n          \n                 <IconButton onClick={handleTimelineUpdate}>\n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n        minWidth\n      >\n        <Typography className={accordionClasses.heading}> timeline: {changedTimeline ? updatedProject.timeline : currentProject.timeline} days</Typography>\n\n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField onChange={e => handleTimelineChange(e)}\n          autoFocus\n          margin=\"dense\"\n          name='timeline'\n          defaultValue={currentProject.timeline}\n          fullWidth\n        />\n      \n   \n      </AccordionDetails>\n        </Accordion>\n        </div>        \n      </IconButton>\n\n      <IconButton onClick={handleFundraisingUpdate}>\n                 <div className={accordionClasses.root}>         \n    <Accordion>\n  \n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={accordionClasses.heading}>fundraising goal: ${changedFundraising ? updatedProject.fundraising_goal : currentProject.fundraising_goal}</Typography>\n\n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField onChange={e => handleFundraisingChange(e)}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          defaultValue={currentProject.fundraising_goal}\n          name='fundraising_goal'\n          fullWidth\n        />\n      \n   \n      </AccordionDetails>\n        </Accordion>\n        </div>        \n      </IconButton>\n\n              \n      {/* <Link href={changedProject ? updatedProject.github : currentProject.github} >\n        <GitHubIcon />\n        </Link> */}\n      {/* <Accordion>\n      <AccordionSummary\n        expandIcon={< EditIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n        size='xs'\n      />\n       <AccordionDetails>\n        <TextField onChange={e => handleGithubChange(e)}\n          autoFocus\n          margin=\"dense\"\n          id=\"name\"\n          defaultValue={currentProject.github}\n          name='github'\n          fullWidth\n        /> */}\n      \n  \n      {/* <Typography className={accordionClasses.heading}>\n\n        \n           \n           \n              </Typography>\n              </AccordionDetails>\n            </Accordion>\n         */}\n\n          </CardContent>\n    </div>\n    <CardMedia\n        className={styles.cover}\n        image={props.project.image}\n     \n      />\n      </Card>\n      </Grid>\n\n      <Paper style={{ border: \"none\", boxShadow: \"none\" }}variant=\"dense\" component=\"ul\" className={chipClasses.root}>\n    \n    <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <LocationOnIcon color='primary' /> }\n  title={props.user.location}\n />\n  \n \n</Card> \n\n<Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <TimelapseIcon color='primary' /> }\n  title={props.project.stage}\n  subheader='stage'\n />\n  \n \n</Card> \n  \n  <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <AttachMoneyIcon className={ownerClasses.avatar}/> }\n  title={props.project.fundraising_goal}\n  subheader=\"goal\" />\n  \n \n</Card> \n\n<Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <CalendarTodayIcon color='primary' /> }\n  title={props.project.timeline}\n  subheader=\"days remain\" />\n  \n \n</Card> \n\n<Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <CodeIcon color='primary' /> }\n  title={props.project.language}\n   />\n  \n \n</Card> \n\n\n          \n    </Paper> \n\n    {/* <AppBar position=\"center\" color='white'>\n  <Toolbar variant=\"dense\">\n   \n  <Link href={data.state.project.github}  variant=\"body2\">\n  <Card  style={{ border: \"none\", boxShadow: \"none\" }}>\n  <CardHeader \n  avatar={ <GitHubIcon color='secondary' /> }\n   />\n   </Card>\n                </Link>\n\n                {/* <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <LocationOnIcon color='primary' /> }\n  title={props.user.location}\n />\n  \n \n</Card>  */}\n               \n                {/* <LocationOnIcon color='primary'></LocationOnIcon>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n    {props.user.location}\n    </Typography>\n    <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <TimelapseIcon color='primary' /> }\n  title={props.project.stage}\n  subheader='stage'\n />\n  \n \n</Card> \n    <TimelapseIcon color=\"secondary\"/>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n   {currentProject.stage} stage\n   </Typography>\n  </Toolbar>\n</AppBar>  */}\n     \n      <NewProjectTabs project={currentProject} user={props.user}  \n                      supporters={props.project.supporters} comments={props.project.comments}\n                      commenters={props.project.commenters}/>\n      </div>\n       \n    )\n}\n\nexport default NewProjectCard",["269","270"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js",["271","272","273","274","275"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/NewProjectTabs.js",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport NewProjectPostCardContainer from '../../containers/NewProjectPostCardContainer';\nimport NewProjectSupporterCard from '../NewProjectSupporterCard';\nimport NewProjectCommentCard from '../NewProjectCommentCard'\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\n\n\n\nexport default function NewProjectTabs(props) {\n  \n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  \n \n  // const [userCommenter, setUser] = useState([])\n  // const getCommenter = (id) => {\n\n  //   fetch(`http://localhost:3001/api/v1/users/${id}`)\n  //   .then(r => r.json())\n  //   .then( user => setUser(user))\n  // }\n// let commenters = props.commenters.filter(com => com.id == props.comments.map(c => c.user_id))\n\n\n  return (\n      <div>\n          <h2>Community</h2>\n     \n\n    <div className={classes.root}>\n       \n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Your Updates\" {...a11yProps(0)} ></Tab>\n  \n        \n\n      </Tabs>\n      <TabPanel value={value} index={0} >\n\n        {/* <IconButton aria-label=\"add\" onClick={handleClickOpen}>\n            <AddIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add an update about your project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Keep your community informed of your progress.\n          </DialogContentText>\n          <TextField  onChange={e => setPost(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"update\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={addPost} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog> */}\n\n    <NewProjectPostCardContainer project={props.project} key={props.project.id} user={props.user}/>\n    \n      </TabPanel>\n      \n    \n    \n      \n         \n \n\n\n    </div>\n    </div>\n  );\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/AddPost.js",["292","293","294","295"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupporterCard.js",["296","297"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js",["298","299"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 500,\n    minWidth: 350,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function CommentCard(props){\n    const classes = useStyles();\n    const [allCommenters, setAllCommenters] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n          .then(res => res.json())\n          .then(project => setAllCommenters(project.commenters));\n      }, []);\n    \n      \n      let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id )\n      const avatar = (i) => {\n      for (i=0; i< thisCommenter.length; i++) {\n          return thisCommenter[i].profile_pic }\n      }\n\n      const username = (i) => {\n        for (i=0; i< thisCommenter.length; i++) {\n            return thisCommenter[i].username }\n      }\n\n\n    \nconsole.log(thisCommenter)\nreturn(\n\n\n\n<Paper className={classes.paper}>\n<Grid container wrap=\"nowrap\" spacing={2} >\n  <Grid item>\n  <Avatar src={avatar()}></Avatar> \n\n  </Grid>\n  <Grid item xs zeroMinWidth>\n    <Typography >\n    {props.comment.blurb}\n     <br></br>@{username()}\n    </Typography>\n  </Grid>\n</Grid>\n</Paper>\n)\n\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js",["300","301","302","303","304","305","306"],"import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n\n// const useSearchStyles = makeStyles((theme) => ({\n//     root: {\n//       width: 280,\n//       '& > * + *': {\n//         marginTop: theme.spacing(3),\n//       },\n//     },\n//   }));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(),\n        width: 'auto'\n      },\n    },\n\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }));\n\n\nexport default function Search(props) {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    // const searchClasses = useSearchStyles();\n\n    const [projects, setProjects] = React.useState([]) ;\n    const [language, setLanguage] = React.useState('');\n    const [click, setClick] = React.useState(false);\n    const history = useHistory();\n\n    const handleClick = (e) => {\n      setClick(true)\n    }\n\n    const handleLanguage = (e) => {\n        setLanguage(e.target.value)\n    }\n\n    const handleSubmit = () => {\n       \n        console.log('hi')\n    }\n\n    console.log(language)\n    \n    const searchResults = projects.filter(project => project.language.toUpperCase() === language.toUpperCase() )\n        // \n    const accurateResults = searchResults.filter(r => r.user_id != props.user.id)\n    console.log(accurateResults.map)\n    return (\n        <div className={classes.root}>\n\n\n<div className={classes.search}>\n            {/* <div className={classes.searchIcon}> */}\n            {/* <IconButton onClick={handleClick}  >\n            {accurateResults.map(project => <Link to={{\n              pathname: '/search',\n              state: {\n                project: project,\n                user: props.user\n              }\n            }}> \n                <SearchIcon />\n                </Link>)}\n             </IconButton> */}\n\n\n\n\n  <Link to={{\n    pathname: '/search',\n    state: {\n      accurateResults,\n      user: props.user\n    } }} >\n      <IconButton onClick={handleClick}  > <SearchIcon />\n      </IconButton>  \n      </Link>\n\n \n\n\n\n{/* {click ? accurateResults.map(project => history.push({\n                  pathname: '/search',\n                  state: {\n                    project: project,\n                    user: props.user\n                  }\n                })  ) : null} */}\n\n           \n            <InputBase onChange={handleLanguage}\n              placeholder=\"Search by language\"\n             \n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n             value={language}\n             \n                 />\n          </div>\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n\n//         <div className={searchClasses.root}>\n          \n//       <Autocomplete\n        \n//         multiple\n//         limitTags={2}\n//         id=\"multiple-limit-tags\"\n//         options={projects}\n//         getOptionLabel={(option) => option.language}\n//         // handleParams(option.language)\n        \n\n//         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n \n//         renderInput={(params) => (\n//           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n       \n        \n//         )}\n  \n//       />\n//       <IconButton><SearchIcon />\n      \n//       </IconButton>\n \n\n// </div>\n\n             \n\n    )\n}",["307","308"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SupportingProjectsContainer.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectsCard.js",["309","310","311","312"],"import React, { useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActions from '@material-ui/core/CardActions'\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 600,\n      maxHeight: 1000\n    },\n    media: {\n      height: 300,\n    },\n    subtitle1: {\n      fontSize: 18\n    },\n    subtitle: {\n      fontSize: 14,\n      \n    },\n  });\n\n\nconst SupportingProjectCard = (props) => {\n\n\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>•</span>;\n\n    const [fullProject, setFullProject] = React.useState({})\n\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n          .then(res => res.json())\n          .then(project => {\n              setFullProject(project)\n              \n          });\n      }, []);\n\n      console.log(fullProject)\n    return (\n\n      <Box mx=\"auto\"  p={3}>\n        <Card className={classes.root} >\n            <CardActionArea>\n                <CardMedia\n          className={classes.media}\n          image={props.project.image}\n          title=\"Project Image\"\n                />\n            <CardContent>\n            <Typography gutterBottom variant=\"h3\" component=\"h2\">\n        <strong>{props.project.title}</strong>\n\n                   \n            \n                   \n                \n          </Typography>\n                <Typography  className={classes.subtitle1} component=\"h2\">\n                   {props.project.story}\n          </Typography>\n                <Typography color=\"textSecondary\" className={classes.pos} >\n                   timeline: {props.project.timeline} days remain\n          </Typography>\n           \n            {/* <image src={props.image}></image> */}\n            </CardContent>\n            </CardActionArea>\n            <CardActions>\n    \n\n        <Link to={{\n            pathname: \"/supporting-project\",\n            state: {\n              project: props.project,\n              user: props.user, \n              projectOwner: fullProject.user       \n            }\n            \n           }} style={{ textDecoration: 'none' }}>\n        <Button size=\"small\" color=\"primary\" >\n          See More\n         \n        </Button>\n        </Link>\n       \n      </CardActions>\n           \n\n\n        \n        </Card>\n        </Box>\n       \n    )\n}\n\nexport default SupportingProjectCard;","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectShow.js",["313","314","315"],"import React, { useEffect } from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useLocation } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SupportingProjectTab from './Tabs/SupportingProjectTab';\nimport SupportingProjectShowNavbar from './Navbars/SupportingProjectShowNavbar';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CodeIcon from '@material-ui/icons/Code';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { green } from '@material-ui/core/colors';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst useChipStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    height: 450,\n\n\n  },\n  details: {\n    display: 'center',\n    // flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 800,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n\n  pos: {\n    marginBottom: 12,\n  },\n\n});\n\nconst useOwnerStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 50,\n    maxWidth: 345,\n\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    color: green[500],\n  },\n\n\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SupportingProjectShow() {\n  const data = useLocation()\n  const classes = useStyles();\n  const ownerClasses = useOwnerStyles();\n  const theme = useTheme();\n  const project = data.state.project\n  // console.log(data.state.projectOwner)\n  const projectOwner = data.state.projectOwner\n  const user = data.state.user\n  const [collaborate_requests, setCollaborateRequests] = React.useState([])\n\n  const alreadyCollaborating = collaborate_requests.filter(r => r.project_id === project.id && r.user_id === user.id)\nconsole.log(alreadyCollaborating)\n  const chipClasses = useChipStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/collaborate_requests/')\n    .then(res => res.json())\n    .then(collaborate_requests => setCollaborateRequests(collaborate_requests));\n    }, [])\nconsole.log(collaborate_requests)\n  const handleClose = () => {\n    fetch('http://localhost:3001/api/v1/collaborate_requests', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n\n      },\n      body: JSON.stringify({\n        project_id: project.id,\n        user_id: user.id\n      }),\n    })\n    .then(r => r.json())\n    .then(result =>\n    setCollaborateRequests([...collaborate_requests, result])\n    )\n    setOpen(false);\n  };\n\n  const handleClose2 = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <SupportingProjectShowNavbar user={user} />\n\n      <Grid>\n\n        <Card elevation={3} className={classes.root}>\n          <div className={classes.details}>\n            <CardContent className={classes.content}>\n              <Typography component=\"h5\" variant=\"h5\">\n                {project.title}\n\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {project.story}\n              </Typography>\n\n              <Grid mx=\"auto\" p={2}\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"center\">\n                {/* <Box mx=\"auto\"  p={2}> */}\n                <Card className={ownerClasses.root}  >\n                  <CardHeader\n                    avatar={\n                      <Avatar aria-label=\"recipe\" className={ownerClasses.avatar} src={projectOwner.profile_pic}>\n\n                      </Avatar>\n                    }\n                    action={\n                      alreadyCollaborating.length > 0 ? null :\n                      <IconButton aria-label=\"send a request to collaborate on this project\" onClick={handleClickOpen}>\n                        <PersonAddIcon /> \n                      </IconButton> \n                      \n                    }\n                    title='About the Developer'\n                    // caption={projectOwner.username}\n                    subheader={projectOwner.name}\n\n                  />\n                   \n                  <Dialog\n                    open={open}\n                    TransitionComponent={Transition}\n                    keepMounted\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-slide-title\"\n                    aria-describedby=\"alert-dialog-slide-description\"\n                  >\n                    <DialogTitle id=\"alert-dialog-slide-title\">Send {projectOwner.name} a request to collaborate on {project.title}?</DialogTitle>\n               \n                    <DialogActions>\n                      <Button onClick={handleClose2} color=\"primary\">\n                        Disagree\n          </Button>\n                      <Button onClick={handleClose} color=\"primary\">\n                        Agree\n          </Button>\n                    </DialogActions>\n                  </Dialog> \n\n                  <CardContent>\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                      {projectOwner.bio}        </Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>\n\n                  </CardActions>\n\n\n                </Card>\n\n\n              </Grid>\n\n            </CardContent>\n\n          </div>\n          <CardMedia\n            className={classes.cover}\n            image={project.image}\n\n          />\n          {/* <Typography variant=\"subtitle2\" color=\"textSecondary\"> */}\n\n          {/* </Typography> */}\n\n\n\n\n\n\n\n\n        </Card>\n\n      </Grid>\n\n      <Paper style={{ border: \"none\", boxShadow: \"none\" }} variant=\"dense\" component=\"ul\" className={chipClasses.root}>\n        <Link href={data.state.project.github} variant=\"body2\">\n          <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n            <CardHeader\n              avatar={<GitHubIcon color='secondary' />} />\n          </Card>\n        </Link>\n        <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n          <CardHeader\n            avatar={<LocationOnIcon color='primary' />}\n            title={projectOwner.location}\n          />\n\n\n        </Card>\n\n        <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n          <CardHeader\n            avatar={<TimelapseIcon color='primary' />}\n            title={project.stage}\n            subheader='stage'\n          />\n\n\n        </Card>\n\n        <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n          <CardHeader\n            avatar={<AttachMoneyIcon className={ownerClasses.avatar} />}\n            title={project.fundraising_goal}\n            subheader=\"goal\" />\n\n\n        </Card>\n\n        <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n          <CardHeader\n            avatar={<CalendarTodayIcon color='primary' />}\n            title={project.timeline}\n            subheader=\"days remain\" />\n\n\n        </Card>\n\n        <Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n          <CardHeader\n            avatar={<CodeIcon color='primary' />}\n            title={project.language}\n          />\n\n\n        </Card>\n\n\n\n      </Paper>\n\n      {/* <AppBar position=\"static\" color='white'>\n  <Toolbar variant=\"dense\">\n   \n\n  <Link href={data.state.project.github}  variant=\"body2\">\n        <GitHubIcon color='secondary'/>   \n                </Link>\n               \n                <LocationOnIcon color='primary'></LocationOnIcon>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n    {projectOwner.location}\n    </Typography>\n    <TimelapseIcon color=\"secondary\"/>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n   {project.stage} stage\n   </Typography>\n  </Toolbar>\n</AppBar>  */}\n      <SupportingProjectTab project={project} user={user} projectOwner={projectOwner} />\n    </div>\n\n\n\n\n  )\n}\n","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/SupportingProjectTab.js",["316"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js",["317","318"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectPostCard.js",["319","320"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/PostCard.js",["321","322"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectsContainerNavbar.js",["323","324","325","326","327"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SupportingProjectShowNavbar.js",["328","329","330","331","332","333","334"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Search from '../../containers/Search';\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  }));\n  \n  \n  \n  export default function SearchResultsNav(props) {\n    // console.log(props.projects_supported)\n    const classes = useStyles();\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const history = useHistory();\n  \n  \n  \n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const handleLogout = () => {\n  \n      history.push({\n        pathname: \"/logout\"})\n    }\n  \n  \n  \n    return (\n      <div className={classes.root}>\n  \n        <AppBar position=\"static\">\n          <Toolbar>\n  \n  \n            {auth && (\n              <div>\n                <Avatar alt=\"Remy Sharp\" src={props.user.profile_pic}\n  \n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                />\n  \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={handleClose}\n                >\n                    <Link to={{\n                    pathname:'/my-projects',\n                    state: {\n                      user: props.user\n                    }\n                  }}style={{ textDecoration: 'none', color: 'black' }}>\n                  <MenuItem >My Campaigns</MenuItem>\n                  </Link>\n                  <Link to={{\n                    pathname:'/supporting-projects',\n                    state: {\n                      user: props.user\n                    }\n                  }}style={{ textDecoration: 'none', color: 'black' }}>\n                    <MenuItem>Saved Campaigns</MenuItem>\n              \n                  </Link>\n                  <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              \n                </Menu>\n              </div>\n            )}\n            <Typography variant=\"h6\" className={classes.title}>\n              {props.language} Campaigns\n            </Typography>\n            <div>\n              <Search user={props.user}/>\n            </div>\n            <Link to={{\n  \n              pathname: \"/create\",\n  \n              state: {\n                user: props.user\n              }\n            }} style={{ textDecoration: 'none' }}>\n              <Fab variant=\"extended\" color=\"secondary\" aria-label=\"add\" >\n                <AddIcon className={classes.extendedIcon}\n                 \n  \n                />Create\n  \n            </Fab>\n            </Link>\n  \n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }",["335","336"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCommentCard.js",["337","338"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Signup.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/SearchResultsContainer.js",["339","340","341"],"import { TableFooter } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport SearchResultsCard from '../components/SearchResultsCard';\nimport SearchResultsNav from '../components/Navbars/SearchResultsNav';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\n\n\n\n\nfunction SearchResultsContainer() {\n\n\n\n    const data = useLocation();\n    console.log(data.state)\n    // console.log(props.state.project)\n    // const project = props.state.project\n\n\nconst f = () => {\nlet lang = data.state.accurateResults.map(project => project.language)\nreturn lang[0]\n}\n\n\n  \n\n    return (\n        \n      \n       \n        <div>\n            <SearchResultsNav user={data.state.user} language={f()} accurateResults={data.state.accurateResults}/>\n<Container mx=\"auto\"  p={3}>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n                >\n            {data.state.accurateResults.map(project => <SearchResultsCard project={project} key={project.id} user={data.state.user} />)}\n\n            </Grid>\n            </Container>\n        </div> \n    )\n\n\n\n\n\n\n\n\n};\n\nexport default SearchResultsContainer;",["342","343"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsCard.js",["344","345","346","347"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SearchResultsShow.js",["348","349"],"import React, { useEffect } from 'react';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { useLocation } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport SupportingProjectTab from './Tabs/SupportingProjectTab';\nimport AddIcon from '@material-ui/icons/Add';\nimport SearchResultsNav from './Navbars/SearchResultsNav'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport Grid from '@material-ui/core/Grid';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport { green } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    height: 350\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 24,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n\n});\n\nconst useButtonStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst useOwnerStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n   color: green[500],\n  },\n\n\n}));\n\nexport default function SearchResultsShow() {\n  const data = useLocation()\n  console.log(data)\n  const classes = useStyles();\n  const buttonClasses = useButtonStyles();\n  const ownerClasses = useOwnerStyles();\n\n  const theme = useTheme();\n  const project = data.state.project\n  console.log(data.state.projectOwner)\n  const projectOwner = data.state.projectOwner\n  const user = data.state.user\n  const [supporterships, setSupporterships] = React.useState([]);\n  console.log(user.projects_supported)\n  // console.log(user.projects_supported.map(p => p.id === project.id) ? 'hi' : 'no')\n  console.log(project)\n  // const supportBtn = supporterships.filter(s => s.project_id != project.id)\n  const alreadySupportingBtn = supporterships.filter(s => s.project_id === project.id && s.user_id === user.id)\n  console.log(alreadySupportingBtn)\n\n  useEffect(() => {\n  fetch('http://localhost:3001/api/v1/supporterships/')\n  .then(res => res.json())\n  .then(supporterships => setSupporterships(supporterships));\n  }, [])\nconsole.log(supporterships)\n// console.log(supporterships.map(s => s.user_id == user.id ? 'hi' : null))\n\n  const createSupportership = () => {\n    fetch('http://localhost:3001/api/v1/supporterships',\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n\n        },\n        body: JSON.stringify({\n          project_id: project.id,\n          user_id: user.id\n        }),\n      })\n\n\n      .then(r => r.json())\n      .then(result =>\n      setSupporterships([...supporterships, result]))\n  }\n\n  return (\n    <div>\n      <SearchResultsNav project={data.state.project} user={data.state.user} language={data.state.project.language} />\n      <div>\n        <Card className={classes.root}>\n          <div className={classes.details}>\n            <CardContent className={classes.content}>\n              <Typography component=\"h5\" variant=\"h5\">\n                {project.title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {project.story}\n              </Typography>\n            \n        \n              {alreadySupportingBtn.length > 0 ?\n  \n \n <Button\n         variant=\"contained\"\n         color=\"secondary\"\n         className={classes.button}\n         >Supporting</Button>  : \n\n<Button onClick={createSupportership}\n        variant=\"contained\"\n        color=\"secondary\" \n        className={classes.button}\n        startIcon={<AddIcon />}\n      >\n        Support\n      </Button> }\n            </CardContent>\n\n            <Grid mx=\"auto\"  p={2}\ncontainer\ndirection=\"row\"\njustify=\"space-evenly\"\nalignItems=\"center\">\n  {/* <Box mx=\"auto\"  p={2}> */}\n    <Card className={ownerClasses.root}  >\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={ownerClasses.avatar} src={projectOwner.profile_pic}>\n            \n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={projectOwner.name}\n        // caption={projectOwner.username}\n        subheader={projectOwner.username}\n      />\n    \n      <CardContent>\n      <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n      </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {projectOwner.bio}        </Typography>\n      </CardContent>\n      \n\n    </Card>\n\n\n\n    </Grid>\n          </div>\n          <CardMedia\n            className={classes.cover}\n            image={project.image}\n          />\n        </Card>\n        <AppBar position=\"static\" color='white'>\n  <Toolbar variant=\"dense\">\n   \n\n  <Link href={data.state.project.github}  variant=\"body2\">\n  <Card  style={{ border: \"none\", boxShadow: \"none\" }}className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <GitHubIcon color='secondary' /> }\n   />\n   </Card>\n                </Link>\n  <Card  style={{ border: \"none\", boxShadow: \"none\" }}className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <LocationOnIcon color='primary' /> }\n  title={project.user.location}\n />\n  \n \n</Card> \n{/* <Card  style={{ border: \"none\", boxShadow: \"none\" }}className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <TimelapseIcon color='secondary' /> }\n  title={project.stage}\n  subheader='stage' />\n  \n \n</Card>       */}\n    <TimelapseIcon color=\"secondary\"/>\n    <Typography variant=\"sm\" color=\"primary\" >\n   \n   {project.stage} stage\n   </Typography>\n   <Card  style={{ border: \"none\", boxShadow: \"none\" }}className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <CalendarTodayIcon color='primary' /> }\n  title={project.timeline}\n  subheader=\"days remain\" />\n  \n \n</Card> \n<Card style={{ border: \"none\", boxShadow: \"none\" }} className={ownerClasses.root}>\n  <CardHeader \n  avatar={ <AttachMoneyIcon className={ownerClasses.avatar}/> }\n  title={project.fundraising_goal}\n  subheader=\"goal\" />\n  \n\n</Card> \n  </Toolbar>\n</AppBar>\n      </div>\n\n      <div>\n                    <SupportingProjectTab project={project} user={user} projectOwner={projectOwner}/>\n                    </div> \n    </div>\n\n\n\n  )\n}\n","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/SearchResultsNav.js",["350","351","352"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Fab, Icon } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\nimport Search from '../../containers/Search';\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n\n\nexport default function SearchResultsNav(props) {\n  // console.log(props.projects_supported)\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const history = useHistory();\n\n\n\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = () => {\n\n    history.push({\n      pathname: \"/logout\"})\n  }\n\n\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar position=\"static\">\n<Toolbar>\n\n\n          {auth && (\n            <div>\n              <Avatar alt=\"Remy Sharp\" src={props.user.profile_pic}\n\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              />\n\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                  <Link to={{\n                  pathname:'/my-projects',\n                  state: {\n                    user: props.user\n                  }\n                }}style={{ textDecoration: 'none', color: 'black' }}>\n                <MenuItem >My Campaigns</MenuItem>\n                </Link>\n                <Link to={{\n                  pathname:'/supporting-projects',\n                  state: {\n                    user: props.user\n                  }\n                }}style={{ textDecoration: 'none', color: 'black' }}>\n                  <MenuItem>Saved Campaigns</MenuItem>\n            \n                </Link>\n          \n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            \n              </Menu>\n            </div>\n          )}\n          <Typography variant=\"h6\" className={classes.title}>\n           {props.language} focused Campaigns\n          </Typography>\n          <div>\n            <Search user={props.user}/>\n          </div>\n          <Link to={{\n\n            pathname: \"/create\",\n\n            state: {\n              user: props.user\n            }\n          }} style={{ textDecoration: 'none' }}>\n            <Fab variant=\"extended\" color=\"secondary\" aria-label=\"add\" >\n              <AddIcon className={classes.extendedIcon}\n               \n\n              />Create\n\n          </Fab>\n          </Link>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectSupporterCard.js",["353"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectPostCard.js",["354","355"],"import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function NewProjectPostCard(props) {\n  const classes = useStyles();\n\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n             \n           <Avatar src={props.user.profile_pic}></Avatar> \n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography >\n            {props.post.blurb}\n             {/* <br></br>@{thisCommenter.length == 1 ? thisCommenter[0].username : null} */}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n     \n    </div>\n  );\n}",["356","357"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/LandingPage.js",["358","359","360","361","362"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport LandingPageNav from '../components/Navbars/LandingPageNav';\nimport landing from './landing.gif';\nimport { Link } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n   \n  \n  },\n}));\n\n\n\nexport default function LandingPage() {\n\n\n\n  const classes = useStyles();\n\n  return (\n    // <MuiThemeProvider >\n    <React.Fragment>\n\n\n    <Box bgcolor=\"primary\"  p={2}>\n        \n     \n      <img src={landing} width={800} height={750} />\n      <div className={classes.root}>\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n      <Link to='/login' style={{ textDecoration: 'none'}}><Button color= 'primary'>Login</Button></Link>\n      <Link to='/signup'  style={{ textDecoration: 'none', }}> <Button color= 'primary'>Signup</Button></Link>\n\n      </ButtonGroup>\n</div>\n</Box>\n    </React.Fragment>\n    // </MuiThemeProvider>\n  );\n}","/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/LandingPageNav.js",[],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectPostCardContainer.js",["363","364","365","366","367","368","369","370","371","372","373"],"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Navbars/CreateProjectNav.js",["374","375"],{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":1,"column":16,"nodeType":"382","messageId":"383","endLine":1,"endColumn":24},{"ruleId":"380","severity":1,"message":"384","line":2,"column":9,"nodeType":"382","messageId":"383","endLine":2,"endColumn":18},{"ruleId":"380","severity":1,"message":"385","line":8,"column":10,"nodeType":"382","messageId":"383","endLine":8,"endColumn":19},{"ruleId":"380","severity":1,"message":"381","line":2,"column":17,"nodeType":"382","messageId":"383","endLine":2,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":2,"column":27,"nodeType":"382","messageId":"383","endLine":2,"endColumn":36},{"ruleId":"376","replacedBy":"387"},{"ruleId":"378","replacedBy":"388"},{"ruleId":"380","severity":1,"message":"389","line":2,"column":10,"nodeType":"382","messageId":"383","endLine":2,"endColumn":20},{"ruleId":"380","severity":1,"message":"390","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":17},{"ruleId":"391","severity":1,"message":"392","line":44,"column":10,"nodeType":"393","endLine":45,"endColumn":43},{"ruleId":"380","severity":1,"message":"389","line":2,"column":10,"nodeType":"382","messageId":"383","endLine":2,"endColumn":20},{"ruleId":"380","severity":1,"message":"394","line":27,"column":8,"nodeType":"382","messageId":"383","endLine":27,"endColumn":14},{"ruleId":"380","severity":1,"message":"395","line":28,"column":8,"nodeType":"382","messageId":"383","endLine":28,"endColumn":15},{"ruleId":"380","severity":1,"message":"396","line":33,"column":8,"nodeType":"382","messageId":"383","endLine":33,"endColumn":25},{"ruleId":"380","severity":1,"message":"397","line":34,"column":8,"nodeType":"382","messageId":"383","endLine":34,"endColumn":23},{"ruleId":"380","severity":1,"message":"398","line":35,"column":10,"nodeType":"382","messageId":"383","endLine":35,"endColumn":15},{"ruleId":"380","severity":1,"message":"399","line":124,"column":11,"nodeType":"382","messageId":"383","endLine":124,"endColumn":23},{"ruleId":"380","severity":1,"message":"400","line":133,"column":12,"nodeType":"382","messageId":"383","endLine":133,"endColumn":24},{"ruleId":"380","severity":1,"message":"401","line":156,"column":11,"nodeType":"382","messageId":"383","endLine":156,"endColumn":29},{"ruleId":"402","severity":1,"message":"403","line":242,"column":4,"nodeType":"404","endLine":242,"endColumn":6,"suggestions":"405"},{"ruleId":"406","severity":1,"message":"407","line":317,"column":13,"nodeType":"408","endLine":317,"endColumn":22},{"ruleId":"376","replacedBy":"409"},{"ruleId":"378","replacedBy":"410"},{"ruleId":"380","severity":1,"message":"411","line":16,"column":8,"nodeType":"382","messageId":"383","endLine":16,"endColumn":14},{"ruleId":"380","severity":1,"message":"386","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":26},{"ruleId":"380","severity":1,"message":"412","line":52,"column":12,"nodeType":"382","messageId":"383","endLine":52,"endColumn":19},{"ruleId":"380","severity":1,"message":"413","line":52,"column":21,"nodeType":"382","messageId":"383","endLine":52,"endColumn":31},{"ruleId":"380","severity":1,"message":"414","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":21},{"ruleId":"380","severity":1,"message":"381","line":2,"column":17,"nodeType":"382","messageId":"383","endLine":2,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":2,"column":27,"nodeType":"382","messageId":"383","endLine":2,"endColumn":36},{"ruleId":"376","replacedBy":"415"},{"ruleId":"378","replacedBy":"416"},{"ruleId":"380","severity":1,"message":"417","line":27,"column":16,"nodeType":"382","messageId":"383","endLine":27,"endColumn":23},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"417","line":33,"column":16,"nodeType":"382","messageId":"383","endLine":33,"endColumn":23},{"ruleId":"380","severity":1,"message":"418","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":14},{"ruleId":"380","severity":1,"message":"419","line":8,"column":8,"nodeType":"382","messageId":"383","endLine":8,"endColumn":24},{"ruleId":"380","severity":1,"message":"385","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":17},{"ruleId":"380","severity":1,"message":"420","line":78,"column":11,"nodeType":"382","messageId":"383","endLine":78,"endColumn":23},{"ruleId":"380","severity":1,"message":"421","line":97,"column":11,"nodeType":"382","messageId":"383","endLine":97,"endColumn":22},{"ruleId":"380","severity":1,"message":"422","line":108,"column":11,"nodeType":"382","messageId":"383","endLine":108,"endColumn":15},{"ruleId":"423","severity":1,"message":"424","line":125,"column":72,"nodeType":"425","messageId":"426","endLine":125,"endColumn":74},{"ruleId":"423","severity":1,"message":"424","line":180,"column":68,"nodeType":"425","messageId":"426","endLine":180,"endColumn":70},{"ruleId":"380","severity":1,"message":"427","line":2,"column":8,"nodeType":"382","messageId":"383","endLine":2,"endColumn":22},{"ruleId":"380","severity":1,"message":"428","line":5,"column":8,"nodeType":"382","messageId":"383","endLine":5,"endColumn":19},{"ruleId":"380","severity":1,"message":"429","line":23,"column":8,"nodeType":"382","messageId":"383","endLine":23,"endColumn":18},{"ruleId":"380","severity":1,"message":"430","line":24,"column":10,"nodeType":"382","messageId":"383","endLine":24,"endColumn":14},{"ruleId":"380","severity":1,"message":"394","line":25,"column":8,"nodeType":"382","messageId":"383","endLine":25,"endColumn":14},{"ruleId":"380","severity":1,"message":"395","line":26,"column":8,"nodeType":"382","messageId":"383","endLine":26,"endColumn":15},{"ruleId":"380","severity":1,"message":"431","line":31,"column":8,"nodeType":"382","messageId":"383","endLine":31,"endColumn":20},{"ruleId":"380","severity":1,"message":"432","line":32,"column":8,"nodeType":"382","messageId":"383","endLine":32,"endColumn":17},{"ruleId":"380","severity":1,"message":"433","line":33,"column":8,"nodeType":"382","messageId":"383","endLine":33,"endColumn":22},{"ruleId":"380","severity":1,"message":"434","line":34,"column":8,"nodeType":"382","messageId":"383","endLine":34,"endColumn":20},{"ruleId":"380","severity":1,"message":"435","line":35,"column":8,"nodeType":"382","messageId":"383","endLine":35,"endColumn":19},{"ruleId":"380","severity":1,"message":"436","line":37,"column":8,"nodeType":"382","messageId":"383","endLine":37,"endColumn":11},{"ruleId":"380","severity":1,"message":"400","line":126,"column":10,"nodeType":"382","messageId":"383","endLine":126,"endColumn":22},{"ruleId":"380","severity":1,"message":"401","line":148,"column":9,"nodeType":"382","messageId":"383","endLine":148,"endColumn":27},{"ruleId":"402","severity":1,"message":"437","line":237,"column":4,"nodeType":"404","endLine":237,"endColumn":6,"suggestions":"438"},{"ruleId":"406","severity":1,"message":"407","line":300,"column":11,"nodeType":"408","endLine":300,"endColumn":20},{"ruleId":"376","replacedBy":"439"},{"ruleId":"378","replacedBy":"440"},{"ruleId":"380","severity":1,"message":"441","line":98,"column":10,"nodeType":"382","messageId":"383","endLine":98,"endColumn":17},{"ruleId":"380","severity":1,"message":"442","line":98,"column":19,"nodeType":"382","messageId":"383","endLine":98,"endColumn":29},{"ruleId":"380","severity":1,"message":"443","line":99,"column":9,"nodeType":"382","messageId":"383","endLine":99,"endColumn":20},{"ruleId":"380","severity":1,"message":"444","line":110,"column":9,"nodeType":"382","messageId":"383","endLine":110,"endColumn":21},{"ruleId":"402","severity":1,"message":"437","line":126,"column":6,"nodeType":"404","endLine":126,"endColumn":8,"suggestions":"445"},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"446","line":8,"column":10,"nodeType":"382","messageId":"383","endLine":8,"endColumn":20},{"ruleId":"380","severity":1,"message":"447","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":15},{"ruleId":"380","severity":1,"message":"384","line":10,"column":8,"nodeType":"382","messageId":"383","endLine":10,"endColumn":17},{"ruleId":"380","severity":1,"message":"448","line":11,"column":8,"nodeType":"382","messageId":"383","endLine":11,"endColumn":14},{"ruleId":"380","severity":1,"message":"449","line":12,"column":8,"nodeType":"382","messageId":"383","endLine":12,"endColumn":21},{"ruleId":"380","severity":1,"message":"450","line":13,"column":8,"nodeType":"382","messageId":"383","endLine":13,"endColumn":21},{"ruleId":"380","severity":1,"message":"451","line":14,"column":8,"nodeType":"382","messageId":"383","endLine":14,"endColumn":25},{"ruleId":"380","severity":1,"message":"452","line":15,"column":8,"nodeType":"382","messageId":"383","endLine":15,"endColumn":19},{"ruleId":"380","severity":1,"message":"453","line":16,"column":8,"nodeType":"382","messageId":"383","endLine":16,"endColumn":14},{"ruleId":"380","severity":1,"message":"454","line":18,"column":8,"nodeType":"382","messageId":"383","endLine":18,"endColumn":31},{"ruleId":"380","severity":1,"message":"455","line":19,"column":8,"nodeType":"382","messageId":"383","endLine":19,"endColumn":29},{"ruleId":"380","severity":1,"message":"456","line":72,"column":10,"nodeType":"382","messageId":"383","endLine":72,"endColumn":14},{"ruleId":"380","severity":1,"message":"457","line":74,"column":9,"nodeType":"382","messageId":"383","endLine":74,"endColumn":24},{"ruleId":"380","severity":1,"message":"458","line":78,"column":9,"nodeType":"382","messageId":"383","endLine":78,"endColumn":20},{"ruleId":"459","severity":2,"message":"460","line":16,"column":21,"nodeType":"382","messageId":"461","endLine":16,"endColumn":25},{"ruleId":"462","severity":2,"message":"463","line":16,"column":36,"nodeType":"382","messageId":"464","endLine":16,"endColumn":47},{"ruleId":"462","severity":2,"message":"463","line":33,"column":28,"nodeType":"382","messageId":"464","endLine":33,"endColumn":39},{"ruleId":"462","severity":2,"message":"463","line":36,"column":28,"nodeType":"382","messageId":"464","endLine":36,"endColumn":39},{"ruleId":"380","severity":1,"message":"390","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":17},{"ruleId":"380","severity":1,"message":"465","line":18,"column":8,"nodeType":"382","messageId":"383","endLine":18,"endColumn":12},{"ruleId":"402","severity":1,"message":"437","line":32,"column":10,"nodeType":"404","endLine":32,"endColumn":12,"suggestions":"466"},{"ruleId":"423","severity":1,"message":"424","line":35,"column":74,"nodeType":"425","messageId":"426","endLine":35,"endColumn":76},{"ruleId":"380","severity":1,"message":"384","line":5,"column":8,"nodeType":"382","messageId":"383","endLine":5,"endColumn":17},{"ruleId":"380","severity":1,"message":"467","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":20},{"ruleId":"380","severity":1,"message":"468","line":9,"column":16,"nodeType":"382","messageId":"383","endLine":9,"endColumn":27},{"ruleId":"380","severity":1,"message":"469","line":76,"column":12,"nodeType":"382","messageId":"383","endLine":76,"endColumn":17},{"ruleId":"380","severity":1,"message":"470","line":77,"column":11,"nodeType":"382","messageId":"383","endLine":77,"endColumn":18},{"ruleId":"380","severity":1,"message":"471","line":87,"column":11,"nodeType":"382","messageId":"383","endLine":87,"endColumn":23},{"ruleId":"423","severity":1,"message":"472","line":96,"column":65,"nodeType":"425","messageId":"426","endLine":96,"endColumn":67},{"ruleId":"376","replacedBy":"473"},{"ruleId":"378","replacedBy":"474"},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"429","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":18},{"ruleId":"380","severity":1,"message":"475","line":38,"column":11,"nodeType":"382","messageId":"383","endLine":38,"endColumn":15},{"ruleId":"402","severity":1,"message":"437","line":50,"column":10,"nodeType":"404","endLine":50,"endColumn":12,"suggestions":"476"},{"ruleId":"380","severity":1,"message":"450","line":29,"column":8,"nodeType":"382","messageId":"383","endLine":29,"endColumn":21},{"ruleId":"380","severity":1,"message":"451","line":30,"column":8,"nodeType":"382","messageId":"383","endLine":30,"endColumn":25},{"ruleId":"380","severity":1,"message":"477","line":114,"column":9,"nodeType":"382","messageId":"383","endLine":114,"endColumn":14},{"ruleId":"402","severity":1,"message":"437","line":118,"column":6,"nodeType":"404","endLine":118,"endColumn":8,"suggestions":"478"},{"ruleId":"402","severity":1,"message":"437","line":33,"column":10,"nodeType":"404","endLine":33,"endColumn":12,"suggestions":"479"},{"ruleId":"423","severity":1,"message":"424","line":36,"column":74,"nodeType":"425","messageId":"426","endLine":36,"endColumn":76},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"380","severity":1,"message":"418","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":14},{"ruleId":"380","severity":1,"message":"419","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":24},{"ruleId":"380","severity":1,"message":"385","line":8,"column":8,"nodeType":"382","messageId":"383","endLine":8,"endColumn":17},{"ruleId":"380","severity":1,"message":"468","line":12,"column":16,"nodeType":"382","messageId":"383","endLine":12,"endColumn":27},{"ruleId":"380","severity":1,"message":"417","line":41,"column":18,"nodeType":"382","messageId":"383","endLine":41,"endColumn":25},{"ruleId":"380","severity":1,"message":"446","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":18},{"ruleId":"380","severity":1,"message":"418","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":14},{"ruleId":"380","severity":1,"message":"419","line":8,"column":8,"nodeType":"382","messageId":"383","endLine":8,"endColumn":24},{"ruleId":"380","severity":1,"message":"385","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":17},{"ruleId":"380","severity":1,"message":"468","line":13,"column":16,"nodeType":"382","messageId":"383","endLine":13,"endColumn":27},{"ruleId":"380","severity":1,"message":"480","line":18,"column":8,"nodeType":"382","messageId":"383","endLine":18,"endColumn":21},{"ruleId":"380","severity":1,"message":"417","line":43,"column":18,"nodeType":"382","messageId":"383","endLine":43,"endColumn":25},{"ruleId":"376","replacedBy":"481"},{"ruleId":"378","replacedBy":"482"},{"ruleId":"402","severity":1,"message":"437","line":31,"column":10,"nodeType":"404","endLine":31,"endColumn":12,"suggestions":"483"},{"ruleId":"423","severity":1,"message":"424","line":34,"column":74,"nodeType":"425","messageId":"426","endLine":34,"endColumn":76},{"ruleId":"380","severity":1,"message":"414","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":21},{"ruleId":"380","severity":1,"message":"381","line":2,"column":17,"nodeType":"382","messageId":"383","endLine":2,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":2,"column":27,"nodeType":"382","messageId":"383","endLine":2,"endColumn":36},{"ruleId":"376","replacedBy":"484"},{"ruleId":"378","replacedBy":"485"},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"429","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":18},{"ruleId":"380","severity":1,"message":"475","line":38,"column":11,"nodeType":"382","messageId":"383","endLine":38,"endColumn":15},{"ruleId":"402","severity":1,"message":"437","line":49,"column":10,"nodeType":"404","endLine":49,"endColumn":12,"suggestions":"486"},{"ruleId":"380","severity":1,"message":"487","line":82,"column":9,"nodeType":"382","messageId":"383","endLine":82,"endColumn":22},{"ruleId":"380","severity":1,"message":"477","line":85,"column":9,"nodeType":"382","messageId":"383","endLine":85,"endColumn":14},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"488","line":8,"column":15,"nodeType":"382","messageId":"383","endLine":8,"endColumn":19},{"ruleId":"380","severity":1,"message":"417","line":37,"column":16,"nodeType":"382","messageId":"383","endLine":37,"endColumn":23},{"ruleId":"380","severity":1,"message":"390","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":17},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"386","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"376","replacedBy":"489"},{"ruleId":"378","replacedBy":"490"},{"ruleId":"380","severity":1,"message":"491","line":5,"column":8,"nodeType":"382","messageId":"383","endLine":5,"endColumn":22},{"ruleId":"380","severity":1,"message":"492","line":9,"column":10,"nodeType":"382","messageId":"383","endLine":9,"endColumn":26},{"ruleId":"380","severity":1,"message":"493","line":9,"column":28,"nodeType":"382","messageId":"383","endLine":9,"endColumn":42},{"ruleId":"380","severity":1,"message":"494","line":11,"column":8,"nodeType":"382","messageId":"383","endLine":11,"endColumn":19},{"ruleId":"391","severity":1,"message":"392","line":43,"column":7,"nodeType":"393","endLine":43,"endColumn":53},{"ruleId":"380","severity":1,"message":"468","line":2,"column":10,"nodeType":"382","messageId":"383","endLine":2,"endColumn":21},{"ruleId":"380","severity":1,"message":"495","line":3,"column":8,"nodeType":"382","messageId":"383","endLine":3,"endColumn":25},{"ruleId":"380","severity":1,"message":"496","line":4,"column":8,"nodeType":"382","messageId":"383","endLine":4,"endColumn":24},{"ruleId":"380","severity":1,"message":"465","line":5,"column":8,"nodeType":"382","messageId":"383","endLine":5,"endColumn":12},{"ruleId":"380","severity":1,"message":"497","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":17},{"ruleId":"380","severity":1,"message":"498","line":7,"column":8,"nodeType":"382","messageId":"383","endLine":7,"endColumn":26},{"ruleId":"380","severity":1,"message":"499","line":21,"column":8,"nodeType":"382","messageId":"383","endLine":21,"endColumn":12},{"ruleId":"380","severity":1,"message":"500","line":23,"column":10,"nodeType":"382","messageId":"383","endLine":23,"endColumn":18},{"ruleId":"402","severity":1,"message":"437","line":29,"column":6,"nodeType":"404","endLine":29,"endColumn":8,"suggestions":"501"},{"ruleId":"380","severity":1,"message":"502","line":63,"column":10,"nodeType":"382","messageId":"383","endLine":63,"endColumn":15},{"ruleId":"380","severity":1,"message":"420","line":65,"column":9,"nodeType":"382","messageId":"383","endLine":65,"endColumn":21},{"ruleId":"380","severity":1,"message":"381","line":1,"column":17,"nodeType":"382","messageId":"383","endLine":1,"endColumn":25},{"ruleId":"380","severity":1,"message":"417","line":31,"column":16,"nodeType":"382","messageId":"383","endLine":31,"endColumn":23},"no-native-reassign",["503"],"no-negated-in-lhs",["504"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'FormGroup' is defined but never used.","'useEffect' is defined but never used.",["503"],["504"],"'makeStyles' is defined but never used.","'CardMedia' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'CalendarTodayIcon' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'green' is defined but never used.","'paperClasses' is assigned a value but never used.","'githubChange' is assigned a value but never used.","'handleGithubChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.state.project.id'. Either include it or remove the dependency array.","ArrayExpression",["505"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["503"],["504"],"'Signup' is defined but never used.","'project' is assigned a value but never used.","'setProject' is assigned a value but never used.","'TableFooter' is defined but never used.",["503"],["504"],"'setAuth' is assigned a value but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'handleChange' is assigned a value but never used.","'listClasses' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ProjectShowNav' is defined but never used.","'ProjectTabs' is defined but never used.","'GitHubIcon' is defined but never used.","'Link' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'CardActions' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'props.project.id'. Either include it or remove the dependency array.",["506"],["503"],["504"],"'spacing' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","'gridClasses' is assigned a value but never used.","'snackClasses' is assigned a value but never used.",["507"],"'IconButton' is defined but never used.","'AddIcon' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Button' is defined but never used.","'NewProjectSupporterCard' is defined but never used.","'NewProjectCommentCard' is defined but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-restricted-globals","Unexpected use of 'open'.","defaultMessage","no-undef","'handleClose' is not defined.","undef","'Grid' is defined but never used.",["508"],"'Autocomplete' is defined but never used.","'useLocation' is defined but never used.","'click' is assigned a value but never used.","'history' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["503"],["504"],"'bull' is assigned a value but never used.",["509"],"'theme' is assigned a value but never used.",["510"],["511"],"'ArrowBackIcon' is defined but never used.",["503"],["504"],["512"],["503"],["504"],["513"],"'buttonClasses' is assigned a value but never used.","'Icon' is defined but never used.",["503"],["504"],"'LandingPageNav' is defined but never used.","'MuiThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'CssBaseline' is defined but never used.","'SearchResultsCard' is defined but never used.","'SearchResultsNav' is defined but never used.","'Container' is defined but never used.","'NewProjectPostCard' is defined but never used.","'post' is assigned a value but never used.","'allPosts' is assigned a value but never used.",["514"],"'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"517","fix":"519"},{"desc":"517","fix":"520"},{"desc":"517","fix":"521"},{"desc":"517","fix":"522"},{"desc":"517","fix":"523"},{"desc":"517","fix":"524"},{"desc":"517","fix":"525"},{"desc":"517","fix":"526"},"Update the dependencies array to be: [data.state.project.id]",{"range":"527","text":"528"},"Update the dependencies array to be: [props.project.id]",{"range":"529","text":"530"},{"range":"531","text":"530"},{"range":"532","text":"530"},{"range":"533","text":"530"},{"range":"534","text":"530"},{"range":"535","text":"530"},{"range":"536","text":"530"},{"range":"537","text":"530"},{"range":"538","text":"530"},[6890,6892],"[data.state.project.id]",[6823,6825],"[props.project.id]",[3029,3031],[911,913],[1289,1291],[2944,2946],[932,934],[902,904],[1264,1266],[1246,1248]]