{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport PostCard from '../PostCard';\nimport SupporterCard from '../SupporterCard';\nimport CommentCard from '../CommentCard';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `vertical-tabpanel-${index}`,\n    \"aria-labelledby\": `vertical-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  }\n}));\nconst useSnackStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600,\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport default function NewProjectTabs(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  const snackClasses = useSnackStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [post, setPost] = useState(''); // console.log(props.user)\n\n  const [allPosts, setAllPosts] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`).then(res => res.json()).then(project => setAllPosts(project.posts));\n  }, []); // console.log(props.project.id)\n\n  const addPost = () => {\n    setOpen(false);\n    fetch(`http://localhost:3001/api/v1/posts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        project_id: props.project.id,\n        user_id: props.user.id,\n        blurb: post\n      })\n    }).then(r => r.json()).then(post => setAllPosts([...allPosts, post]));\n  }; // const [userCommenter, setUser] = useState([])\n  // const getCommenter = (id) => {\n  //   fetch(`http://localhost:3001/api/v1/users/${id}`)\n  //   .then(r => r.json())\n  //   .then( user => setUser(user))\n  // }\n  // let commenters = props.commenters.filter(com => com.id == props.comments.map(c => c.user_id))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Community\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        orientation: \"vertical\",\n        variant: \"scrollable\",\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"Vertical tabs example\",\n        className: classes.tabs,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Your Updates\",\n          ...a11yProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Comments\",\n          ...a11yProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Supporters\",\n          ...a11yProps(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: handleClickOpen,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n            id: \"form-dialog-title\",\n            children: \"Add an update about your project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n            children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n              children: \"Keep your community informed of your progress.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => setPost(e.target.value),\n              autoFocus: true,\n              margin: \"dense\",\n              id: \"name\",\n              label: \"update\",\n              type: \"text\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleClose,\n              color: \"primary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addPost,\n              color: \"primary\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), allPosts.map(p => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: p,\n          project: props.project,\n          user: props.user\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 27\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: props.comments.map(c => /*#__PURE__*/_jsxDEV(CommentCard, {\n          comment: c,\n          project: props.project\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 2,\n        children: props.supporters.map(s => /*#__PURE__*/_jsxDEV(SupporterCard, {\n          supporter: s\n        }, s.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewProjectTabs, \"SvQw43azdm1t3oFz1UmPBOXq4lQ=\", false, function () {\n  return [useStyles, useSnackStyles];\n});\n\n_c2 = NewProjectTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"NewProjectTabs\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/Tabs/ProjectTabs.js"],"names":["React","useState","useEffect","PropTypes","makeStyles","Tabs","Tab","Typography","Box","IconButton","AddIcon","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","PostCard","SupporterCard","CommentCard","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","display","height","tabs","borderRight","divider","useSnackStyles","maxWidth","marginTop","spacing","NewProjectTabs","open","setOpen","handleClickOpen","handleClose","classes","snackClasses","setValue","handleChange","event","newValue","post","setPost","allPosts","setAllPosts","fetch","project","then","res","json","posts","addPost","method","headers","body","JSON","stringify","project_id","user_id","user","blurb","r","e","target","map","p","comments","c","supporters","s"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport PostCard from '../PostCard';\nimport SupporterCard from '../SupporterCard';\n\nimport CommentCard from '../CommentCard'\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: 224,\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nconst useSnackStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n\n    \n    },\n  },\n}));\n\n\nexport default function NewProjectTabs(props) {\n  \n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const classes = useStyles();\n  const snackClasses = useSnackStyles();\n \n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [post, setPost] = useState('');\n  // console.log(props.user)\n  const [allPosts, setAllPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n      .then(res => res.json())\n      .then(project => setAllPosts(project.posts));\n  }, []);\n// console.log(props.project.id)\n  const addPost = () => {\n    setOpen(false);\n    fetch(`http://localhost:3001/api/v1/posts`, {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n\n      },\n      body: JSON.stringify({\n        project_id: props.project.id,\n        user_id: props.user.id,\n        blurb: post\n      }),\n  })\n\n\n  .then(r => r.json())\n  .then(post => setAllPosts([...allPosts, post]));\n\n  };\n\n \n  // const [userCommenter, setUser] = useState([])\n  // const getCommenter = (id) => {\n\n  //   fetch(`http://localhost:3001/api/v1/users/${id}`)\n  //   .then(r => r.json())\n  //   .then( user => setUser(user))\n  // }\n// let commenters = props.commenters.filter(com => com.id == props.comments.map(c => c.user_id))\n\n\n  return (\n      <div>\n          <h2>Community</h2>\n     \n\n    <div className={classes.root}>\n       \n      <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Your Updates\" {...a11yProps(0)} ></Tab>\n        <Tab label=\"Comments\" {...a11yProps(1)} />\n        <Tab label=\"Supporters\" {...a11yProps(2)} />\n        \n\n      </Tabs>\n      <TabPanel value={value} index={0} >\n        <IconButton aria-label=\"add\" onClick={handleClickOpen}>\n            <AddIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add an update about your project</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Keep your community informed of your progress.\n          </DialogContentText>\n          <TextField  onChange={e => setPost(e.target.value)}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"update\"\n            type=\"text\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={addPost} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog>\n    \n       {allPosts.map(p => <PostCard post={p} key={p.id} project={props.project} user={props.user}/>)}\n    \n      </TabPanel>\n      \n    \n      <TabPanel \n      value={value} index={1}>\n        {props.comments.map(c => <CommentCard comment={c} key={c.id} project={props.project} />)}\n         \n \n      </TabPanel>\n      \n         \n      <TabPanel value={value} index={2}>\n    \n      {props.supporters.map(s =>  <SupporterCard supporter={s} key={s.id}  />)}\n   \n        \n      </TabPanel>\n\n\n    </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}