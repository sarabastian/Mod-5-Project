{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/sarabastian/Flatiron/code/final-project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Paper from'@material-ui/core/Paper';import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import Avatar from'@material-ui/core/Avatar';import Typography from'@material-ui/core/Typography';var useStyles=makeStyles(function(theme){return{root:{flexGrow:1,overflow:'hidden',padding:theme.spacing(0,3)},paper:{maxWidth:400,margin:\"\".concat(theme.spacing(1),\"px auto\"),padding:theme.spacing(2)}};});export default function NewProjectCommentCard(props){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allCommenters=_useState2[0],setAllCommenters=_useState2[1];useEffect(function(){fetch(\"http://localhost:3001/api/v1/projects/\".concat(props.project.id)).then(function(res){return res.json();}).then(function(project){return setAllCommenters(project.commenters);});},[]);var thisCommenter=allCommenters.filter(function(commenter){return commenter.id==props.comment.user_id;});var avatar=function avatar(i){for(i=0;i<thisCommenter.length;i++){return thisCommenter[i].profile_pic;}};var username=function username(i){for(i=0;i<thisCommenter.length;i++){return thisCommenter[i].username;}};console.log(thisCommenter);return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(Grid,{container:true,wrap:\"nowrap\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Avatar,{src:avatar()})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:true,zeroMinWidth:true,children:/*#__PURE__*/_jsxs(Typography,{children:[props.comment.blurb,/*#__PURE__*/_jsx(\"br\",{}),\"@\",username()]})})]})});}","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/NewProjectCommentCard.js"],"names":["React","useState","useEffect","Paper","makeStyles","Grid","Avatar","Typography","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","NewProjectCommentCard","props","classes","allCommenters","setAllCommenters","fetch","project","id","then","res","json","commenters","thisCommenter","filter","commenter","comment","user_id","avatar","i","length","profile_pic","username","console","log","blurb"],"mappings":"sQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,QAAQ,CAAE,CADN,CAEJC,QAAQ,CAAE,QAFN,CAGJC,OAAO,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAAiB,CAAjB,CAHL,CADiC,CAMvCC,KAAK,CAAE,CACLC,QAAQ,CAAE,GADL,CAELC,MAAM,WAAKR,KAAK,CAACK,OAAN,CAAc,CAAd,CAAL,WAFD,CAGLD,OAAO,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAHJ,CANgC,CAAZ,EAAD,CAA5B,CAeA,cAAe,SAASI,CAAAA,qBAAT,CAA+BC,KAA/B,CAAqC,CAChD,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CADgD,cAENP,QAAQ,CAAC,EAAD,CAFF,wCAEzCoB,aAFyC,eAE1BC,gBAF0B,eAIhDpB,SAAS,CAAC,UAAM,CACZqB,KAAK,iDAA0CJ,KAAK,CAACK,OAAN,CAAcC,EAAxD,EAAL,CACGC,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAF,OAAO,QAAIF,CAAAA,gBAAgB,CAACE,OAAO,CAACK,UAAT,CAApB,EAFf,EAGD,CAJM,CAIJ,EAJI,CAAT,CAOE,GAAIC,CAAAA,aAAa,CAAGT,aAAa,CAACU,MAAd,CAAqB,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACP,EAAV,EAAgBN,KAAK,CAACc,OAAN,CAAcC,OAAlC,EAA9B,CAApB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAO,CACtB,IAAKA,CAAC,CAAC,CAAP,CAAUA,CAAC,CAAEN,aAAa,CAACO,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACpC,MAAON,CAAAA,aAAa,CAACM,CAAD,CAAb,CAAiBE,WAAxB,CAAqC,CACxC,CAHD,CAKA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,CAAD,CAAO,CACtB,IAAKA,CAAC,CAAC,CAAP,CAAUA,CAAC,CAAEN,aAAa,CAACO,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACpC,MAAON,CAAAA,aAAa,CAACM,CAAD,CAAb,CAAiBG,QAAxB,CAAkC,CACvC,CAHD,CAONC,OAAO,CAACC,GAAR,CAAYX,aAAZ,EACA,mBAIA,KAAC,KAAD,EAAO,SAAS,CAAEV,OAAO,CAACL,KAA1B,uBACA,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,IAAI,CAAC,QAArB,CAA8B,OAAO,CAAE,CAAvC,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACA,KAAC,MAAD,EAAQ,GAAG,CAAEoB,MAAM,EAAnB,EADA,EADF,cAKE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,CAAc,YAAY,KAA1B,uBACE,MAAC,UAAD,YACChB,KAAK,CAACc,OAAN,CAAcS,KADf,cAEC,aAFD,KAEYH,QAAQ,EAFpB,GADF,EALF,GADA,EAJA,CAoBC","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function NewProjectCommentCard(props){\n    const classes = useStyles();\n    const [allCommenters, setAllCommenters] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n          .then(res => res.json())\n          .then(project => setAllCommenters(project.commenters));\n      }, []);\n    \n      \n      let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id )\n      const avatar = (i) => {\n      for (i=0; i< thisCommenter.length; i++) {\n          return thisCommenter[i].profile_pic }\n      }\n\n      const username = (i) => {\n        for (i=0; i< thisCommenter.length; i++) {\n            return thisCommenter[i].username }\n      }\n\n\n    \nconsole.log(thisCommenter)\nreturn(\n\n\n\n<Paper className={classes.paper}>\n<Grid container wrap=\"nowrap\" spacing={2}>\n  <Grid item>\n  <Avatar src={avatar()}></Avatar> \n\n  </Grid>\n  <Grid item xs zeroMinWidth>\n    <Typography >\n    {props.comment.blurb}\n     <br></br>@{username()}\n    </Typography>\n  </Grid>\n</Grid>\n</Paper>\n)\n\n}"]},"metadata":{},"sourceType":"module"}