{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useSearchStyles = makeStyles(theme => ({\n  root: {\n    width: 200,\n    '& > * + *': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search() {\n  _s();\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  const classes = useStyles();\n  const searchClasses = useSearchStyles();\n  const [projects, setProjects] = React.useState([]);\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: searchClasses.root,\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      multiple: true,\n      limitTags: 2,\n      id: \"multiple-limit-tags\",\n      options: projects,\n      getOptionLabel: option => option.language // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n      ,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        color: \"secondary\",\n        placeholder: \"Search Projects by language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"zJ7UgVxCADrAwWsHub9kQHadt18=\", false, function () {\n  return [useStyles, useSearchStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","TextField","Autocomplete","useSearchStyles","theme","root","width","marginTop","spacing","useStyles","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","fetch","then","res","json","projects","setProjects","classes","searchClasses","useState","console","log","option","language","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst useSearchStyles = makeStyles((theme) => ({\n    root: {\n      width: 200,\n      '& > * + *': {\n        marginTop: theme.spacing(3),\n      },\n    },\n  }));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\n\n\nexport default function Search() {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    const searchClasses = useSearchStyles();\n\n    const [projects, setProjects] = React.useState([]) ;\n   \n\n\nconsole.log(projects)\n\n\n    return (\n        <div className={searchClasses.root}>\n      <Autocomplete\n        multiple\n        limitTags={2}\n        id=\"multiple-limit-tags\"\n        options={projects}\n        getOptionLabel={(option) => option.language}\n        // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n        renderInput={(params) => (\n          <TextField {...params} color='secondary' placeholder=\"Search Projects by language\" />\n        )}\n      />\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}