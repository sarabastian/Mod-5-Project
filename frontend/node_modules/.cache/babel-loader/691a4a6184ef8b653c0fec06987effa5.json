{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"; // const useSearchStyles = makeStyles((theme) => ({\n//     root: {\n//       width: 280,\n//       '& > * + *': {\n//         marginTop: theme.spacing(3),\n//       },\n//     },\n//   }));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(),\n      width: 'auto'\n    }\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search(props) {\n  _s();\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  const classes = useStyles(); // const searchClasses = useSearchStyles();\n\n  const [projects, setProjects] = React.useState([]);\n  const [language, setLanguage] = React.useState('');\n  const [click, setClick] = React.useState(false);\n  const history = useHistory();\n\n  const handleClick = e => {\n    setClick(true);\n  };\n\n  const handleLanguage = e => {\n    setLanguage(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log('hi');\n  };\n\n  console.log(language);\n  const searchResults = projects.filter(project => project.language.toUpperCase() === language.toUpperCase()); // \n\n  const accurateResults = searchResults.filter(r => r.user_id != props.user.id);\n  console.log(accurateResults.map);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.search,\n      children: [accurateResults.map(project => /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/search',\n            state: {\n              project: project,\n              user: props.user\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 2\n      }, this)), /*#__PURE__*/_jsxDEV(InputBase, {\n        onChange: handleLanguage,\n        placeholder: \"Search for projects by language\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        inputProps: {\n          'aria-label': 'search'\n        },\n        value: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this) //         <div className={searchClasses.root}>\n  //       <Autocomplete\n  //         multiple\n  //         limitTags={2}\n  //         id=\"multiple-limit-tags\"\n  //         options={projects}\n  //         getOptionLabel={(option) => option.language}\n  //         // handleParams(option.language)\n  //         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n  //         renderInput={(params) => (\n  //           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n  //         )}\n  //       />\n  //       <IconButton><SearchIcon />\n  //       </IconButton>\n  // </div>\n  ;\n}\n\n_s(Search, \"9HQkuQdzRDG8Sa/d/UR4IqNDfwI=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","TextField","Autocomplete","IconButton","InputBase","Link","useLocation","useHistory","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","Search","props","fetch","then","res","json","projects","setProjects","classes","useState","language","setLanguage","click","setClick","history","handleClick","e","handleLanguage","target","value","handleSubmit","console","log","searchResults","filter","project","toUpperCase","accurateResults","r","user_id","user","id","map","pathname","state","input"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n\n// const useSearchStyles = makeStyles((theme) => ({\n//     root: {\n//       width: 280,\n//       '& > * + *': {\n//         marginTop: theme.spacing(3),\n//       },\n//     },\n//   }));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(),\n        width: 'auto'\n      },\n    },\n\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '12ch',\n        '&:focus': {\n          width: '20ch',\n        },\n      },\n    },\n  }));\n\n\nexport default function Search(props) {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    // const searchClasses = useSearchStyles();\n\n    const [projects, setProjects] = React.useState([]) ;\n    const [language, setLanguage] = React.useState('');\n    const [click, setClick] = React.useState(false);\n    const history = useHistory();\n\n    const handleClick = (e) => {\n      setClick(true)\n    }\n\n    const handleLanguage = (e) => {\n        setLanguage(e.target.value)\n    }\n\n    const handleSubmit = () => {\n       \n        console.log('hi')\n    }\n\n    console.log(language)\n    \n    const searchResults = projects.filter(project => project.language.toUpperCase() === language.toUpperCase() )\n        // \n    const accurateResults = searchResults.filter(r => r.user_id != props.user.id)\n    console.log(accurateResults.map)\n    return (\n        <div className={classes.root}>\n\n\n<div className={classes.search}>\n            {/* <div className={classes.searchIcon}> */}\n            {/* <IconButton onClick={handleClick}  >\n            {accurateResults.map(project => <Link to={{\n              pathname: '/search',\n              state: {\n                project: project,\n                user: props.user\n              }\n            }}> \n                <SearchIcon />\n                </Link>)}\n             </IconButton> */}\n\n{accurateResults.map(project =>\n <IconButton onClick={handleClick}  >\n  <Link to={{\n    pathname: '/search',\n    state: {\n      project: project,\n      user: props.user\n    } }} />\n     \n    <SearchIcon />\n    </IconButton>\n\n)}\n\n{/* {click ? accurateResults.map(project => history.push({\n                  pathname: '/search',\n                  state: {\n                    project: project,\n                    user: props.user\n                  }\n                })  ) : null} */}\n\n           \n            <InputBase onChange={handleLanguage}\n              placeholder=\"Search for projects by language\"\n             \n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n             value={language}\n             \n                 />\n          </div>\n          </div>\n\n\n\n\n\n\n\n\n\n\n\n\n//         <div className={searchClasses.root}>\n          \n//       <Autocomplete\n        \n//         multiple\n//         limitTags={2}\n//         id=\"multiple-limit-tags\"\n//         options={projects}\n//         getOptionLabel={(option) => option.language}\n//         // handleParams(option.language)\n        \n\n//         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n \n//         renderInput={(params) => (\n//           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n       \n        \n//         )}\n  \n//       />\n//       <IconButton><SearchIcon />\n      \n//       </IconButton>\n \n\n// </div>\n\n             \n\n    )\n}"]},"metadata":{},"sourceType":"module"}