{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nexport default function CreateProject(props) {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [title, setTitle] = useState('');\n  const [story, setStory] = useState('');\n  const [timeline, setTimeline] = useState(null);\n  const [fundraisingGoal, setFundraisingGoal] = useState(null);\n  const [github, setGithub] = useState('');\n  const [language, setLanguage] = useState('');\n  cost[(stage, setStage)] = useState('');\n  const data = useLocation();\n\n  const submitValue = () => {\n    const details = {\n      'Title': title,\n      'Story': story,\n      'Timeline': timeline,\n      'Fundraising Goal': fundraisingGoal,\n      'Github': github,\n      'Language': language,\n      'Stage': stage,\n      'User': data.state.user\n    };\n    console.log(details);\n  };\n\n  const handleNext = e => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Name your Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Write your story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setStory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"What's your timeline?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setTimeline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Do you have a fundraising goal? Enter the amount you want to reach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setFundraisingGoal(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Link your Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setGithub(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"What language/stack are you using?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setLanguage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n      square: true,\n      elevation: 0,\n      className: classes.resetContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/new\",\n          state: {\n            title,\n            story,\n            github,\n            data\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submitValue,\n          className: classes.button,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        className: classes.button,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateProject, \"h+60x6Y5iQpDKVyOCJVvXgjJXLQ=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = CreateProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProject\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js"],"names":["React","useState","Input","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","Link","useLocation","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","CreateProject","props","classes","activeStep","setActiveStep","steps","getSteps","title","setTitle","story","setStory","timeline","setTimeline","fundraisingGoal","setFundraisingGoal","github","setGithub","language","setLanguage","cost","stage","setStage","data","submitValue","details","state","user","console","log","handleNext","e","prevActiveStep","handleBack","handleReset","target","value","length","pathname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\n\n\n\n\n\nexport default function CreateProject(props) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [fundraisingGoal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    cost [stage, setStage] = useState('');\n    const data = useLocation();\n\n\n    const submitValue = () => {\n        const details = {\n            'Title': title,\n            'Story': story,\n            'Timeline': timeline,\n            'Fundraising Goal': fundraisingGoal,\n            'Github': github,\n            'Language': language,\n            'Stage': stage,\n            'User': data.state.user\n\n        }\n        console.log(details);\n\n    }\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Link to={{\n                        pathname: \"/new\",\n                        state: {\n                            title,\n                            story,\n                            github,\n                            data\n                            \n\n                        }\n\n                    }} >\n                        <Button onClick={submitValue} className={classes.button}>\n                            Create\n          </Button>\n                    </Link>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}