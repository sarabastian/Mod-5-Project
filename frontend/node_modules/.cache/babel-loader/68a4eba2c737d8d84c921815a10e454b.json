{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js\";\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/login';\nimport { createBrowserHistory } from 'history';\nimport Main from './components/Main';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isloggedin: false\n    };\n\n    this.handleLogin = () => {\n      if (localStorage.getItem('token')) {\n        this.setState({\n          isloggedin: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.handleLogin();\n  }\n\n  // handleLogout = () => {\n  //   if localStorage.\n  // }\n  render() {\n    console.log(localStorage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: () => /*#__PURE__*/_jsxDEV(Main, {\n              login: this.state.isloggedin,\n              handleLogin: this.handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // function App() {\n//   const [user, setUser] = useState({})\n//   const [form, setForm] = useState(\"\")\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\")\n//     if (token) {\n//       fetch('http://localhost:3001/api/v1/auto_login', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       })\n//         .then(resp => resp.json())\n//         .then(data => {\n//           setUser(data)\n//           // console.log(data)\n//         })\n//     }\n//   }, [])\n//   const handleLogin = (user) => {\n//     setUser(user)\n//   }\n//   const handleFormSwitch = (input) => {\n//     setForm(input)\n//   }\n//   const handleAuthClick = () => {\n//     const token = localStorage.getItem(\"token\")\n//     fetch(`http://localhost:3001/api/v1/user_is_authed`, {\n//       headers: {\n//         \"Authorization\": `Bearer ${token}`\n//       }\n//     })\n//       .then(resp => resp.json())\n//       .then(data => console.log(data))\n//   }\n//   console.log(user)\n//   const renderForm = () => {\n//     switch (form) {\n//       case \"login\":\n//         return <Login handleLogin={handleLogin} />\n//         break;\n//       default:\n//       // return <SignInForm handleLogin={handleLogin}/>\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n//       <Header handleFormSwitch={handleFormSwitch} />\n//       {\n//         renderForm()\n//       }\n//       <button onClick={handleAuthClick} className=\"ui button\">Access Authorized Route</button>\n//   <Router history={history}>\n//     <Switch>\n//       <Route exact path='/'> <Mainrender={(props)/> </Route>\n//       {/* <Route exact path=\"/\" render={(props) => <WelcomeBanner {...props} history={history} />} /> */}\n//       <Route exact path=\"/recipes\" render={() => <RecipeCollection menus={menus} />} />\n//       <Route path=\"/recipes/\" render={(props) => <RecipePage {...props} menus={menus} />} />\n//       <Route path=\"/menu\" render={(props) => <MenuPage {...props} user={user_id} menus={menus} />} />\n//     </Switch>\n//   </Router>\n//   {/* Footer? */ }\n//   </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Login","createBrowserHistory","Main","App","Component","state","isloggedin","handleLogin","localStorage","getItem","setState","componentDidMount","render","console","log"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,UAAU,EAAE;AADN,KADwB;;AAAA,SAShCC,WATgC,GASlB,MAAM;AAClB,UAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAkC;AAChC,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KAb+B;AAAA;;AAKhCK,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,WAAL;AACD;;AAQD;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AAGTC,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAEE,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAE,mBAAM,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,UAAxB;AAAoC,cAAA,WAAW,EAAE,KAAKC;AAAtD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA5C+B;;AA8ClC,eAAeJ,GAAf,C,CAiBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/login';\n\n\nimport { createBrowserHistory } from 'history';\nimport Main from './components/Main';\n\nclass App extends React.Component {\n  state = {\n    isloggedin: false\n  }\n\n  componentDidMount(){\n    this.handleLogin();\n  }\n\n  handleLogin = () => {\n    if(localStorage.getItem('token')) {\n      this.setState({ isloggedin: true})\n    }\n  }\n\n  // handleLogout = () => {\n  //   if localStorage.\n  // }\n\n  render() {\n\n    \n  console.log(localStorage)\n\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={() => <Main login={this.state.isloggedin} handleLogin={this.handleLogin} /> } />\n            {/* <Route path=\"/book\" component={OrderForm} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/reservations\" component={UpcomingReservations} />\n            <Route path=\"/my-vans\" component={SavedVansContainer} /> */}\n\n\n\n          </Switch>\n       </Router>\n            \n       \n          \n      </div>\n\n    );\n  }\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   const [user, setUser] = useState({})\n//   const [form, setForm] = useState(\"\")\n\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"token\")\n//     if (token) {\n//       fetch('http://localhost:3001/api/v1/auto_login', {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       })\n//         .then(resp => resp.json())\n//         .then(data => {\n//           setUser(data)\n//           // console.log(data)\n//         })\n//     }\n//   }, [])\n//   const handleLogin = (user) => {\n//     setUser(user)\n//   }\n\n//   const handleFormSwitch = (input) => {\n//     setForm(input)\n//   }\n//   const handleAuthClick = () => {\n//     const token = localStorage.getItem(\"token\")\n//     fetch(`http://localhost:3001/api/v1/user_is_authed`, {\n//       headers: {\n//         \"Authorization\": `Bearer ${token}`\n//       }\n//     })\n//       .then(resp => resp.json())\n//       .then(data => console.log(data))\n//   }\n\n//   console.log(user)\n\n//   const renderForm = () => {\n//     switch (form) {\n//       case \"login\":\n//         return <Login handleLogin={handleLogin} />\n//         break;\n//       default:\n//       // return <SignInForm handleLogin={handleLogin}/>\n//     }\n//   }\n//   return (\n//     <div className=\"App\">\n\n//       <Header handleFormSwitch={handleFormSwitch} />\n//       {\n//         renderForm()\n//       }\n//       <button onClick={handleAuthClick} className=\"ui button\">Access Authorized Route</button>\n  \n   \n//   <Router history={history}>\n//     <Switch>\n//       <Route exact path='/'> <Mainrender={(props)/> </Route>\n//       {/* <Route exact path=\"/\" render={(props) => <WelcomeBanner {...props} history={history} />} /> */}\n//       <Route exact path=\"/recipes\" render={() => <RecipeCollection menus={menus} />} />\n//       <Route path=\"/recipes/\" render={(props) => <RecipePage {...props} menus={menus} />} />\n//       <Route path=\"/menu\" render={(props) => <MenuPage {...props} user={user_id} menus={menus} />} />\n//     </Switch>\n//   </Router>\n//   {/* Footer? */ }\n//   </div>\n//   );\n\n// }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}