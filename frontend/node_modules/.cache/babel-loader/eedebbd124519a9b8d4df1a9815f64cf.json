{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Input } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport CreateProjectNav from \"./Navbars/CreateProjectNav\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps() {\n  return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n}\n\nfunction CreateProject() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [title, setTitle] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [timeline, setTimeline] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [fundraising_goal, setFundraisingGoal] = useState(null);\n  const [github, setGithub] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [stage, setStage] = useState(\"\");\n  const data = useLocation();\n\n  const handleNext = e => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const history = useHistory();\n\n  const createNew = () => {\n    fetch(\"http://localhost:3001/api/v1/projects\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        title: title,\n        story: story,\n        timeline: parseInt(timeline),\n        fundraising_goal: parseInt(fundraising_goal),\n        image: image,\n        github: github,\n        language: language,\n        stage: stage,\n        user_id: data.state.user.id\n      })\n    }).then(r => r.json()).then(project => history.push({\n      pathname: \"/new\",\n      state: {\n        project\n      }\n    }));\n  };\n\n  const user = data.state.user; // console.log(user)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateProjectNav, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          orientation: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Name your Campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Write your story\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setStory(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What's your timeline (i.e. number of days to complete)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setTimeline(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Do you have a fundraising goal? Enter the amount you want to reach\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setFundraisingGoal(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Paste the source of your project's cover image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Link your Github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setGithub(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What language/stack are you using?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setLanguage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What stage are you at (i.e. early, mid, late)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setStage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n          square: true,\n          elevation: 0,\n          className: classes.resetContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: createNew,\n            className: classes.button,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            className: classes.button,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateProject, \"cYuRyQizDfW3ooSpvtFu6sSIOUE=\", false, function () {\n  return [useStyles, useLocation, useHistory];\n});\n\n_c = CreateProject;\nexport default _c2 = withRouter(CreateProject);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateProject\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js"],"names":["React","useEffect","useState","Input","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","useLocation","withRouter","useHistory","Box","CreateProjectNav","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getSteps","CreateProject","classes","activeStep","setActiveStep","steps","title","setTitle","story","setStory","timeline","setTimeline","image","setImage","fundraising_goal","setFundraisingGoal","github","setGithub","language","setLanguage","stage","setStage","data","handleNext","e","prevActiveStep","handleBack","handleReset","history","createNew","fetch","method","headers","Accept","body","JSON","stringify","parseInt","user_id","state","user","id","then","r","json","project","push","pathname","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Input } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useLocation } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport CreateProjectNav from \"./Navbars/CreateProjectNav\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n}\n\nfunction CreateProject() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [title, setTitle] = useState(\"\");\n  const [story, setStory] = useState(\"\");\n  const [timeline, setTimeline] = useState(null);\n  const [image, setImage] = useState(\"\");\n  const [fundraising_goal, setFundraisingGoal] = useState(null);\n  const [github, setGithub] = useState(\"\");\n  const [language, setLanguage] = useState(\"\");\n  const [stage, setStage] = useState(\"\");\n\n  const data = useLocation();\n\n  const handleNext = (e) => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const history = useHistory();\n\n  const createNew = () => {\n    fetch(\"http://localhost:3001/api/v1/projects\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        title: title,\n        story: story,\n        timeline: parseInt(timeline),\n        fundraising_goal: parseInt(fundraising_goal),\n        image: image,\n        github: github,\n        language: language,\n        stage: stage,\n        user_id: data.state.user.id,\n      }),\n    })\n      .then((r) => r.json())\n      .then((project) =>\n        history.push({\n          pathname: \"/new\",\n          state: {\n            project,\n          },\n        })\n      );\n  };\n\n  const user = data.state.user;\n  // console.log(user)\n\n  return (\n    <div>\n      <CreateProjectNav user={user} />\n      <Box boxShadow={0}>\n        <div className={classes.root}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            <Step>\n              <StepLabel>Name your Campaign</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setTitle(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>Write your story</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setStory(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>\n                What's your timeline (i.e. number of days to complete)?\n              </StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setTimeline(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>\n                Do you have a fundraising goal? Enter the amount you want to\n                reach\n              </StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input\n                    onChange={(e) => setFundraisingGoal(e.target.value)}\n                  ></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>\n                Paste the source of your project's cover image\n              </StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setImage(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>Link your Github</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setGithub(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>What language/stack are you using?</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setLanguage(e.target.value)}></Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n            <Step>\n              <StepLabel>\n                What stage are you at (i.e. early, mid, late)?\n              </StepLabel>\n              <StepContent>\n                <Typography>\n                  <Input onChange={(e) => setStage(e.target.value)}>\n                    {/* {getStepContent(index)} */}\n                  </Input>\n                </Typography>\n\n                <div className={classes.actionsContainer}>\n                  <div>\n                    <Button\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                      className={classes.button}\n                    >\n                      Back\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleNext}\n                      className={classes.button}\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </div>\n                </div>\n              </StepContent>\n            </Step>\n          </Stepper>\n          {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n              <Typography>\n                All steps completed - you&apos;re finished\n              </Typography>\n\n              <Button onClick={createNew} className={classes.button}>\n                Create\n              </Button>\n\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </Paper>\n          )}\n        </div>\n      </Box>\n    </div>\n  );\n}\n\nexport default withRouter(CreateProject);\n"]},"metadata":{},"sourceType":"module"}