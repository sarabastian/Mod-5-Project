{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { useLocation } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport CreateProjectNav from './Navbars/CreateProjectNav';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    padding: none\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps() {\n  return ['1', '2', '3', '4', '5', '6', '7', '8'];\n}\n\nfunction CreateProject() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [title, setTitle] = useState('');\n  const [story, setStory] = useState('');\n  const [timeline, setTimeline] = useState(null);\n  const [image, setImage] = useState('');\n  const [fundraising_goal, setFundraisingGoal] = useState(null);\n  const [github, setGithub] = useState('');\n  const [language, setLanguage] = useState('');\n  const [stage, setStage] = useState('');\n  const [project, setProject] = useState([]);\n  const data = useLocation();\n\n  const handleNext = e => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const history = useHistory();\n\n  const createNew = () => {\n    fetch('http://localhost:3001/api/v1/projects', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        story: story,\n        timeline: parseInt(timeline),\n        fundraising_goal: parseInt(fundraising_goal),\n        image: image,\n        github: github,\n        language: language,\n        stage: stage,\n        user_id: data.state.user.id\n      })\n    }).then(r => r.json()).then(project => history.push({\n      pathname: \"/new\",\n      state: {\n        project\n      }\n    }));\n  }; // const details = {\n  //     'Title': title,\n  //     'Story': story,\n  //     'Timeline': timeline,\n  //     'Fundraising Goal': fundraising_goal,\n  //     'Image': image,\n  //     'Github': github,\n  //     'Language': language,\n  //     'Stage': stage,\n  //     'User': data.state.user\n  // }\n  // console.log(data);\n\n\n  const user = data.state.user; // console.log(user)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CreateProjectNav, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          orientation: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Name your Campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Write your story\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setStory(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What's your timeline (i.e. number of days to complete)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setTimeline(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Do you have a fundraising goal? Enter the amount you want to reach\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setFundraisingGoal(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Paste the source of your project's cover image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"Link your Github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setGithub(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What language/stack are you using?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setLanguage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Step, {\n            children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n              children: \"What stage are you at (i.e. early, mid, late)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  onChange: e => setStage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.actionsContainer,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    disabled: activeStep === 0,\n                    onClick: handleBack,\n                    className: classes.button,\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleNext,\n                    className: classes.button,\n                    children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n          square: true,\n          elevation: 0,\n          className: classes.resetContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: createNew,\n            className: classes.button,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleReset,\n            className: classes.button,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateProject, \"cbsKKBhlQz/TkGsi19dXzanQ50k=\", false, function () {\n  return [useStyles, useLocation, useHistory];\n});\n\n_c = CreateProject;\nexport default _c2 = withRouter(CreateProject);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateProject\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js"],"names":["React","useEffect","useState","Input","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","useLocation","withRouter","useHistory","Container","CreateProjectNav","useStyles","theme","root","width","padding","none","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","getSteps","CreateProject","classes","activeStep","setActiveStep","steps","title","setTitle","story","setStory","timeline","setTimeline","image","setImage","fundraising_goal","setFundraisingGoal","github","setGithub","language","setLanguage","stage","setStage","project","setProject","data","handleNext","e","prevActiveStep","handleBack","handleReset","history","createNew","fetch","method","headers","body","JSON","stringify","parseInt","user_id","state","user","id","then","r","json","push","pathname","target","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport CreateProjectNav from './Navbars/CreateProjectNav'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        padding: none\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n        \n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const [project, setProject] = useState([]);\n    const data = useLocation();\n\n\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n    const history = useHistory();\n\n  \n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => \n          history.push({\n              pathname: \"/new\", \n              state: {\n                  project\n              }})\n          )}\n\n\n    // const details = {\n    //     'Title': title,\n    //     'Story': story,\n    //     'Timeline': timeline,\n    //     'Fundraising Goal': fundraising_goal,\n    //     'Image': image,\n    //     'Github': github,\n    //     'Language': language,\n    //     'Stage': stage,\n    //     'User': data.state.user\n\n    // }\n    // console.log(data);\n    const user = data.state.user\n    // console.log(user)\n\n\n    return (\n      \n        <div>\n           <CreateProjectNav user = {user} />\n       <Container >\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Campaign</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline (i.e. number of days to complete)?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Paste the source of your project's cover image</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at (i.e. early, mid, late)?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n              \n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                \n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n        </Container>\n        </div>\n \n    );\n}\n\nexport default withRouter(CreateProject)"]},"metadata":{},"sourceType":"module"}