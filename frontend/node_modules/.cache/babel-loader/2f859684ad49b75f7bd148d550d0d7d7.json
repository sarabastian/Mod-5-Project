{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Chip from '@material-ui/core/Chip';\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 21\n}, this);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search() {\n  _s();\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  const classes = useStyles();\n  const [projects, setProjects] = React.useState([]);\n  const fixedOptions = [projects[6]];\n  const [value, setValue] = React.useState([...fixedOptions, projects[13]]);\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"fixed-tags-demo\",\n    value: value,\n    onChange: (event, newValue) => {\n      setValue([...fixedOptions, ...newValue.filter(option => fixedOptions.indexOf(option) === -1)]);\n    },\n    options: projects,\n    getOptionLabel: option => option.title,\n    renderTags: (tagValue, getTagProps) => tagValue.map((option, index) => /*#__PURE__*/_jsxDEV(Chip, {\n      label: option.title,\n      ...getTagProps({\n        index\n      }),\n      disabled: fixedOptions.indexOf(option) !== -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)),\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"Fixed tag\",\n      variant: \"outlined\",\n      placeholder: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"V5X6fe5POG3urwCD0qrpixS3OK4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","TextField","Autocomplete","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Chip","icon","checkedIcon","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","fetch","then","res","json","projects","setProjects","classes","useState","fixedOptions","value","setValue","console","log","event","newValue","filter","option","indexOf","title","tagValue","getTagProps","map","index","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Chip from '@material-ui/core/Chip';\n\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\n\n\nexport default function Search() {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    const [projects, setProjects] = React.useState([]) ;\n    const fixedOptions = [projects[6]];\n    const [value, setValue] = React.useState([...fixedOptions, projects[13]]);\n\n\n\nconsole.log(projects)\n\n\n    return (\n        <Autocomplete\n        multiple\n        id=\"fixed-tags-demo\"\n        value={value}\n        onChange={(event, newValue) => {\n          setValue([\n            ...fixedOptions,\n            ...newValue.filter((option) => fixedOptions.indexOf(option) === -1),\n          ]);\n        }}\n        options={projects}\n        getOptionLabel={(option) => option.title}\n        renderTags={(tagValue, getTagProps) =>\n          tagValue.map((option, index) => (\n            <Chip\n              label={option.title}\n              {...getTagProps({ index })}\n              disabled={fixedOptions.indexOf(option) !== -1}\n            />\n          ))\n        }\n        style={{ width: 500 }}\n        renderInput={(params) => (\n          <TextField {...params} label=\"Fixed tag\" variant=\"outlined\" placeholder=\"Favorites\" />\n        )}\n      />\n    )\n}"]},"metadata":{},"sourceType":"module"}