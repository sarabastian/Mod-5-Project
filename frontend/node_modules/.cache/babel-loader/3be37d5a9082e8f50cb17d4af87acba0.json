{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(),\n      width: \"auto\"\n    }\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\"\n      }\n    }\n  }\n}));\nexport default function Search(props) {\n  _s();\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/v1/projects/\").then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  const classes = useStyles();\n  const [projects, setProjects] = React.useState([]);\n  const [language, setLanguage] = React.useState(\"\");\n  const [click, setClick] = React.useState(false);\n  const history = useHistory();\n\n  const handleClick = e => {\n    setClick(true);\n  };\n\n  const handleLanguage = e => {\n    setLanguage(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(\"hi\");\n  };\n\n  console.log(language);\n  const searchResults = projects.filter(project => project.language.toUpperCase() === language.toUpperCase()); //\n\n  const accurateResults = searchResults.filter(r => r.user_id != props.user.id);\n  console.log(accurateResults.map);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.search,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/search\",\n          state: {\n            accurateResults,\n            user: props.user\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClick,\n          children: [\" \", /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n        onChange: handleLanguage,\n        placeholder: \"Search by language\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        inputProps: {\n          \"aria-label\": \"search\"\n        },\n        value: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this) //         <div className={searchClasses.root}>\n  //       <Autocomplete\n  //         multiple\n  //         limitTags={2}\n  //         id=\"multiple-limit-tags\"\n  //         options={projects}\n  //         getOptionLabel={(option) => option.language}\n  //         // handleParams(option.language)\n  //         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n  //         renderInput={(params) => (\n  //           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n  //         )}\n  //       />\n  //       <IconButton><SearchIcon />\n  //       </IconButton>\n  // </div>\n  ;\n}\n\n_s(Search, \"Nh7pzcMaXk3V4R3lxg07FHoA8U4=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","IconButton","InputBase","Link","useHistory","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","Search","props","fetch","then","res","json","projects","setProjects","classes","useState","language","setLanguage","click","setClick","history","handleClick","e","handleLanguage","target","value","handleSubmit","console","log","searchResults","filter","project","toUpperCase","accurateResults","r","user_id","user","id","map","pathname","state","input"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(),\n      width: \"auto\",\n    },\n  },\n\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nexport default function Search(props) {\n  useEffect(() => {\n    fetch(\"http://localhost:3001/api/v1/projects/\")\n      .then((res) => res.json())\n      .then((projects) => setProjects(projects));\n  }, []);\n\n  const classes = useStyles();\n  const [projects, setProjects] = React.useState([]);\n  const [language, setLanguage] = React.useState(\"\");\n  const [click, setClick] = React.useState(false);\n  const history = useHistory();\n\n  const handleClick = (e) => {\n    setClick(true);\n  };\n\n  const handleLanguage = (e) => {\n    setLanguage(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    console.log(\"hi\");\n  };\n\n  console.log(language);\n\n  const searchResults = projects.filter(\n    (project) => project.language.toUpperCase() === language.toUpperCase()\n  );\n  //\n  const accurateResults = searchResults.filter(\n    (r) => r.user_id != props.user.id\n  );\n  console.log(accurateResults.map);\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <Link\n          to={{\n            pathname: \"/search\",\n            state: {\n              accurateResults,\n              user: props.user,\n            },\n          }}\n        >\n          <IconButton onClick={handleClick}>\n            {\" \"}\n            <SearchIcon />\n          </IconButton>\n        </Link>\n\n        <InputBase\n          onChange={handleLanguage}\n          placeholder=\"Search by language\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          value={language}\n        />\n      </div>\n    </div>\n\n    //         <div className={searchClasses.root}>\n\n    //       <Autocomplete\n\n    //         multiple\n    //         limitTags={2}\n    //         id=\"multiple-limit-tags\"\n    //         options={projects}\n    //         getOptionLabel={(option) => option.language}\n    //         // handleParams(option.language)\n\n    //         // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n\n    //         renderInput={(params) => (\n    //           <TextField {...params}  onChange={(event) => onSearch(event.currentTarget.value)} color='secondary' placeholder=\"Search Projects by language\" />\n\n    //         )}\n\n    //       />\n    //       <IconButton><SearchIcon />\n\n    //       </IconButton>\n\n    // </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}