{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 21\n}, this);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search() {\n  _s();\n\n  const classes = useStyles();\n  const [projects, setProjects] = React.useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  console.log(projects);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    id: \"checkboxes-tags-demo\",\n    options: projects,\n    disableCloseOnSelect: true,\n    getOptionLabel: option => option.title,\n    renderOption: (option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: icon,\n        checkedIcon: checkedIcon,\n        style: {\n          marginRight: 8\n        },\n        checked: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), option.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this),\n    style: {\n      width: 500\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      variant: \"outlined\",\n      label: \"Checkboxes\",\n      placeholder: \"Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"SLTPTDG2OM/zl0k1BtXCOzlDuu4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","TextField","Autocomplete","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","icon","checkedIcon","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","classes","projects","setProjects","useState","fetch","then","res","json","console","log","option","title","selected","marginRight","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function Search() {\n    const classes = useStyles();\n    const [projects, setProjects] = React.useState([]) ;\n\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\nconsole.log(projects)\n\n\n    return (\n        <Autocomplete\n        multiple\n        id=\"checkboxes-tags-demo\"\n        options={projects}\n        disableCloseOnSelect\n        getOptionLabel={(option) => option.title}\n        renderOption={(option, { selected }) => (\n          <React.Fragment>\n            <Checkbox\n              icon={icon}\n              checkedIcon={checkedIcon}\n              style={{ marginRight: 8 }}\n              checked={selected}\n            />\n            {option.title}\n          </React.Fragment>\n        )}\n        style={{ width: 500 }}\n        renderInput={(params) => (\n          <TextField {...params} variant=\"outlined\" label=\"Checkboxes\" placeholder=\"Favorites\" />\n        )}\n      />\n    )\n}"]},"metadata":{},"sourceType":"module"}