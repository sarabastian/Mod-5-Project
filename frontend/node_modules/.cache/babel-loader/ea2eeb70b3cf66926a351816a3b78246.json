{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/login';\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [form, setForm] = useState(\"\");\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch('http://localhost:3001/api/v1/auto_login', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(resp => resp.json()).then(data => {\n        setUser(data); // console.log(data)\n      });\n    }\n  }, []);\n\n  const handleLogin = user => {\n    setUser(user);\n  };\n\n  const handleFormSwitch = input => {\n    setForm(input);\n  };\n} // class App extends React.Component {\n//   state = {\n//     isLoggedIn: false\n//   }\n//   componentDidMount(){\n//     this.handleLogin();\n//   }\n//   handleLogin = () => {\n//     if(localStorage.getItem('token')) {\n//       this.setState({ isLoggedIn: true})\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Router>\n//           <Switch>\n//             <Route path=\"/login\" component={() => <Login login={this.state.isLoggedIn} handleLogin={this.handleLogin}/>} />\n//           </Switch>\n//        </Router>\n//           </div>\n//     )\n//   }\n// }\n\n\n_s(App, \"fKViy9bLEK2FYaAkbjXtsjAcNQ8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Login","App","user","setUser","form","setForm","token","localStorage","getItem","fetch","headers","Authorization","then","resp","json","data","handleLogin","handleFormSwitch","input"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACTG,MAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC/CC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASL,KAAM;AADxB;AADsC,OAA5C,CAAL,CAKGM,IALH,CAKQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EALhB,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZZ,QAAAA,OAAO,CAACY,IAAD,CAAP,CADY,CAEZ;AACD,OATH;AAUD;AACF,GAdQ,EAcN,EAdM,CAAT;;AAeA,QAAMC,WAAW,GAAId,IAAD,IAAU;AAC5BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMe,gBAAgB,GAAIC,KAAD,IAAW;AAClCb,IAAAA,OAAO,CAACa,KAAD,CAAP;AACD,GAFD;AAMD,C,CAID;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAGA;;;GApESjB,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './components/login'\n\nfunction App() {\n  const [user, setUser] = useState({})\n  const [form, setForm] = useState(\"\")\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetch('http://localhost:3001/api/v1/auto_login', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(resp => resp.json())\n        .then(data => {\n          setUser(data)\n          // console.log(data)\n        })\n    }\n  }, [])\n  const handleLogin = (user) => {\n    setUser(user)\n  }\n\n  const handleFormSwitch = (input) => {\n    setForm(input)\n  }\n\n\n\n}\n\n\n\n// class App extends React.Component {\n//   state = {\n//     isLoggedIn: false\n//   }\n\n//   componentDidMount(){\n//     this.handleLogin();\n//   }\n\n//   handleLogin = () => {\n//     if(localStorage.getItem('token')) {\n//       this.setState({ isLoggedIn: true})\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Router>\n//           <Switch>\n\n//             <Route path=\"/login\" component={() => <Login login={this.state.isLoggedIn} handleLogin={this.handleLogin}/>} />\n\n\n\n\n//           </Switch>\n//        </Router>\n\n\n//           </div>\n//     )\n//   }\n\n\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}