{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction getSteps() {\n  return ['1', '2', '3', '4', '5', '6', '7', '8'];\n}\n\nfunction CreateProject() {\n  _s();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [title, setTitle] = useState('');\n  const [story, setStory] = useState('');\n  const [timeline, setTimeline] = useState(null);\n  const [image, setImage] = useState('');\n  const [fundraising_goal, setFundraisingGoal] = useState(null);\n  const [github, setGithub] = useState('');\n  const [language, setLanguage] = useState('');\n  const [stage, setStage] = useState('');\n  const data = useLocation();\n\n  function submitValue() {\n    const details = {\n      'Title': title,\n      'Story': story,\n      'Timeline': timeline,\n      'Fundraising Goal': fundraising_goal,\n      'Image': image,\n      'Github': github,\n      'Language': language,\n      'Stage': stage,\n      'User': data.state.user\n    };\n    console.log(details);\n  }\n\n  const handleNext = e => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const [projects, setProjects] = useState([]);\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n\n  const createNew = () => {\n    fetch('http://localhost:3001/api/v1/projects', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        story: story,\n        timeline: parseInt(timeline),\n        fundraising_goal: parseInt(fundraising_goal),\n        image: image,\n        github: github,\n        language: language,\n        stage: stage,\n        user_id: data.state.user.id\n      })\n    }).then(r => r.json()).then(project => {\n      setProjects([...projects, project]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      orientation: \"vertical\",\n      children: [/*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Name your Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Write your story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setStory(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"What's your timeline?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setTimeline(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Do you have a fundraising goal? Enter the amount you want to reach\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setFundraisingGoal(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Cover image?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setImage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"Link your Github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setGithub(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"What language/stack are you using?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setLanguage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Step, {\n        children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n          children: \"What stage are you at?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setStage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.actionsContainer,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleNext,\n                className: classes.button,\n                children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n      square: true,\n      elevation: 0,\n      className: classes.resetContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"All steps completed - you're finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: \"/new\",\n          state: {\n            title,\n            story,\n            timeline,\n            fundraising_goal,\n            image,\n            github,\n            language,\n            stage,\n            data\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: createNew,\n          className: classes.button,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        className: classes.button,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateProject, \"2QdLxhRjyHhHMC8SHSBSFySSFPQ=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = CreateProject;\nexport default _c2 = withRouter(CreateProject);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateProject\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CreateProject.js"],"names":["React","useEffect","useState","Input","makeStyles","Stepper","Step","StepLabel","StepContent","Button","Paper","Typography","Link","useLocation","withRouter","useStyles","theme","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","getSteps","CreateProject","classes","activeStep","setActiveStep","steps","title","setTitle","story","setStory","timeline","setTimeline","image","setImage","fundraising_goal","setFundraisingGoal","github","setGithub","language","setLanguage","stage","setStage","data","submitValue","details","state","user","console","log","handleNext","e","prevActiveStep","handleBack","handleReset","projects","setProjects","token","localStorage","getItem","fetch","then","res","json","createNew","method","headers","Authorization","body","JSON","stringify","parseInt","user_id","id","r","project","target","value","length","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport {useLocation} from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction getSteps() {\n    return ['1', '2', '3', '4', '5', '6', '7', '8'];\n  }\n  \nfunction CreateProject() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const [title, setTitle] = useState('');\n    const [story, setStory] = useState('');\n    const [timeline, setTimeline] = useState(null);\n    const [image, setImage] = useState('')\n    const [fundraising_goal, setFundraisingGoal] = useState(null);\n    const [github, setGithub] = useState('');\n    const [language, setLanguage] = useState('');\n    const [stage, setStage] = useState('');\n    const data = useLocation();\n\n    function submitValue ()  {\n        const details = {\n            'Title': title,\n            'Story': story,\n            'Timeline': timeline,\n            'Fundraising Goal': fundraising_goal,\n            'Image': image,\n            'Github': github,\n            'Language': language,\n            'Stage': stage,\n            'User': data.state.user\n\n        }\n        console.log(details);\n     \n\n    }\n\n    const handleNext = (e) => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n\n    \n    const [projects, setProjects] = useState([]);\n    const token = localStorage.getItem('token');\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects', )\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const createNew = () => {\n        fetch('http://localhost:3001/api/v1/projects',\n        {\n            method: 'POST',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n\n            },\n            body: JSON.stringify({\n                title: title,\n                story: story,\n                timeline: parseInt(timeline),\n                fundraising_goal: parseInt(fundraising_goal),\n                image: image,\n                github: github,\n                language: language,\n                stage: stage,\n                user_id: data.state.user.id\n            }),\n        })\n\n\n        .then(r => r.json())\n        .then(project => {\n            setProjects([...projects, project]);\n        \n    })\n}\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} orientation=\"vertical\">\n\n                <Step >\n                    <StepLabel>Name your Project</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTitle(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Write your story</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStory(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What's your timeline?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setTimeline(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Do you have a fundraising goal? Enter the amount you want to reach</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setFundraisingGoal(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Cover image?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setImage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>Link your Github</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setGithub(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What language/stack are you using?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setLanguage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n                <Step >\n                    <StepLabel>What stage are you at?</StepLabel>\n                    <StepContent>\n                        <Typography>\n                            <Input onChange={e => setStage(e.target.value)} >\n                                {/* {getStepContent(index)} */}\n\n                            </Input>\n                        </Typography>\n\n                        <div className={classes.actionsContainer}>\n                            <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Back\n                  </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n\n                            </div>\n                        </div>\n\n\n\n                    </StepContent>\n                </Step>\n\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}>\n                    <Typography>All steps completed - you&apos;re finished</Typography>\n                    <Link to={{\n                        pathname: \"/new\",\n                        state: {\n                           \n                            title,\n                            story,\n                            timeline,\n                            fundraising_goal,\n                            image,\n                            github,\n                            language,\n                            stage,\n                            data\n                        }\n                        \n\n                    }} >\n                       <Button onClick={createNew}  className={classes.button}>\n                            Create\n          </Button>\n                    </Link>\n                    <Button onClick={handleReset} className={classes.button}>\n                        Reset\n          </Button>\n\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(CreateProject)"]},"metadata":{},"sourceType":"module"}