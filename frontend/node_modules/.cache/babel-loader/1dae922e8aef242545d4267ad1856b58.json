{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Grow from '@material-ui/core/Grow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport { useLocation } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst ProjectShow = () => {\n  _s();\n\n  //   const useStyle = makeStyles({\n  //     root: {\n  //         minWidth: 275,\n  //         height: 400\n  //     },\n  //     bullet: {\n  //         display: 'inline-block',\n  //         margin: '0 2px',\n  //         transform: 'scale(0.8)',\n  //     },\n  //     title: {\n  //         fontSize: 14,\n  //     },\n  //     pos: {\n  //         marginBottom: 12,\n  //     },\n  //   });\n  // console.log(useLocation())\n  const data = useLocation(); // const styles = useStyle();\n  // const useStyles = makeStyles((theme) => ({\n  //   root: {\n  //     height: 180,\n  //   },\n  //   container: {\n  //     display: 'flex',\n  //   },\n  //   paper: {\n  //     margin: theme.spacing(1),\n  //   },\n  //   svg: {\n  //     width: 100,\n  //     height: 100,\n  //   },\n  //   polygon: {\n  //     fill: theme.palette.common.white,\n  //     stroke: theme.palette.divider,\n  //     strokeWidth: 1,\n  //   },\n  // }));\n  // const classes = useStyles();\n  // const [checked, setChecked] = React.useState(false);\n  // const handleChange = () => {\n  //   setChecked((prev) => !prev);\n  // };\n\n  const info = useLocation(); // console.log(data.state)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProjectShowNav, {\n      user: info.state.user,\n      project: info.state.project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.root,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: data.state.project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: data.state.project.story\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.pos,\n          color: \"textSecondary\",\n          children: [\"timeline: \", data.state.project.timeline, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"fundraising goal: $\", data.state.project.fundraising_goal, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: data.state.project.github,\n            children: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectTabs, {\n      project: data.state.project,\n      user: data.state.user,\n      posts: data.state.posts,\n      supporters: data.state.supporters,\n      comments: data.state.comments,\n      commenters: data.state.commenters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ProjectShow, \"QAsadZXEAKzeKokdNKPw3kAirhM=\", false, function () {\n  return [useLocation, useLocation];\n});\n\n_c = ProjectShow;\nexport default ProjectShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectShow\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/ProjectShow.js"],"names":["React","ProjectShowNav","makeStyles","Switch","Paper","Grow","FormControlLabel","ProjectTabs","useLocation","Card","CardActions","CardContent","Button","Typography","GitHubIcon","Link","EditIcon","ProjectShow","data","info","state","user","project","styles","root","title","story","pos","timeline","fundraising_goal","github","posts","supporters","comments","commenters"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProjectShowNav from './Navbars/ProjectShowNav';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Paper from '@material-ui/core/Paper';\nimport Grow from '@material-ui/core/Grow';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ProjectTabs from './Tabs/ProjectTabs';\nimport {useLocation} from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { Link } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\n\n\nconst ProjectShow = () =>  {\n//   const useStyle = makeStyles({\n//     root: {\n//         minWidth: 275,\n//         height: 400\n//     },\n//     bullet: {\n//         display: 'inline-block',\n//         margin: '0 2px',\n//         transform: 'scale(0.8)',\n//     },\n//     title: {\n//         fontSize: 14,\n//     },\n//     pos: {\n//         marginBottom: 12,\n//     },\n//   });\n  \n  // console.log(useLocation())\n  const data = useLocation()\n  // const styles = useStyle();\n  // const useStyles = makeStyles((theme) => ({\n  //   root: {\n  //     height: 180,\n  //   },\n  //   container: {\n  //     display: 'flex',\n  //   },\n  //   paper: {\n  //     margin: theme.spacing(1),\n  //   },\n  //   svg: {\n  //     width: 100,\n  //     height: 100,\n  //   },\n  //   polygon: {\n  //     fill: theme.palette.common.white,\n  //     stroke: theme.palette.divider,\n  //     strokeWidth: 1,\n  //   },\n  // }));\n  \n\n    // const classes = useStyles();\n    // const [checked, setChecked] = React.useState(false);\n  \n    // const handleChange = () => {\n    //   setChecked((prev) => !prev);\n    // };\n    const info = useLocation()\n    // console.log(data.state)\n\n    return (\n\n  <div>\n      <ProjectShowNav user={info.state.user} project={info.state.project}/>\n{/*    \n      <div className={classes.root}>\n        <FormControlLabel\n          control={<Switch checked={checked} onChange={handleChange} />}\n          label=\"Show\"\n        />\n        <div className={classes.container}>\n          <Grow in={checked}>\n            <Paper elevation={4} className={classes.paper}>\n              <svg className={classes.svg}>\n                <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n              </svg>\n            </Paper>\n          </Grow>\n        \n          <Grow\n            in={checked}\n            style={{ transformOrigin: '0 0 0' }}\n            {...(checked ? { timeout: 1000 } : {})}\n          >\n            <Paper elevation={4} className={classes.paper}>\n              <svg className={classes.svg}>\n                <polygon points=\"0,100 50,00, 100,100\" className={classes.polygon} />\n              </svg>\n            </Paper>\n          </Grow>\n        </div>\n      </div> */}\n      <Card className={styles.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\n                    {data.state.project.title}\n          </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                   {data.state.project.story}\n          </Typography>\n                <Typography className={styles.pos} color=\"textSecondary\">\n                   timeline: {data.state.project.timeline} days\n          </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                    fundraising goal: ${data.state.project.fundraising_goal}\n            <br />\n        \n                <Link href={data.state.project.github} >\n                    <GitHubIcon />\n                </Link>\n                </Typography>\n            </CardContent>\n      \n        </Card>\n  \n      <ProjectTabs project={data.state.project} user={data.state.user} posts={data.state.posts}\n                  supporters={data.state.supporters} comments={data.state.comments}\n                  commenters={data.state.commenters} />\n      </div>\n    \n\n\n        )\n    }\n\n\nexport default ProjectShow;"]},"metadata":{},"sourceType":"module"}