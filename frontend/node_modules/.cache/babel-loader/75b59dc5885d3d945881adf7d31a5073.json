{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 500,\n    minWidth: 350,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\nexport default function CommentCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [allCommenters, setAllCommenters] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`).then(res => res.json()).then(project => setAllCommenters(project.commenters));\n  }, []);\n  let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id);\n\n  const avatar = i => {\n    for (i = 0; i < thisCommenter.length; i++) {\n      return thisCommenter[i].profile_pic;\n    }\n  };\n\n  const username = i => {\n    for (i = 0; i < thisCommenter.length; i++) {\n      return thisCommenter[i].username;\n    }\n  };\n\n  console.log(thisCommenter);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          src: avatar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        zeroMinWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [props.comment.blurb, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), \"@\", username()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentCard, \"VOcAkfc70cDBczAyolkwohoBokA=\", false, function () {\n  return [useStyles];\n});\n\n_c = CommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/CommentCard.js"],"names":["React","useState","useEffect","Paper","makeStyles","Grid","Avatar","Typography","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","minWidth","margin","CommentCard","props","classes","allCommenters","setAllCommenters","fetch","project","id","then","res","json","commenters","thisCommenter","filter","commenter","comment","user_id","avatar","i","length","profile_pic","username","console","log","blurb"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 500,\n    minWidth: 350,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function CommentCard(props) {\n  const classes = useStyles();\n  const [allCommenters, setAllCommenters] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n      .then((res) => res.json())\n      .then((project) => setAllCommenters(project.commenters));\n  }, []);\n\n  let thisCommenter = allCommenters.filter(\n    (commenter) => commenter.id == props.comment.user_id\n  );\n  const avatar = (i) => {\n    for (i = 0; i < thisCommenter.length; i++) {\n      return thisCommenter[i].profile_pic;\n    }\n  };\n\n  const username = (i) => {\n    for (i = 0; i < thisCommenter.length; i++) {\n      return thisCommenter[i].username;\n    }\n  };\n\n  console.log(thisCommenter);\n  return (\n    <Paper className={classes.paper}>\n      <Grid container wrap=\"nowrap\" spacing={2}>\n        <Grid item>\n          <Avatar src={avatar()}></Avatar>\n        </Grid>\n        <Grid item xs zeroMinWidth>\n          <Typography>\n            {props.comment.blurb}\n            <br></br>@{username()}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}