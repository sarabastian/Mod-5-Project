{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\nexport default function SupportingProjectCommentCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const [allCommenters, setAllCommenters] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`).then(res => res.json()).then(project => setAllCommenters(project.commenters));\n  }, []);\n  let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id);\n\n  for (i = 0; i < thisCommenter.length; i++) {\n    return thisCommenter[i].profile + pic;\n  }\n\n  console.log(thisCommenter);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        zeroMinWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: props.comment.blurb\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n\n_s(SupportingProjectCommentCard, \"VOcAkfc70cDBczAyolkwohoBokA=\", false, function () {\n  return [useStyles];\n});\n\n_c = SupportingProjectCommentCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupportingProjectCommentCard\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/components/SupportingProjectCommentCard.js"],"names":["React","useState","useEffect","Paper","makeStyles","Grid","Avatar","Typography","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","SupportingProjectCommentCard","props","classes","allCommenters","setAllCommenters","fetch","project","id","then","res","json","commenters","thisCommenter","filter","commenter","comment","user_id","i","length","profile","pic","console","log","blurb"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAHL,GADiC;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,MAAM,EAAG,GAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CAAiB,SAFvB;AAGLD,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAHJ;AANgC,CAAZ,CAAD,CAA5B;AAeA,eAAe,SAASI,4BAAT,CAAsCC,KAAtC,EAA4C;AAAA;;AACvD,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,KAAK,CAAE,yCAAwCJ,KAAK,CAACK,OAAN,CAAcC,EAAG,EAA3D,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQF,OAAO,IAAIF,gBAAgB,CAACE,OAAO,CAACK,UAAT,CAFnC;AAGD,GAJM,EAIJ,EAJI,CAAT;AAOE,MAAIC,aAAa,GAAGT,aAAa,CAACU,MAAd,CAAqBC,SAAS,IAAIA,SAAS,CAACP,EAAV,IAAgBN,KAAK,CAACc,OAAN,CAAcC,OAAhE,CAApB;;AACA,OAAKC,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAEL,aAAa,CAACM,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpC,WAAOL,aAAa,CAACK,CAAD,CAAb,CAAiBE,OAAjB,GAAyBC,GAAhC;AAAqC;;AAG/CC,EAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ;AACA,sBAIA,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,OAAO,CAACL,KAA1B;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,EAAC,QAArB;AAA8B,MAAA,OAAO,EAAE,CAAvC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAc,QAAA,YAAY,MAA1B;AAAA,+BACE,QAAC,UAAD;AAAA,oBACCI,KAAK,CAACc,OAAN,CAAcQ;AADf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAJA;AAoBC;;GArCuBvB,4B;UACJV,S;;;KADIU,4B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\nexport default function SupportingProjectCommentCard(props){\n    const classes = useStyles();\n    const [allCommenters, setAllCommenters] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3001/api/v1/projects/${props.project.id}`)\n          .then(res => res.json())\n          .then(project => setAllCommenters(project.commenters));\n      }, []);\n    \n      \n      let thisCommenter = allCommenters.filter(commenter => commenter.id == props.comment.user_id )\n      for (i=0; i< thisCommenter.length; i++) {\n          return thisCommenter[i].profile+pic }\n\n    \nconsole.log(thisCommenter)\nreturn(\n\n\n\n<Paper className={classes.paper}>\n<Grid container wrap=\"nowrap\" spacing={2}>\n  <Grid item>\n  {/* <Avatar src={c.profile_pic}></Avatar>  */}\n\n  </Grid>\n  <Grid item xs zeroMinWidth>\n    <Typography >\n    {props.comment.blurb}\n     {/* <br></br>@{thisCommenter.length == 1 ? thisCommenter.username : null} */}\n    </Typography>\n  </Grid>\n</Grid>\n</Paper>\n)\n\n}"]},"metadata":{},"sourceType":"module"}