{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search() {\n  _s();\n\n  const classes = useStyles();\n  const [projects, setProjects] = React.useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  console.log(projects);\n  const options = projects.map(project => {\n    const firstLetter = project.language[0].toUpperCase();\n    return {\n      firstLetter,\n      ...project\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"grouped-demo\",\n    options: options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter)),\n    groupBy: option => option.firstLetter,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      label: \"With categories\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this) // <div className={classes.search}>\n  //     <div className={classes.searchIcon}>\n  //         <SearchIcon />\n  //     </div>\n  //     <InputBase\n  //         placeholder=\"Search…\"\n  //         classes={{\n  //             root: classes.inputRoot,\n  //             input: classes.inputInput,\n  //         }}\n  //         inputProps={{ 'aria-label': 'search' }}\n  //     />\n  // </div>\n  ;\n}\n\n_s(Search, \"SLTPTDG2OM/zl0k1BtXCOzlDuu4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","InputBase","fade","makeStyles","SearchIcon","TextField","Autocomplete","useStyles","theme","root","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","classes","projects","setProjects","useState","fetch","then","res","json","console","log","options","map","project","firstLetter","language","toUpperCase","sort","a","b","localeCompare","option","title","params"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,0BAAjC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAMrCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,YAAY,EAAEL,KAAK,CAACM,KAAN,CAAYD,YAFtB;AAGJE,IAAAA,eAAe,EAAEb,IAAI,CAACM,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAHjB;AAIJ,eAAW;AACPH,MAAAA,eAAe,EAAEb,IAAI,CAACM,KAAK,CAACQ,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADd,KAJP;AAOJC,IAAAA,UAAU,EAAE,CAPR;AAQJC,IAAAA,KAAK,EAAE,MARH;AASJ,KAACZ,KAAK,CAACa,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BH,MAAAA,UAAU,EAAEX,KAAK,CAACe,OAAN,CAAc,CAAd,CADc;AAE1BH,MAAAA,KAAK,EAAE;AAFmB;AAT1B,GAN6B;AAoBrCI,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAEjB,KAAK,CAACe,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADD;AAERG,IAAAA,MAAM,EAAE,MAFA;AAGRd,IAAAA,QAAQ,EAAE,UAHF;AAIRe,IAAAA,aAAa,EAAE,MAJP;AAKRC,IAAAA,OAAO,EAAE,MALD;AAMRC,IAAAA,UAAU,EAAE,QANJ;AAORC,IAAAA,cAAc,EAAE;AAPR,GApByB;AA6BrCC,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GA7B0B;AAgCrCC,EAAAA,UAAU,EAAE;AACRR,IAAAA,OAAO,EAAEjB,KAAK,CAACe,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADD;AAER;AACAW,IAAAA,WAAW,EAAG,cAAa1B,KAAK,CAACe,OAAN,CAAc,CAAd,CAAiB,KAHpC;AAIRY,IAAAA,UAAU,EAAE3B,KAAK,CAAC4B,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAJJ;AAKRjB,IAAAA,KAAK,EAAE,MALC;AAMR,KAACZ,KAAK,CAACa,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC1BF,MAAAA,KAAK,EAAE,MADmB;AAE1B,iBAAW;AACPA,QAAAA,KAAK,EAAE;AADA;AAFe;AANtB;AAhCyB,CAAZ,CAAD,CAA5B;AA+CA,eAAe,SAASkB,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,OAAO,GAAGhC,SAAS,EAAzB;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0B1C,KAAK,CAAC2C,QAAN,CAAe,EAAf,CAAhC;AAGA1C,EAAAA,SAAS,CAAC,MAAM;AACZ2C,IAAAA,KAAK,CAAC,wCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQJ,QAAQ,IAAIC,WAAW,CAACD,QAAD,CAF/B;AAGD,GAJM,EAIJ,EAJI,CAAT;AAKJO,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAEA,QAAMS,OAAO,GAAGT,QAAQ,CAACU,GAAT,CAAcC,OAAD,IAAa;AACtC,UAAMC,WAAW,GAAGD,OAAO,CAACE,QAAR,CAAiB,CAAjB,EAAoBC,WAApB,EAApB;AACA,WAAO;AACPF,MAAAA,WADO;AACM,SAAGD;AADT,KAAP;AAID,GANa,CAAhB;AAOI,sBACI,QAAC,YAAD;AACA,IAAA,EAAE,EAAC,cADH;AAEA,IAAA,OAAO,EAAEF,OAAO,CAACM,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAACA,CAAC,CAACL,WAAF,CAAcM,aAAd,CAA4BF,CAAC,CAACJ,WAA9B,CAAxB,CAFT;AAGA,IAAA,OAAO,EAAGO,MAAD,IAAYA,MAAM,CAACP,WAH5B;AAIA,IAAA,cAAc,EAAGO,MAAD,IAAYA,MAAM,CAACC,KAJnC;AAKA,IAAA,KAAK,EAAE;AAAExC,MAAAA,KAAK,EAAE;AAAT,KALP;AAMA,IAAA,WAAW,EAAGyC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,iBAA7B;AAA+C,MAAA,OAAO,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AANzB;AAAA;AAAA;AAAA;AAAA,UADJ,CAWI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBJ;AAyBH;;GA5CuBvB,M;UACJ/B,S;;;KADI+B,M","sourcesContent":["import React, { useEffect } from 'react';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function Search() {\n    const classes = useStyles();\n    const [projects, setProjects] = React.useState([]) ;\n\n\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\nconsole.log(projects)\n\nconst options = projects.map((project) => {\n    const firstLetter = project.language[0].toUpperCase();\n    return {\n    firstLetter, ...project\n\n    };\n  });\n    return (\n        <Autocomplete\n        id=\"grouped-demo\"\n        options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n        groupBy={(option) => option.firstLetter}\n        getOptionLabel={(option) => option.title}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"With categories\" variant=\"outlined\" />}\n      />\n\n\n        // <div className={classes.search}>\n        //     <div className={classes.searchIcon}>\n        //         <SearchIcon />\n        //     </div>\n        //     <InputBase\n        //         placeholder=\"Search…\"\n        //         classes={{\n        //             root: classes.inputRoot,\n        //             input: classes.inputInput,\n        //         }}\n        //         inputProps={{ 'aria-label': 'search' }}\n        //     />\n        // </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}