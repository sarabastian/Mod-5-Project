{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/NewProjectNav';\nimport '../components/NewProjectCard';\n\nfunction NewProjectContainer() {\n  _s();\n\n  const props = useLocation(); // const project = [project, setProject] = useState({})\n\n  useEffect(() => {\n    async function fetchData() {\n      fetch('http://localhost:3001/api/v1/projects', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Auth-Key': localStorage.getItem('auth_key')\n        },\n        body: JSON.stringify({\n          title: props.state.title,\n          story: props.state.story,\n          timeline: parseInt(props.state.timeline),\n          fundraising_goal: parseInt(props.state.fundraising_goal),\n          image: props.state.image,\n          github: props.state.github,\n          language: props.state.language,\n          stage: props.state.stage,\n          user_id: props.state.data.state.user.id\n        })\n      }).then(r => r.json()).then(project => console.log(project));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewProjectNav, {\n      user: props.state.data.state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.state.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewProjectContainer, \"2f6U7GzjVwFGHYP/MbIilI/Ii84=\", false, function () {\n  return [useLocation];\n});\n\n_c = NewProjectContainer;\n;\nexport default NewProjectContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProjectContainer\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js"],"names":["React","useState","useEffect","useLocation","NewProjectNav","NewProjectContainer","props","fetchData","fetch","method","headers","localStorage","getItem","body","JSON","stringify","title","state","story","timeline","parseInt","fundraising_goal","image","github","language","stage","user_id","data","user","id","then","r","json","project","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,8BAAP;;AAGA,SAASC,mBAAT,GAA+B;AAAA;;AAI3B,QAAMC,KAAK,GAAGH,WAAW,EAAzB,CAJ2B,CAK3B;;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeK,SAAf,GAA2B;AACvBC,MAAAA,KAAK,CAAC,uCAAD,EACL;AACIC,QAAAA,MAAM,EAAE,MADZ;AAEIC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,oBAAU,kBAFL;AAGL,sBAAYC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAHP,SAFb;AAQIC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAEV,KAAK,CAACW,KAAN,CAAYD,KADF;AAEjBE,UAAAA,KAAK,EAAEZ,KAAK,CAACW,KAAN,CAAYC,KAFF;AAGjBC,UAAAA,QAAQ,EAAEC,QAAQ,CAACd,KAAK,CAACW,KAAN,CAAYE,QAAb,CAHD;AAIjBE,UAAAA,gBAAgB,EAAED,QAAQ,CAACd,KAAK,CAACW,KAAN,CAAYI,gBAAb,CAJT;AAKjBC,UAAAA,KAAK,EAAEhB,KAAK,CAACW,KAAN,CAAYK,KALF;AAMjBC,UAAAA,MAAM,EAAEjB,KAAK,CAACW,KAAN,CAAYM,MANH;AAOjBC,UAAAA,QAAQ,EAAElB,KAAK,CAACW,KAAN,CAAYO,QAPL;AAQjBC,UAAAA,KAAK,EAAEnB,KAAK,CAACW,KAAN,CAAYQ,KARF;AASjBC,UAAAA,OAAO,EAAEpB,KAAK,CAACW,KAAN,CAAYU,IAAZ,CAAiBV,KAAjB,CAAuBW,IAAvB,CAA4BC;AATpB,SAAf;AARV,OADK,CAAL,CAuBCC,IAvBD,CAuBMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAvBX,EAwBCF,IAxBD,CAwBMG,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAxBjB;AAyBH;AAEJ,GA7BQ,EA6BN,EA7BM,CAAT;AAgCA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE3B,KAAK,CAACW,KAAN,CAAYU,IAAZ,CAAiBV,KAAjB,CAAuBW;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKtB,KAAK,CAACW,KAAN,CAAYD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvDQX,mB;UAISF,W;;;KAJTE,mB;AAuDR;AAED,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/NewProjectNav';\nimport '../components/NewProjectCard'\n\n\nfunction NewProjectContainer() {\n\n\n\n    const props = useLocation();\n    // const project = [project, setProject] = useState({})\n\n\n    useEffect(() => {\n        async function fetchData() {\n            fetch('http://localhost:3001/api/v1/projects',\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Auth-Key': localStorage.getItem('auth_key')\n\n                },\n                body: JSON.stringify({\n                    title: props.state.title,\n                    story: props.state.story,\n                    timeline: parseInt(props.state.timeline),\n                    fundraising_goal: parseInt(props.state.fundraising_goal),\n                    image: props.state.image,\n                    github: props.state.github,\n                    language: props.state.language,\n                    stage: props.state.stage,\n                    user_id: props.state.data.state.user.id\n                }),\n            })\n\n\n            .then(r => r.json())\n            .then(project => console.log(project))\n        }\n\n    }, [])\n    \n\n    return (\n        <div>\n            <NewProjectNav user={props.state.data.state.user} />\n            <h1>{props.state.title}</h1>\n            {/* <NewProjectCard /> */}\n        </div>\n    )\n\n\n\n\n\n\n\n\n};\n\nexport default NewProjectContainer;"]},"metadata":{},"sourceType":"module"}