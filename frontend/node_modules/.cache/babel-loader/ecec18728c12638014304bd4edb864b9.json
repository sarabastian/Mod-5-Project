{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/NewProjectNav';\n\nfunction NewProjectContainer() {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const props = useLocation();\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        title: props.state.title,\n        story: props.state.story,\n        timeline: parseInt(props.state.timeline),\n        fundraisingGoal: parseInt(props.state.fundraisingGoal),\n        github: props.state.github,\n        language: props.state.language,\n        stage: props.state.stage,\n        user_id: props.state.data.state.user.id\n      })\n    }).then(r => r.json()).then(data => setProjects(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewProjectNav, {\n      user: props.state.data.state.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.state.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 1\n  }, this);\n}\n\n_s(NewProjectContainer, \"5H8FV4pfBFcZIZRTZ0i/pojTqyk=\", false, function () {\n  return [useLocation];\n});\n\n_c = NewProjectContainer;\n;\nexport default NewProjectContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProjectContainer\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/NewProjectContainer.js"],"names":["React","useState","useEffect","useLocation","NewProjectNav","NewProjectContainer","projects","setProjects","props","fetch","method","headers","body","JSON","stringify","title","state","story","timeline","parseInt","fundraisingGoal","github","language","stage","user_id","data","user","id","then","r","json"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAGA,SAASC,mBAAT,GAA+B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMO,KAAK,GAAGL,WAAW,EAAzB;AAGAD,EAAAA,SAAS,CAAC,MAAM;AAGZO,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFkC;AAO3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACbC,QAAAA,KAAK,EAAEP,KAAK,CAACQ,KAAN,CAAYD,KADN;AAEbE,QAAAA,KAAK,EAAET,KAAK,CAACQ,KAAN,CAAYC,KAFN;AAGbC,QAAAA,QAAQ,EAAEC,QAAQ,CAACX,KAAK,CAACQ,KAAN,CAAYE,QAAb,CAHL;AAIbE,QAAAA,eAAe,EAAED,QAAQ,CAACX,KAAK,CAACQ,KAAN,CAAYI,eAAb,CAJZ;AAKbC,QAAAA,MAAM,EAAEb,KAAK,CAACQ,KAAN,CAAYK,MALP;AAMbC,QAAAA,QAAQ,EAAEd,KAAK,CAACQ,KAAN,CAAYM,QANT;AAObC,QAAAA,KAAK,EAAEf,KAAK,CAACQ,KAAN,CAAYO,KAPN;AAQbC,QAAAA,OAAO,EAAEhB,KAAK,CAACQ,KAAN,CAAYS,IAAZ,CAAiBT,KAAjB,CAAuBU,IAAvB,CAA4BC;AARxB,OAAf;AAPqC,KAA1C,CAAL,CAkBCC,IAlBD,CAkBMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EAlBT,EAmBCF,IAnBD,CAmBMH,IAAI,IAAIlB,WAAW,CAACkB,IAAD,CAnBzB;AAuBH,GA1BQ,CAAT;AA6BI,sBACR;AAAA,4BACY,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEjB,KAAK,CAACQ,KAAN,CAAYS,IAAZ,CAAiBT,KAAjB,CAAuBU;AAA5C;AAAA;AAAA;AAAA;AAAA,YADZ,eAEA;AAAA,gBAAKlB,KAAK,CAACQ,KAAN,CAAYD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADQ;AAUP;;GA5CQV,mB;UAESF,W;;;KAFTE,mB;AA4CR;AAED,eAAeA,mBAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport NewProjectNav from '../components/NewProjectNav'\n\n\nfunction NewProjectContainer() {\n    const [projects, setProjects] = useState([])\n    const props = useLocation();\n\n\n    useEffect(() => {\n    \n\n        fetch('http://localhost:3001/api/v1/projects', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n        \n            },\n            body: JSON.stringify({ \n                    title: props.state.title,\n                    story: props.state.story,\n                    timeline: parseInt(props.state.timeline),\n                    fundraisingGoal: parseInt(props.state.fundraisingGoal),\n                    github: props.state.github,\n                    language: props.state.language,\n                    stage: props.state.stage, \n                    user_id: props.state.data.state.user.id\n            }),\n        })\n        .then(r=>r.json())\n        .then(data => setProjects(data))\n      \n    \n    \n    })\n\n\n        return(\n<div>\n            <NewProjectNav user={props.state.data.state.user}/>\n<h1>{props.state.title}</h1>\n</div>\n\n\n\n        )\n    \n};\n\nexport default NewProjectContainer;"]},"metadata":{},"sourceType":"module"}