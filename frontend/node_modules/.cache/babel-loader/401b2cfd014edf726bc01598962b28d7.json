{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nconst useSearchStyles = makeStyles(theme => ({\n  root: {\n    width: 280,\n    '& > * + *': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\nexport default function Search() {\n  _s();\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/v1/projects/').then(res => res.json()).then(projects => setProjects(projects));\n  }, []);\n  const classes = useStyles();\n  const searchClasses = useSearchStyles();\n  const [search, setParams] = React.useState('');\n  const [projects, setProjects] = React.useState([]);\n\n  const handleParams = e => {\n    setParams(e.target.value);\n  }; // console.log(projects)\n\n\n  console.log(search);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: searchClasses.root,\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      multiple: true,\n      limitTags: 2,\n      id: \"multiple-limit-tags\",\n      options: projects,\n      getOptionLabel: option => {\n        option.language;\n        setParams(option.language);\n      } // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n      ,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        color: \"secondary\",\n        placeholder: \"Search Projects by language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"uuaM54UiV9NjBNH51FmAIB4Qe9E=\", false, function () {\n  return [useStyles, useSearchStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/sarabastian/Flatiron/code/final-project/frontend/src/containers/Search.js"],"names":["React","useEffect","fade","makeStyles","SearchIcon","TextField","Autocomplete","IconButton","useSearchStyles","theme","root","width","marginTop","spacing","useStyles","flexGrow","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","fetch","then","res","json","projects","setProjects","classes","searchClasses","setParams","useState","handleParams","e","target","value","console","log","option","language","params"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\nconst useSearchStyles = makeStyles((theme) => ({\n    root: {\n      width: 280,\n      '& > * + *': {\n        marginTop: theme.spacing(3),\n      },\n    },\n  }));\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n\n\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\n\n\nexport default function Search() {\n    useEffect(() => {\n        fetch('http://localhost:3001/api/v1/projects/')\n          .then(res => res.json())\n          .then(projects => setProjects(projects));\n      }, []);\n\n    const classes = useStyles();\n    const searchClasses = useSearchStyles();\n    const [search, setParams] = React.useState('');\n\n    const [projects, setProjects] = React.useState([]) ;\n\n    const handleParams = (e) => {\n        setParams(e.target.value)\n    }\n   \n\n\n// console.log(projects)\nconsole.log(search)\n    return (\n        <div className={searchClasses.root}>\n          \n      <Autocomplete\n        \n        multiple\n        limitTags={2}\n        id=\"multiple-limit-tags\"\n        options={projects}\n        getOptionLabel={(option) => {option.language\n        setParams(option.language)\n        }}\n        // defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n \n        renderInput={(params) => (\n          <TextField {...params} color='secondary' placeholder=\"Search Projects by language\" />\n       \n        \n        )}\n  \n      />\n      <IconButton><SearchIcon />\n      \n      </IconButton>\n \n\n</div>\n\n             \n\n    )\n}"]},"metadata":{},"sourceType":"module"}